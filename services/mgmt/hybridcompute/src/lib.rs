#![doc = "generated by AutoRust 0.1.0"]
pub const USER_AGENT_SDK: &str = "azsdk-rust-mgmt_hybridcompute/0.1.0";
#[cfg(feature = "package-preview-2020-08")]
mod package_preview_2020_08;
#[cfg(feature = "package-preview-2020-08")]
pub use package_preview_2020_08::{models, operations, API_VERSION};
#[cfg(feature = "package-2019-03")]
mod package_2019_03;
#[cfg(feature = "package-2019-03")]
pub use package_2019_03::{models, operations, API_VERSION};
#[cfg(feature = "package-2019-08")]
mod package_2019_08;
#[cfg(feature = "package-2019-08")]
pub use package_2019_08::{models, operations, API_VERSION};
#[cfg(feature = "package-2019-12")]
mod package_2019_12;
#[cfg(feature = "package-2019-12")]
pub use package_2019_12::{models, operations, API_VERSION};
#[cfg(feature = "package-2020-07-30-preview")]
mod package_2020_07_30_preview;
#[cfg(feature = "package-2020-07-30-preview")]
pub use package_2020_07_30_preview::{models, operations, API_VERSION};
#[cfg(feature = "package-2020-08-02")]
mod package_2020_08_02;
#[cfg(feature = "package-2020-08-02")]
pub use package_2020_08_02::{models, operations, API_VERSION};
#[derive(Clone)]
pub struct OperationConfig {
    http_client: azure_core::HttpClientArc,
    token_credential: azure_core::TokenCredentialArc,
    token_credential_resource: String,
    base_path: String,
    api_version: String,
    user_agent: Option<String>,
}
impl OperationConfig {
    pub fn new(http_client: azure_core::HttpClientArc, token_credential: azure_core::TokenCredentialArc) -> Self {
        Self {
            http_client,
            token_credential,
            token_credential_resource: "https://management.azure.com/".to_owned(),
            base_path: "https://management.azure.com".to_owned(),
            api_version: API_VERSION.to_owned(),
            user_agent: Some(format!("{} ({})", USER_AGENT_SDK, std::env::consts::ARCH)),
        }
    }
    pub fn new_all(
        http_client: azure_core::HttpClientArc,
        token_credential: azure_core::TokenCredentialArc,
        token_credential_resource: String,
        base_path: String,
        api_version: String,
        user_agent: Option<String>,
    ) -> Self {
        Self {
            http_client,
            token_credential,
            token_credential_resource,
            base_path,
            api_version,
            user_agent,
        }
    }
    pub fn http_client(&self) -> &reqwest::Client {
        self.http_client.as_ref()
    }
    pub fn token_credential(&self) -> &dyn azure_core::TokenCredential {
        self.token_credential.as_ref().as_ref()
    }
    pub fn set_token_credential_resource(&mut self, token_credential_resource: String) {
        self.token_credential_resource = token_credential_resource;
    }
    pub fn token_credential_resource(&self) -> &str {
        &self.token_credential_resource
    }
    pub fn set_base_path(&mut self, base_path: String) {
        self.base_path = base_path;
    }
    pub fn base_path(&self) -> &str {
        &self.base_path
    }
    pub fn set_api_version(&mut self, api_version: String) {
        self.api_version = api_version;
    }
    pub fn api_version(&self) -> &str {
        &self.api_version
    }
    pub fn user_agent(&self) -> Option<&str> {
        self.user_agent.as_deref()
    }
    pub fn set_user_agent(&mut self, user_agent: Option<String>) {
        self.user_agent = user_agent;
    }
}
