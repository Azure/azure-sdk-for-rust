#![doc = "generated by AutoRust 0.1.0"]
#[cfg(feature = "package-2020-08")]
mod package_2020_08;
#[cfg(feature = "package-2020-08")]
pub use package_2020_08::{models, operations, API_VERSION};
#[cfg(feature = "package-2020-07")]
mod package_2020_07;
#[cfg(feature = "package-2020-07")]
pub use package_2020_07::{models, operations, API_VERSION};
#[cfg(feature = "package-2020-06")]
mod package_2020_06;
#[cfg(feature = "package-2020-06")]
pub use package_2020_06::{models, operations, API_VERSION};
#[cfg(feature = "package-2020-05")]
mod package_2020_05;
#[cfg(feature = "package-2020-05")]
pub use package_2020_05::{models, operations, API_VERSION};
#[cfg(feature = "package-2020-04")]
mod package_2020_04;
#[cfg(feature = "package-2020-04")]
pub use package_2020_04::{models, operations, API_VERSION};
#[cfg(feature = "package-2020-03")]
mod package_2020_03;
#[cfg(feature = "package-2020-03")]
pub use package_2020_03::{models, operations, API_VERSION};
#[cfg(feature = "package-2019-12")]
mod package_2019_12;
#[cfg(feature = "package-2019-12")]
pub use package_2019_12::{models, operations, API_VERSION};
#[cfg(feature = "package-2019-11")]
mod package_2019_11;
#[cfg(feature = "package-2019-11")]
pub use package_2019_11::{models, operations, API_VERSION};
#[cfg(feature = "package-2019-09")]
mod package_2019_09;
#[cfg(feature = "package-2019-09")]
pub use package_2019_09::{models, operations, API_VERSION};
#[cfg(feature = "package-2019-08")]
mod package_2019_08;
#[cfg(feature = "package-2019-08")]
pub use package_2019_08::{models, operations, API_VERSION};
#[cfg(feature = "package-2019-07")]
mod package_2019_07;
#[cfg(feature = "package-2019-07")]
pub use package_2019_07::{models, operations, API_VERSION};
#[cfg(feature = "package-2019-06")]
mod package_2019_06;
#[cfg(feature = "package-2019-06")]
pub use package_2019_06::{models, operations, API_VERSION};
#[cfg(feature = "package-2019-04")]
mod package_2019_04;
#[cfg(feature = "package-2019-04")]
pub use package_2019_04::{models, operations, API_VERSION};
#[cfg(feature = "package-2019-02")]
mod package_2019_02;
#[cfg(feature = "package-2019-02")]
pub use package_2019_02::{models, operations, API_VERSION};
#[cfg(feature = "package-2018-12")]
mod package_2018_12;
#[cfg(feature = "package-2018-12")]
pub use package_2018_12::{models, operations, API_VERSION};
#[cfg(feature = "package-2018-12-only")]
mod package_2018_12_only;
#[cfg(feature = "package-2018-12-only")]
pub use package_2018_12_only::{models, operations, API_VERSION};
#[cfg(feature = "package-2018-11")]
mod package_2018_11;
#[cfg(feature = "package-2018-11")]
pub use package_2018_11::{models, operations, API_VERSION};
#[cfg(feature = "package-2018-10")]
mod package_2018_10;
#[cfg(feature = "package-2018-10")]
pub use package_2018_10::{models, operations, API_VERSION};
#[cfg(feature = "package-2018-08")]
mod package_2018_08;
#[cfg(feature = "package-2018-08")]
pub use package_2018_08::{models, operations, API_VERSION};
#[cfg(feature = "package-2018-07")]
mod package_2018_07;
#[cfg(feature = "package-2018-07")]
pub use package_2018_07::{models, operations, API_VERSION};
#[cfg(feature = "package-2018-06")]
mod package_2018_06;
#[cfg(feature = "package-2018-06")]
pub use package_2018_06::{models, operations, API_VERSION};
#[cfg(feature = "package-2018-04")]
mod package_2018_04;
#[cfg(feature = "package-2018-04")]
pub use package_2018_04::{models, operations, API_VERSION};
#[cfg(feature = "package-2018-02")]
mod package_2018_02;
#[cfg(feature = "package-2018-02")]
pub use package_2018_02::{models, operations, API_VERSION};
#[cfg(feature = "package-2018-01")]
mod package_2018_01;
#[cfg(feature = "package-2018-01")]
pub use package_2018_01::{models, operations, API_VERSION};
#[cfg(feature = "package-2018-01-only")]
mod package_2018_01_only;
#[cfg(feature = "package-2018-01-only")]
pub use package_2018_01_only::{models, operations, API_VERSION};
#[cfg(feature = "package-2017-11")]
mod package_2017_11;
#[cfg(feature = "package-2017-11")]
pub use package_2017_11::{models, operations, API_VERSION};
#[cfg(feature = "package-2017-11-only")]
mod package_2017_11_only;
#[cfg(feature = "package-2017-11-only")]
pub use package_2017_11_only::{models, operations, API_VERSION};
#[cfg(feature = "package-2017-10")]
mod package_2017_10;
#[cfg(feature = "package-2017-10")]
pub use package_2017_10::{models, operations, API_VERSION};
#[cfg(feature = "package-2017-10-only")]
mod package_2017_10_only;
#[cfg(feature = "package-2017-10-only")]
pub use package_2017_10_only::{models, operations, API_VERSION};
#[cfg(feature = "package-2017-09")]
mod package_2017_09;
#[cfg(feature = "package-2017-09")]
pub use package_2017_09::{models, operations, API_VERSION};
#[cfg(feature = "package-2017-09-only")]
mod package_2017_09_only;
#[cfg(feature = "package-2017-09-only")]
pub use package_2017_09_only::{models, operations, API_VERSION};
#[cfg(feature = "package-2017-08")]
mod package_2017_08;
#[cfg(feature = "package-2017-08")]
pub use package_2017_08::{models, operations, API_VERSION};
#[cfg(feature = "package-2017-06")]
mod package_2017_06;
#[cfg(feature = "package-2017-06")]
pub use package_2017_06::{models, operations, API_VERSION};
#[cfg(feature = "package-2017-03")]
mod package_2017_03;
#[cfg(feature = "package-2017-03")]
pub use package_2017_03::{models, operations, API_VERSION};
#[cfg(feature = "package-2017-03-only")]
mod package_2017_03_only;
#[cfg(feature = "package-2017-03-only")]
pub use package_2017_03_only::{models, operations, API_VERSION};
#[cfg(feature = "package-2016-12")]
mod package_2016_12;
#[cfg(feature = "package-2016-12")]
pub use package_2016_12::{models, operations, API_VERSION};
#[cfg(feature = "package-2016-09")]
mod package_2016_09;
#[cfg(feature = "package-2016-09")]
pub use package_2016_09::{models, operations, API_VERSION};
#[cfg(feature = "package-2016-06")]
mod package_2016_06;
#[cfg(feature = "package-2016-06")]
pub use package_2016_06::{models, operations, API_VERSION};
#[cfg(feature = "package-2016-03")]
mod package_2016_03;
#[cfg(feature = "package-2016-03")]
pub use package_2016_03::{models, operations, API_VERSION};
#[cfg(feature = "package-2015-06split")]
mod package_2015_06split;
#[cfg(feature = "package-2015-06split")]
pub use package_2015_06split::{models, operations, API_VERSION};
#[cfg(feature = "package-2015-05-preview")]
mod package_2015_05_preview;
#[cfg(feature = "package-2015-05-preview")]
pub use package_2015_05_preview::{models, operations, API_VERSION};
#[cfg(feature = "profile-hybrid-2020-09-01")]
mod profile_hybrid_2020_09_01;
use azure_core::setters;
#[cfg(feature = "profile-hybrid-2020-09-01")]
pub use profile_hybrid_2020_09_01::{models, operations, API_VERSION};
pub fn config(
    http_client: std::sync::Arc<std::boxed::Box<dyn azure_core::HttpClient>>,
    token_credential: Box<dyn azure_core::TokenCredential>,
) -> OperationConfigBuilder {
    OperationConfigBuilder {
        api_version: None,
        http_client,
        base_path: None,
        token_credential,
        token_credential_resource: None,
    }
}
pub struct OperationConfigBuilder {
    api_version: Option<String>,
    http_client: std::sync::Arc<std::boxed::Box<dyn azure_core::HttpClient>>,
    base_path: Option<String>,
    token_credential: Box<dyn azure_core::TokenCredential>,
    token_credential_resource: Option<String>,
}
impl OperationConfigBuilder {
    setters! { api_version : String => Some (api_version) , base_path : String => Some (base_path) , token_credential_resource : String => Some (token_credential_resource) , }
    pub fn build(self) -> OperationConfig {
        OperationConfig {
            api_version: self.api_version.unwrap_or(API_VERSION.to_owned()),
            http_client: self.http_client,
            base_path: self.base_path.unwrap_or("https://management.azure.com".to_owned()),
            token_credential: Some(self.token_credential),
            token_credential_resource: self.token_credential_resource.unwrap_or("https://management.azure.com/".to_owned()),
        }
    }
}
pub struct OperationConfig {
    api_version: String,
    http_client: std::sync::Arc<std::boxed::Box<dyn azure_core::HttpClient>>,
    base_path: String,
    token_credential: Option<Box<dyn azure_core::TokenCredential>>,
    token_credential_resource: String,
}
impl OperationConfig {
    pub fn api_version(&self) -> &str {
        self.api_version.as_str()
    }
    pub fn http_client(&self) -> &dyn azure_core::HttpClient {
        self.http_client.as_ref().as_ref()
    }
    pub fn base_path(&self) -> &str {
        self.base_path.as_str()
    }
    pub fn token_credential(&self) -> Option<&dyn azure_core::TokenCredential> {
        self.token_credential.as_deref()
    }
    pub fn token_credential_resource(&self) -> &str {
        self.token_credential_resource.as_str()
    }
}
