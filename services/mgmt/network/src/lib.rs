#![doc = "generated by AutoRust 0.1.0"]
pub const USER_AGENT_SDK: &str = "azsdk-rust-mgmt_network/0.1.0";
#[cfg(feature = "package-2020-07")]
mod package_2020_07;
#[cfg(feature = "package-2020-07")]
pub use package_2020_07::{models, operations, API_VERSION};
#[cfg(feature = "package-2020-06")]
mod package_2020_06;
#[cfg(feature = "package-2020-06")]
pub use package_2020_06::{models, operations, API_VERSION};
#[cfg(feature = "package-2020-05")]
mod package_2020_05;
#[cfg(feature = "package-2020-05")]
pub use package_2020_05::{models, operations, API_VERSION};
#[cfg(feature = "package-2020-04")]
mod package_2020_04;
#[cfg(feature = "package-2020-04")]
pub use package_2020_04::{models, operations, API_VERSION};
#[cfg(feature = "package-2020-03")]
mod package_2020_03;
#[cfg(feature = "package-2020-03")]
pub use package_2020_03::{models, operations, API_VERSION};
#[cfg(feature = "package-2019-12")]
mod package_2019_12;
#[cfg(feature = "package-2019-12")]
pub use package_2019_12::{models, operations, API_VERSION};
#[cfg(feature = "package-2019-11")]
mod package_2019_11;
#[cfg(feature = "package-2019-11")]
pub use package_2019_11::{models, operations, API_VERSION};
#[cfg(feature = "package-2019-09")]
mod package_2019_09;
#[cfg(feature = "package-2019-09")]
pub use package_2019_09::{models, operations, API_VERSION};
#[cfg(feature = "package-2019-08")]
mod package_2019_08;
#[cfg(feature = "package-2019-08")]
pub use package_2019_08::{models, operations, API_VERSION};
#[cfg(feature = "package-2019-07")]
mod package_2019_07;
#[cfg(feature = "package-2019-07")]
pub use package_2019_07::{models, operations, API_VERSION};
#[cfg(feature = "package-2019-06")]
mod package_2019_06;
#[cfg(feature = "package-2019-06")]
pub use package_2019_06::{models, operations, API_VERSION};
#[cfg(feature = "package-2019-04")]
mod package_2019_04;
#[cfg(feature = "package-2019-04")]
pub use package_2019_04::{models, operations, API_VERSION};
#[cfg(feature = "package-2019-02")]
mod package_2019_02;
#[cfg(feature = "package-2019-02")]
pub use package_2019_02::{models, operations, API_VERSION};
#[cfg(feature = "package-2018-12")]
mod package_2018_12;
#[cfg(feature = "package-2018-12")]
pub use package_2018_12::{models, operations, API_VERSION};
#[cfg(feature = "package-2018-12-only")]
mod package_2018_12_only;
#[cfg(feature = "package-2018-12-only")]
pub use package_2018_12_only::{models, operations, API_VERSION};
#[cfg(feature = "package-2018-11")]
mod package_2018_11;
#[cfg(feature = "package-2018-11")]
pub use package_2018_11::{models, operations, API_VERSION};
#[cfg(feature = "package-2018-10")]
mod package_2018_10;
#[cfg(feature = "package-2018-10")]
pub use package_2018_10::{models, operations, API_VERSION};
#[cfg(feature = "package-2018-08")]
mod package_2018_08;
#[cfg(feature = "package-2018-08")]
pub use package_2018_08::{models, operations, API_VERSION};
#[cfg(feature = "package-2018-07")]
mod package_2018_07;
#[cfg(feature = "package-2018-07")]
pub use package_2018_07::{models, operations, API_VERSION};
#[cfg(feature = "package-2018-06")]
mod package_2018_06;
#[cfg(feature = "package-2018-06")]
pub use package_2018_06::{models, operations, API_VERSION};
#[cfg(feature = "package-2018-04")]
mod package_2018_04;
#[cfg(feature = "package-2018-04")]
pub use package_2018_04::{models, operations, API_VERSION};
#[cfg(feature = "package-2018-02")]
mod package_2018_02;
#[cfg(feature = "package-2018-02")]
pub use package_2018_02::{models, operations, API_VERSION};
#[cfg(feature = "package-2018-01")]
mod package_2018_01;
#[cfg(feature = "package-2018-01")]
pub use package_2018_01::{models, operations, API_VERSION};
#[cfg(feature = "package-2018-01-only")]
mod package_2018_01_only;
#[cfg(feature = "package-2018-01-only")]
pub use package_2018_01_only::{models, operations, API_VERSION};
#[cfg(feature = "package-2017-11")]
mod package_2017_11;
#[cfg(feature = "package-2017-11")]
pub use package_2017_11::{models, operations, API_VERSION};
#[cfg(feature = "package-2017-11-only")]
mod package_2017_11_only;
#[cfg(feature = "package-2017-11-only")]
pub use package_2017_11_only::{models, operations, API_VERSION};
#[cfg(feature = "package-2017-10")]
mod package_2017_10;
#[cfg(feature = "package-2017-10")]
pub use package_2017_10::{models, operations, API_VERSION};
#[cfg(feature = "package-2017-10-only")]
mod package_2017_10_only;
#[cfg(feature = "package-2017-10-only")]
pub use package_2017_10_only::{models, operations, API_VERSION};
#[cfg(feature = "package-2017-09")]
mod package_2017_09;
#[cfg(feature = "package-2017-09")]
pub use package_2017_09::{models, operations, API_VERSION};
#[cfg(feature = "package-2017-09-only")]
mod package_2017_09_only;
#[cfg(feature = "package-2017-09-only")]
pub use package_2017_09_only::{models, operations, API_VERSION};
#[cfg(feature = "package-2017-08")]
mod package_2017_08;
#[cfg(feature = "package-2017-08")]
pub use package_2017_08::{models, operations, API_VERSION};
#[cfg(feature = "package-2017-06")]
mod package_2017_06;
#[cfg(feature = "package-2017-06")]
pub use package_2017_06::{models, operations, API_VERSION};
#[cfg(feature = "package-2017-03")]
mod package_2017_03;
#[cfg(feature = "package-2017-03")]
pub use package_2017_03::{models, operations, API_VERSION};
#[cfg(feature = "package-2017-03-only")]
mod package_2017_03_only;
#[cfg(feature = "package-2017-03-only")]
pub use package_2017_03_only::{models, operations, API_VERSION};
#[cfg(feature = "package-2016-12")]
mod package_2016_12;
#[cfg(feature = "package-2016-12")]
pub use package_2016_12::{models, operations, API_VERSION};
#[cfg(feature = "package-2016-09")]
mod package_2016_09;
#[cfg(feature = "package-2016-09")]
pub use package_2016_09::{models, operations, API_VERSION};
#[cfg(feature = "package-2016-06")]
mod package_2016_06;
#[cfg(feature = "package-2016-06")]
pub use package_2016_06::{models, operations, API_VERSION};
#[cfg(feature = "package-2016-03")]
mod package_2016_03;
#[cfg(feature = "package-2016-03")]
pub use package_2016_03::{models, operations, API_VERSION};
#[cfg(feature = "package-2015-06split")]
mod package_2015_06split;
#[cfg(feature = "package-2015-06split")]
pub use package_2015_06split::{models, operations, API_VERSION};
#[cfg(feature = "package-2015-05-preview")]
mod package_2015_05_preview;
#[cfg(feature = "package-2015-05-preview")]
pub use package_2015_05_preview::{models, operations, API_VERSION};
#[cfg(feature = "profile-hybrid-2020-09-01")]
mod profile_hybrid_2020_09_01;
#[cfg(feature = "profile-hybrid-2020-09-01")]
pub use profile_hybrid_2020_09_01::{models, operations, API_VERSION};
#[derive(Clone)]
pub struct OperationConfig {
    http_client: azure_core::HttpClientArc,
    token_credential: azure_core::TokenCredentialArc,
    token_credential_resource: String,
    base_path: String,
    api_version: String,
    user_agent: Option<String>,
}
impl OperationConfig {
    pub fn new(http_client: azure_core::HttpClientArc, token_credential: azure_core::TokenCredentialArc) -> Self {
        Self {
            http_client,
            token_credential,
            token_credential_resource: "https://management.azure.com/".to_owned(),
            base_path: "https://management.azure.com".to_owned(),
            api_version: API_VERSION.to_owned(),
            user_agent: Some(format!("{} ({})", USER_AGENT_SDK, std::env::consts::ARCH)),
        }
    }
    pub fn new_all(
        http_client: azure_core::HttpClientArc,
        token_credential: azure_core::TokenCredentialArc,
        token_credential_resource: String,
        base_path: String,
        api_version: String,
        user_agent: Option<String>,
    ) -> Self {
        Self {
            http_client,
            token_credential,
            token_credential_resource,
            base_path,
            api_version,
            user_agent,
        }
    }
    pub fn http_client(&self) -> &reqwest::Client {
        self.http_client.as_ref()
    }
    pub fn token_credential(&self) -> &dyn azure_core::TokenCredential {
        self.token_credential.as_ref().as_ref()
    }
    pub fn set_token_credential_resource(&mut self, token_credential_resource: String) {
        self.token_credential_resource = token_credential_resource;
    }
    pub fn token_credential_resource(&self) -> &str {
        &self.token_credential_resource
    }
    pub fn set_base_path(&mut self, base_path: String) {
        self.base_path = base_path;
    }
    pub fn base_path(&self) -> &str {
        &self.base_path
    }
    pub fn set_api_version(&mut self, api_version: String) {
        self.api_version = api_version;
    }
    pub fn api_version(&self) -> &str {
        &self.api_version
    }
    pub fn user_agent(&self) -> Option<&str> {
        self.user_agent.as_deref()
    }
    pub fn set_user_agent(&mut self, user_agent: Option<String>) {
        self.user_agent = user_agent;
    }
}
