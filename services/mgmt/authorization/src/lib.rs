#![allow(clippy::module_inception)]
#![allow(clippy::too_many_arguments)]
#![allow(clippy::ptr_arg)]
#![allow(clippy::large_enum_variant)]
#![doc = "generated by AutoRust"]
#[cfg(feature = "package-2022-04-01-preview-only")]
pub mod package_2022_04_01_preview_only;
#[cfg(all(feature = "package-2022-04-01-preview-only", not(feature = "no-default-version")))]
pub use package_2022_04_01_preview_only::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "package-2021-01-01-preview-only")]
pub mod package_2021_01_01_preview_only;
#[cfg(all(feature = "package-2021-01-01-preview-only", not(feature = "no-default-version")))]
pub use package_2021_01_01_preview_only::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "package-2020-10-01-preview-only")]
pub mod package_2020_10_01_preview_only;
#[cfg(all(feature = "package-2020-10-01-preview-only", not(feature = "no-default-version")))]
pub use package_2020_10_01_preview_only::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "profile-hybrid-2020-09-01")]
pub mod profile_hybrid_2020_09_01;
#[cfg(all(feature = "profile-hybrid-2020-09-01", not(feature = "no-default-version")))]
pub use profile_hybrid_2020_09_01::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "package-2020-08-01-preview")]
pub mod package_2020_08_01_preview;
#[cfg(all(feature = "package-2020-08-01-preview", not(feature = "no-default-version")))]
pub use package_2020_08_01_preview::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "package-2020-04-01-preview")]
pub mod package_2020_04_01_preview;
#[cfg(all(feature = "package-2020-04-01-preview", not(feature = "no-default-version")))]
pub use package_2020_04_01_preview::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "package-2020-04-01-preview-only")]
pub mod package_2020_04_01_preview_only;
#[cfg(all(feature = "package-2020-04-01-preview-only", not(feature = "no-default-version")))]
pub use package_2020_04_01_preview_only::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "package-2020-03-01-preview")]
pub mod package_2020_03_01_preview;
#[cfg(all(feature = "package-2020-03-01-preview", not(feature = "no-default-version")))]
pub use package_2020_03_01_preview::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "package-2019-08-01-preview-only")]
pub mod package_2019_08_01_preview_only;
#[cfg(all(feature = "package-2019-08-01-preview-only", not(feature = "no-default-version")))]
pub use package_2019_08_01_preview_only::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "profile-hybrid-2019-03-01")]
pub mod profile_hybrid_2019_03_01;
#[cfg(all(feature = "profile-hybrid-2019-03-01", not(feature = "no-default-version")))]
pub use profile_hybrid_2019_03_01::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "package-2018-09-01-preview")]
pub mod package_2018_09_01_preview;
#[cfg(all(feature = "package-2018-09-01-preview", not(feature = "no-default-version")))]
pub use package_2018_09_01_preview::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "package-2018-09-01-preview-only")]
pub mod package_2018_09_01_preview_only;
#[cfg(all(feature = "package-2018-09-01-preview-only", not(feature = "no-default-version")))]
pub use package_2018_09_01_preview_only::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "package-2018-07-01-preview")]
pub mod package_2018_07_01_preview;
#[cfg(all(feature = "package-2018-07-01-preview", not(feature = "no-default-version")))]
pub use package_2018_07_01_preview::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "package-2018-07-01-preview-only")]
pub mod package_2018_07_01_preview_only;
#[cfg(all(feature = "package-2018-07-01-preview-only", not(feature = "no-default-version")))]
pub use package_2018_07_01_preview_only::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "package-2018-01-01-preview")]
pub mod package_2018_01_01_preview;
#[cfg(all(feature = "package-2018-01-01-preview", not(feature = "no-default-version")))]
pub use package_2018_01_01_preview::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "package-2018-01-01-preview-only")]
pub mod package_2018_01_01_preview_only;
#[cfg(all(feature = "package-2018-01-01-preview-only", not(feature = "no-default-version")))]
pub use package_2018_01_01_preview_only::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "package-2017-10-01-preview")]
pub mod package_2017_10_01_preview;
#[cfg(all(feature = "package-2017-10-01-preview", not(feature = "no-default-version")))]
pub use package_2017_10_01_preview::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "package-2017-10-01-preview-only")]
pub mod package_2017_10_01_preview_only;
#[cfg(all(feature = "package-2017-10-01-preview-only", not(feature = "no-default-version")))]
pub use package_2017_10_01_preview_only::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "package-2015-07-01")]
pub mod package_2015_07_01;
#[cfg(all(feature = "package-2015-07-01", not(feature = "no-default-version")))]
pub use package_2015_07_01::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "package-2015-06-01-preview")]
pub mod package_2015_06_01_preview;
#[cfg(all(feature = "package-2015-06-01-preview", not(feature = "no-default-version")))]
pub use package_2015_06_01_preview::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
