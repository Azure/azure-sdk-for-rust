#![allow(clippy::module_inception)]
#![allow(clippy::too_many_arguments)]
#![allow(clippy::ptr_arg)]
#![allow(clippy::large_enum_variant)]
#![doc = "generated by AutoRust 0.1.0"]
#[cfg(feature = "package-2021-10")]
pub mod package_2021_10;
#[cfg(all(feature = "package-2021-10", not(feature = "no-default-version")))]
pub use package_2021_10::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "package-preview-2021-10")]
pub mod package_preview_2021_10;
#[cfg(all(feature = "package-preview-2021-10", not(feature = "no-default-version")))]
pub use package_preview_2021_10::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "package-2021-07-preview")]
pub mod package_2021_07_preview;
#[cfg(all(feature = "package-2021-07-preview", not(feature = "no-default-version")))]
pub use package_2021_07_preview::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "package-2021-06")]
pub mod package_2021_06;
#[cfg(all(feature = "package-2021-06", not(feature = "no-default-version")))]
pub use package_2021_06::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "package-2021-05")]
pub mod package_2021_05;
#[cfg(all(feature = "package-2021-05", not(feature = "no-default-version")))]
pub use package_2021_05::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "package-2021-04")]
pub mod package_2021_04;
#[cfg(all(feature = "package-2021-04", not(feature = "no-default-version")))]
pub use package_2021_04::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "package-2021-04-preview")]
pub mod package_2021_04_preview;
#[cfg(all(feature = "package-2021-04-preview", not(feature = "no-default-version")))]
pub use package_2021_04_preview::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "package-2021-03")]
pub mod package_2021_03;
#[cfg(all(feature = "package-2021-03", not(feature = "no-default-version")))]
pub use package_2021_03::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "package-2021-03-preview")]
pub mod package_2021_03_preview;
#[cfg(all(feature = "package-2021-03-preview", not(feature = "no-default-version")))]
pub use package_2021_03_preview::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "package-preview-2021-04")]
pub mod package_preview_2021_04;
#[cfg(all(feature = "package-preview-2021-04", not(feature = "no-default-version")))]
pub use package_preview_2021_04::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "package-2021-01")]
pub mod package_2021_01;
#[cfg(all(feature = "package-2021-01", not(feature = "no-default-version")))]
pub use package_2021_01::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "package-2020-09")]
pub mod package_2020_09;
#[cfg(all(feature = "package-2020-09", not(feature = "no-default-version")))]
pub use package_2020_09::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "package-2020-06-preview")]
pub mod package_2020_06_preview;
#[cfg(all(feature = "package-2020-06-preview", not(feature = "no-default-version")))]
pub use package_2020_06_preview::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "package-2020-04")]
pub mod package_2020_04;
#[cfg(all(feature = "package-2020-04", not(feature = "no-default-version")))]
pub use package_2020_04::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "package-2020-03")]
pub mod package_2020_03;
#[cfg(all(feature = "package-2020-03", not(feature = "no-default-version")))]
pub use package_2020_03::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "package-2019-12")]
pub mod package_2019_12;
#[cfg(all(feature = "package-2019-12", not(feature = "no-default-version")))]
pub use package_2019_12::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "package-2019-08")]
pub mod package_2019_08;
#[cfg(all(feature = "package-2019-08", not(feature = "no-default-version")))]
pub use package_2019_08::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "package-2019-08-preview")]
pub mod package_2019_08_preview;
#[cfg(all(feature = "package-2019-08-preview", not(feature = "no-default-version")))]
pub use package_2019_08_preview::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "package-2015-04")]
pub mod package_2015_04;
#[cfg(all(feature = "package-2015-04", not(feature = "no-default-version")))]
pub use package_2015_04::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "package-2014-04")]
pub mod package_2014_04;
#[cfg(all(feature = "package-2014-04", not(feature = "no-default-version")))]
pub use package_2014_04::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "package-2015-11")]
pub mod package_2015_11;
#[cfg(all(feature = "package-2015-11", not(feature = "no-default-version")))]
pub use package_2015_11::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "package-2016-03-19")]
pub mod package_2016_03_19;
#[cfg(all(feature = "package-2016-03-19", not(feature = "no-default-version")))]
pub use package_2016_03_19::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
#[cfg(feature = "package-2016-03-31")]
pub mod package_2016_03_31;
#[cfg(all(feature = "package-2016-03-31", not(feature = "no-default-version")))]
pub use package_2016_03_31::{models, operations, operations::Client, operations::ClientBuilder, operations::Error};
