#![doc = "generated by AutoRust 0.1.0"]
#[cfg(feature = "package-2020-12")]
mod package_2020_12;
#[cfg(feature = "package-2020-12")]
pub use package_2020_12::{models, operations, API_VERSION};
#[cfg(feature = "package-2020-11")]
mod package_2020_11;
#[cfg(feature = "package-2020-11")]
pub use package_2020_11::{models, operations, API_VERSION};
#[cfg(feature = "package-2020-09")]
mod package_2020_09;
#[cfg(feature = "package-2020-09")]
pub use package_2020_09::{models, operations, API_VERSION};
#[cfg(feature = "package-2020-07")]
mod package_2020_07;
#[cfg(feature = "package-2020-07")]
pub use package_2020_07::{models, operations, API_VERSION};
#[cfg(feature = "package-2020-06")]
mod package_2020_06;
#[cfg(feature = "package-2020-06")]
pub use package_2020_06::{models, operations, API_VERSION};
#[cfg(feature = "package-2020-04")]
mod package_2020_04;
#[cfg(feature = "package-2020-04")]
pub use package_2020_04::{models, operations, API_VERSION};
#[cfg(feature = "package-2020-03")]
mod package_2020_03;
#[cfg(feature = "package-2020-03")]
pub use package_2020_03::{models, operations, API_VERSION};
#[cfg(feature = "package-2020-02")]
mod package_2020_02;
#[cfg(feature = "package-2020-02")]
pub use package_2020_02::{models, operations, API_VERSION};
#[cfg(feature = "package-2020-01")]
mod package_2020_01;
#[cfg(feature = "package-2020-01")]
pub use package_2020_01::{models, operations, API_VERSION};
#[cfg(feature = "package-2019-11")]
mod package_2019_11;
#[cfg(feature = "package-2019-11")]
pub use package_2019_11::{models, operations, API_VERSION};
#[cfg(feature = "package-2019-10-27-preview")]
mod package_2019_10_27_preview;
#[cfg(feature = "package-2019-10-27-preview")]
pub use package_2019_10_27_preview::{models, operations, API_VERSION};
#[cfg(feature = "package-2019-09-30-preview")]
mod package_2019_09_30_preview;
#[cfg(feature = "package-2019-09-30-preview")]
pub use package_2019_09_30_preview::{models, operations, API_VERSION};
#[cfg(feature = "package-2019-10")]
mod package_2019_10;
#[cfg(feature = "package-2019-10")]
pub use package_2019_10::{models, operations, API_VERSION};
#[cfg(feature = "package-2019-08")]
mod package_2019_08;
#[cfg(feature = "package-2019-08")]
pub use package_2019_08::{models, operations, API_VERSION};
#[cfg(feature = "package-2019-06")]
mod package_2019_06;
#[cfg(feature = "package-2019-06")]
pub use package_2019_06::{models, operations, API_VERSION};
#[cfg(feature = "package-2019-04")]
mod package_2019_04;
#[cfg(feature = "package-2019-04")]
pub use package_2019_04::{models, operations, API_VERSION};
#[cfg(feature = "package-2019-02")]
mod package_2019_02;
#[cfg(feature = "package-2019-02")]
pub use package_2019_02::{models, operations, API_VERSION};
#[cfg(feature = "package-2018-08-preview")]
mod package_2018_08_preview;
#[cfg(feature = "package-2018-08-preview")]
pub use package_2018_08_preview::{models, operations, API_VERSION};
#[cfg(feature = "package-2018-09-30-preview")]
mod package_2018_09_30_preview;
#[cfg(feature = "package-2018-09-30-preview")]
pub use package_2018_09_30_preview::{models, operations, API_VERSION};
#[cfg(feature = "package-2018-03")]
mod package_2018_03;
#[cfg(feature = "package-2018-03")]
pub use package_2018_03::{models, operations, API_VERSION};
#[cfg(feature = "package-2017-09")]
mod package_2017_09;
#[cfg(feature = "package-2017-09")]
pub use package_2017_09::{models, operations, API_VERSION};
#[cfg(feature = "package-2017-08")]
mod package_2017_08;
#[cfg(feature = "package-2017-08")]
pub use package_2017_08::{models, operations, API_VERSION};
#[cfg(feature = "package-2017-07")]
mod package_2017_07;
#[cfg(feature = "package-2017-07")]
pub use package_2017_07::{models, operations, API_VERSION};
#[cfg(feature = "package-2020-12-01-only")]
mod package_2020_12_01_only;
#[cfg(feature = "package-2020-12-01-only")]
pub use package_2020_12_01_only::{models, operations, API_VERSION};
#[cfg(feature = "package-2020-11-01-only")]
mod package_2020_11_01_only;
#[cfg(feature = "package-2020-11-01-only")]
pub use package_2020_11_01_only::{models, operations, API_VERSION};
#[cfg(feature = "package-2020-09-01-only")]
mod package_2020_09_01_only;
#[cfg(feature = "package-2020-09-01-only")]
pub use package_2020_09_01_only::{models, operations, API_VERSION};
#[cfg(feature = "package-2020-07-01-only")]
mod package_2020_07_01_only;
#[cfg(feature = "package-2020-07-01-only")]
pub use package_2020_07_01_only::{models, operations, API_VERSION};
#[cfg(feature = "package-2020-06-01-only")]
mod package_2020_06_01_only;
#[cfg(feature = "package-2020-06-01-only")]
pub use package_2020_06_01_only::{models, operations, API_VERSION};
#[cfg(feature = "package-2020-04-01-only")]
mod package_2020_04_01_only;
#[cfg(feature = "package-2020-04-01-only")]
pub use package_2020_04_01_only::{models, operations, API_VERSION};
#[cfg(feature = "package-2020-03-01-only")]
mod package_2020_03_01_only;
#[cfg(feature = "package-2020-03-01-only")]
pub use package_2020_03_01_only::{models, operations, API_VERSION};
#[cfg(feature = "package-2020-02-01-only")]
mod package_2020_02_01_only;
#[cfg(feature = "package-2020-02-01-only")]
pub use package_2020_02_01_only::{models, operations, API_VERSION};
#[cfg(feature = "package-2020-01-01-only")]
mod package_2020_01_01_only;
#[cfg(feature = "package-2020-01-01-only")]
pub use package_2020_01_01_only::{models, operations, API_VERSION};
#[cfg(feature = "package-2019-11-01-only")]
mod package_2019_11_01_only;
#[cfg(feature = "package-2019-11-01-only")]
pub use package_2019_11_01_only::{models, operations, API_VERSION};
#[cfg(feature = "package-2019-10-27-preview-only")]
mod package_2019_10_27_preview_only;
#[cfg(feature = "package-2019-10-27-preview-only")]
pub use package_2019_10_27_preview_only::{models, operations, API_VERSION};
#[cfg(feature = "package-2019-10-01-only")]
mod package_2019_10_01_only;
#[cfg(feature = "package-2019-10-01-only")]
pub use package_2019_10_01_only::{models, operations, API_VERSION};
#[cfg(feature = "package-2019-08-01-only")]
mod package_2019_08_01_only;
#[cfg(feature = "package-2019-08-01-only")]
pub use package_2019_08_01_only::{models, operations, API_VERSION};
#[cfg(feature = "package-2019-06-01-only")]
mod package_2019_06_01_only;
#[cfg(feature = "package-2019-06-01-only")]
pub use package_2019_06_01_only::{models, operations, API_VERSION};
#[cfg(feature = "package-2019-04-30-only")]
mod package_2019_04_30_only;
#[cfg(feature = "package-2019-04-30-only")]
pub use package_2019_04_30_only::{models, operations, API_VERSION};
#[cfg(feature = "package-2019-04-01-only")]
mod package_2019_04_01_only;
#[cfg(feature = "package-2019-04-01-only")]
pub use package_2019_04_01_only::{models, operations, API_VERSION};
#[cfg(feature = "package-2019-02-only")]
mod package_2019_02_only;
#[cfg(feature = "package-2019-02-only")]
pub use package_2019_02_only::{models, operations, API_VERSION};
#[cfg(feature = "package-2018-08-preview-only")]
mod package_2018_08_preview_only;
#[cfg(feature = "package-2018-08-preview-only")]
pub use package_2018_08_preview_only::{models, operations, API_VERSION};
#[cfg(feature = "package-2018-09-preview-only")]
mod package_2018_09_preview_only;
#[cfg(feature = "package-2018-09-preview-only")]
pub use package_2018_09_preview_only::{models, operations, API_VERSION};
#[cfg(feature = "package-2019-09-preview-only")]
mod package_2019_09_preview_only;
#[cfg(feature = "package-2019-09-preview-only")]
pub use package_2019_09_preview_only::{models, operations, API_VERSION};
#[cfg(feature = "package-2018-03-only")]
mod package_2018_03_only;
#[cfg(feature = "package-2018-03-only")]
pub use package_2018_03_only::{models, operations, API_VERSION};
#[cfg(feature = "package-2017-07-only-extended")]
mod package_2017_07_only_extended;
#[cfg(feature = "package-2017-07-only-extended")]
pub use package_2017_07_only_extended::{models, operations, API_VERSION};
#[cfg(feature = "package-2017-08-only")]
mod package_2017_08_only;
#[cfg(feature = "package-2017-08-only")]
pub use package_2017_08_only::{models, operations, API_VERSION};
#[cfg(feature = "package-2017-09-only")]
mod package_2017_09_only;
#[cfg(feature = "package-2017-09-only")]
pub use package_2017_09_only::{models, operations, API_VERSION};
#[cfg(feature = "package-2017-01-only")]
mod package_2017_01_only;
#[cfg(feature = "package-2017-01-only")]
pub use package_2017_01_only::{models, operations, API_VERSION};
#[cfg(feature = "package-2016-09-only")]
mod package_2016_09_only;
#[cfg(feature = "package-2016-09-only")]
pub use package_2016_09_only::{models, operations, API_VERSION};
#[cfg(feature = "package-2016-03-only")]
mod package_2016_03_only;
use azure_core::setters;
#[cfg(feature = "package-2016-03-only")]
pub use package_2016_03_only::{models, operations, API_VERSION};
pub fn config(
    http_client: std::sync::Arc<std::boxed::Box<dyn azure_core::HttpClient>>,
    token_credential: Box<dyn azure_core::TokenCredential>,
) -> OperationConfigBuilder {
    OperationConfigBuilder {
        api_version: None,
        http_client,
        base_path: None,
        token_credential,
        token_credential_resource: None,
    }
}
pub struct OperationConfigBuilder {
    api_version: Option<String>,
    http_client: std::sync::Arc<std::boxed::Box<dyn azure_core::HttpClient>>,
    base_path: Option<String>,
    token_credential: Box<dyn azure_core::TokenCredential>,
    token_credential_resource: Option<String>,
}
impl OperationConfigBuilder {
    setters! { api_version : String => Some (api_version) , base_path : String => Some (base_path) , token_credential_resource : String => Some (token_credential_resource) , }
    pub fn build(self) -> OperationConfig {
        OperationConfig {
            api_version: self.api_version.unwrap_or(API_VERSION.to_owned()),
            http_client: self.http_client,
            base_path: self.base_path.unwrap_or("https://management.azure.com".to_owned()),
            token_credential: Some(self.token_credential),
            token_credential_resource: self.token_credential_resource.unwrap_or("https://management.azure.com/".to_owned()),
        }
    }
}
pub struct OperationConfig {
    api_version: String,
    http_client: std::sync::Arc<std::boxed::Box<dyn azure_core::HttpClient>>,
    base_path: String,
    token_credential: Option<Box<dyn azure_core::TokenCredential>>,
    token_credential_resource: String,
}
impl OperationConfig {
    pub fn api_version(&self) -> &str {
        self.api_version.as_str()
    }
    pub fn http_client(&self) -> &dyn azure_core::HttpClient {
        self.http_client.as_ref().as_ref()
    }
    pub fn base_path(&self) -> &str {
        self.base_path.as_str()
    }
    pub fn token_credential(&self) -> Option<&dyn azure_core::TokenCredential> {
        self.token_credential.as_deref()
    }
    pub fn token_credential_resource(&self) -> &str {
        self.token_credential_resource.as_str()
    }
}
