use camino::Utf8Path;
use std::{
    fs::File,
    io::{prelude::*, LineWriter},
};

pub type Result<T, E = Error> = std::result::Result<T, E>;
#[derive(Debug, thiserror::Error)]
pub enum Error {
    #[error(transparent)]
    Io(crate::io::Error),
}
impl<T: Into<crate::io::Error>> From<T> for Error {
    fn from(error: T) -> Self {
        Self::Io(error.into())
    }
}

pub fn create(crate_name: &str, path: &Utf8Path) -> Result<()> {
    let file = File::create(path)?;
    let mut file = LineWriter::new(file);

    file.write_all(
        format!(
            r#"# generated by AutoRust
[package]
name = "{}"
version = "0.2.0"
edition = "2021"
license = "MIT"
description = "generated REST API bindings"
repository = "https://github.com/azure/azure-sdk-for-rust"
homepage = "https://github.com/azure/azure-sdk-for-rust"
documentation = "https://docs.rs/{}"

[dependencies]
azure_core = {{ path = "../../../sdk/core", version = "0.2", default-features = false }}
serde = {{ version = "1.0", features = ["derive"] }}
serde_json = "1.0"
bytes = "1.0"
thiserror = "1.0"
http = "0.2"
url = "2.2"
futures = "0.3"

[dev-dependencies]
azure_identity = {{ path = "../../../sdk/identity", version = "0.1" }}
tokio = {{ version = "1.0", features = ["macros"] }}

[features]
default = ["enable_reqwest"]
enable_reqwest = ["azure_core/enable_reqwest"]
enable_reqwest_rustls = ["azure_core/enable_reqwest_rustls"]
"#,
            crate_name, crate_name
        )
        .as_bytes(),
    )?;

    Ok(())
}
