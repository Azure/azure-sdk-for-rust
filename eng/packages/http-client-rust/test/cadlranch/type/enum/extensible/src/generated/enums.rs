// Copyright (c) Microsoft Corporation. All rights reserved.
//
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Rust Code Generator. DO NOT EDIT.

use async_std::task::block_on;
use azure_core::{RequestContent, Response};
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, Deserialize, Eq, PartialEq, Serialize)]
#[non_exhaustive]
pub enum DaysOfWeekExtensibleEnum {
    Friday,
    Monday,
    Saturday,
    Sunday,
    Thursday,
    Tuesday,
    Wednesday,
    #[serde(untagged)]
    UnknownValue(String),
}

impl TryFrom<DaysOfWeekExtensibleEnum> for RequestContent<DaysOfWeekExtensibleEnum> {
    type Error = azure_core::Error;
    fn try_from(value: DaysOfWeekExtensibleEnum) -> Result<Self, Self::Error> {
        Ok(RequestContent::from(serde_json::to_vec(&value)?))
    }
}

impl TryFrom<Response<DaysOfWeekExtensibleEnum>> for DaysOfWeekExtensibleEnum {
    type Error = azure_core::Error;
    fn try_from(value: Response<DaysOfWeekExtensibleEnum>) -> Result<Self, Self::Error> {
        let f = || value.into_body().json::<DaysOfWeekExtensibleEnum>();
        let r = block_on(f())?;
        Ok(r)
    }
}
