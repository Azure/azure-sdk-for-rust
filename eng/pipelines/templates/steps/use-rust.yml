parameters:
  - name: Toolchain
    type: string
    default: stable
  - name: MaxAttempts
    type: number
    default: 3

steps:
  - pwsh: |
      $toolchain = '${{ parameters.Toolchain }}'
      if ($toolchain -eq 'msrv') {
          Write-Host "Reading MSRV from azure_core"
          $toolchain = cargo read-manifest --manifest-path ./sdk/core/azure_core/Cargo.toml | ConvertFrom-Json | Select-Object -ExpandProperty rust_version
      }

      Write-Host "Setting Toolchain variable to $toolchain"
      Write-Host "##vso[task.setvariable variable=Toolchain]$toolchain"

      $attempts = 0
      $maxAttempts = ${{ parameters.MaxAttempts }}

      while ($true) {
        $attempts++
        Write-Host "> rustup toolchain install --no-self-update $toolchain"
        rustup toolchain install --no-self-update $toolchain

        if ($?) { exit 0 }

        if ($attempts -lt $maxAttempts) {
          Write-Host "Failed to install $toolchain, attempt $attempts, retrying..."
        } else {
          Write-Host "Failed to install $toolchain after $attempts attempts."
          exit 1
        }

        # Failures to update are usually caused by file locks in Windows.
        # Sleep for a few seconds to give the blocking process a chance to release the lock.
        Start-Sleep -Seconds 3
      }

    displayName: "Use Rust ${{ parameters.Toolchain }}"
