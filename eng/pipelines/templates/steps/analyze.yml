parameters:
  - name: Toolchain
    type: string
    default: stable

steps:
  - ${{ if ne(parameters.Toolchain, 'nightly') }}:
      - template: /eng/pipelines/templates/steps/use-rust.yml@self
        parameters:
          Toolchain: nightly

  - template: /eng/pipelines/templates/steps/use-rust.yml@self
    parameters:
      Toolchain: ${{ parameters.Toolchain }}

  - template: /eng/common/pipelines/templates/steps/save-package-properties.yml

  - pwsh: |
      . ./eng/common/scripts/common.ps1
      . ./eng/common/scripts/Helpers/CommandInvocation-Helpers.ps1

      $verifyDependenciesScript = Join-Path $RepoRoot '/eng/scripts/verify-dependencies.rs' -Resolve
      $packageInfoPath = '$(Build.ArtifactStagingDirectory)/PackageInfo'
      if (!(Test-Path $PackageInfoPath)) {
        Write-Error "Package info path '$PackageInfoPath' does not exist."
        exit 1
      }

      $pacakgesToTest = Get-ChildItem $packageInfoPath -Filter "*.json" -Recurse
      | Get-Content -Raw
      | ConvertFrom-Json

      $env:RUSTDOCFLAGS = "-D warnings"
      $env:RUSTFLAGS = "-Dwarnings"

      Invoke-LoggedCommand "cargo +$(Toolchain) check -p azure_core --no-default-features"

      Write-Host "`n`n"
      Invoke-LoggedCommand "cargo +$(Toolchain) fmt --all -- --check"

      Write-Host "`n`n"
      Invoke-LoggedCommand "cargo +$(Toolchain) clippy --all"

      Write-Host "`n`n"
      Invoke-LoggedCommand "cargo +$(Toolchain) doc --all --no-deps"

      foreach ($package in $pacakgesToTest) {
        Push-Location (Join-Path $RepoRoot $package.DirectoryPath)
        try {
          Write-Host "`n`n"
          Write-Host "`n`nAnalyzing package: '$($package.Name)' in directory: '$($package.DirectoryPath)'`n"
          Invoke-LoggedCommand "cargo +nightly -Zscript $verifyDependenciesScript"
        }
        finally {
          Pop-Location
        }
      }
    displayName: "Run source analysis"
