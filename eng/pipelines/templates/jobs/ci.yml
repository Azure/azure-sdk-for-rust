parameters:
- name: ServiceDirectory
  type: string
  default: auto
- name: Artifacts
  type: object
  default: []
- name: PipelineArtifactName
  type: string
  default: packages
- name: BeforeTestSteps
  type: object
  default: []
- name: AfterTestSteps
  type: object
  default: []
- name: TestTimeoutInMinutes
  type: number
  default: 60
- name: BuildDocs
  type: boolean
  default: true
- name: TestProxy
  type: boolean
  default: false
- name: TestPipeline
  type: boolean
  default: false
- name: GenerateApiReviewForManualOnly
  type: boolean
  default: false
- name: BuildMatrix
  type: object
  default:
  - pool:
      os: linux
      name: $(LINUXPOOL)
      image: $(LINUXVMIMAGE)
    Toolchains: [stable, msrv, nightly]
  - pool:
      os: windows
      name: $(WINDOWSPOOL)
      image: $(WINDOWSVMIMAGE)
    Toolchains: [stable, msrv, nightly]
  - pool:
      os: macOS
      name: $(MACPOOL)
      vmImage: $(MACVMIMAGE)
    Toolchains: [stable, msrv, nightly]
- name: AnalyzeToolchain
  type: string
  default: stable

jobs:
- job: Pack
  displayName: "Pack Crates"
  timeoutInMinutes: 90

  pool:
    name: $(LINUXPOOL)
    image: $(LINUXVMIMAGE)
    os: linux

  steps:
  - checkout: self
    ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
      fetchDepth: 0 # Fetch all history for PR builds
    ${{ else }}:
      fetchDepth: 1 # Fetch only the latest commit for non-PR builds

  - ${{ if and(eq(variables['System.TeamProject'], 'internal'), ne(variables['Build.Reason'], '')) }}:
    - script: |
        echo "##vso[build.addbuildtag]$(Build.Reason)"
      displayName: Tag build reason

  - ${{ if eq(parameters.TestPipeline, 'true') }}:
    - template: /eng/common/pipelines/templates/steps/set-test-pipeline-version.yml
      parameters:
        PackageNames: ${{ join(',', parameters.Artifacts.*.name) }}
        ServiceDirectory: ${{parameters.ServiceDirectory}}
        TestPipeline: true

  - template: /eng/pipelines/templates/steps/pack-crates.yml
    parameters:
      ServiceDirectory: ${{ parameters.ServiceDirectory }}

  - template: /eng/common/pipelines/templates/steps/publish-1es-artifact.yml
    parameters:
      ArtifactPath: $(Build.ArtifactStagingDirectory)
      ArtifactName: ${{ parameters.PipelineArtifactName }}
      CustomCondition: and(succeededOrFailed(), ne(variables['NoPackagesChanged'],'true'))

- ${{ each matrix in parameters.BuildMatrix }}:
  - ${{ each toolchain in matrix.Toolchains }}:
    - job: Test_${{ matrix.pool.os }}_${{ toolchain }}
      displayName: "Test: ${{ matrix.pool.os }} ${{ toolchain }}"
      timeoutInMinutes: 90
      dependsOn: Pack
      condition: and(succeeded(), ne(variables['SkipTests'],'true'))

      pool: ${{ matrix.pool }}

      steps:
      - download: current
        artifact: ${{ parameters.PipelineArtifactName }}

      - template: /eng/common/pipelines/templates/steps/set-default-branch.yml@self

      - template: /eng/pipelines/templates/steps/test-packages.yml
        parameters:
          Toolchain: ${{ toolchain }}
          BuildArtifactName: ${{ parameters.PipelineArtifactName }}
          UnitTests: true
          FunctionalTests: ${{ ne(variables['Build.Reason'], 'PullRequest') }}

- job: "Analyze"
  condition: and(succeededOrFailed(), ne(variables['Skip.Analyze'], 'true'))
  timeoutInMinutes: ${{ parameters.TestTimeoutInMinutes }}

  pool:
    os: linux
    name: $(LINUXPOOL)
    image: $(LINUXVMIMAGE)

  steps:
  - template: /eng/pipelines/templates/steps/analyze.yml
    parameters:
      Toolchain: ${{ parameters.AnalyzeToolchain }}

  - template: /eng/common/pipelines/templates/steps/check-spelling.yml
    parameters:
      ContinueOnError: false

  # Disabled until we fix crates.io link checking
  # - template: /eng/common/pipelines/templates/steps/verify-links.yml
  #   parameters:
  #     ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
  #       Directory: ""
  #       Urls: (eng/common/scripts/get-markdown-files-from-changed-files.ps1)
  #     ${{ elseif eq(parameters.ServiceDirectory, 'auto') }}:
  #       Directory: ""
  #     ${{ else }}:
  #       Directory: sdk/${{ parameters.ServiceDirectory }}
  #     CheckLinkGuidance: $true
  #     Condition: succeededOrFailed()
