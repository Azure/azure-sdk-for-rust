parameters:
  - name: ServiceDirectory
    type: string
    default: auto
  - name: BeforeTestSteps
    type: object
    default: []
  - name: AfterTestSteps
    type: object
    default: []
  - name: TestTimeoutInMinutes
    type: number
    default: 60
  - name: BuildDocs
    type: boolean
    default: true
  - name: TestProxy
    type: boolean
    default: false
  - name: TestPipeline
    type: boolean
    default: false
  - name: GenerateApiReviewForManualOnly
    type: boolean
    default: false
  - name: BuildMatrix
    type: object
    default:
      - pool:
          os: linux
          name: $(LINUXPOOL)
          image: $(LINUXVMIMAGE)
        Toolchains:
          - name: stable
            publish: true
          - name: msrv
          - name: nightly
      - pool:
          os: windows
          name: $(WINDOWSPOOL)
          image: $(WINDOWSVMIMAGE)
        Toolchains:
          - name: stable
          - name: msrv
          - name: nightly
      - pool:
          os: macOS
          name: $(MACPOOL)
          vmImage: $(MACVMIMAGE)
        Toolchains:
          - name: stable
          - name: msrv
          - name: nightly
  - name: AnalyzeToolchains
    type: object
    default: [stable]

jobs:
  - ${{ each matrix in parameters.BuildMatrix }}:
      - ${{ each toolchain in matrix.Toolchains }}:
          - job: Build_${{ matrix.pool.os }}_${{ toolchain.name }}
            timeoutInMinutes: 90

            pool: ${{ matrix.pool }}

            steps:
              - template: /eng/common/pipelines/templates/steps/sparse-checkout.yml
                parameters:
                  Paths: [/*]

              - template: /eng/pipelines/templates/steps/test-packages.yml
                parameters:
                  ServiceDirectory: ${{ parameters.ServiceDirectory }}
                  Toolchain: ${{ toolchain.name }}
                  ArtifactSuffix: ${{ matrix.pool.os }}_${{ toolchain.name }}
                  PublishArtifacts: ${{ eq(toolchain.publish, 'true') }}
                  UnitTests: true
                  FunctionalTests: ${{ ne(variables['Build.Reason'], 'PullRequest') }}

  - ${{ each toolchain in parameters.AnalyzeToolchains }}:
      - job: "Analyze_${{ toolchain }}"
        condition: and(succeededOrFailed(), ne(variables['Skip.Analyze'], 'true'))
        timeoutInMinutes: ${{ parameters.TestTimeoutInMinutes }}

        pool:
          os: linux
          name: $(LINUXPOOL)
          image: $(LINUXVMIMAGE)

        steps:
          - template: /eng/common/pipelines/templates/steps/sparse-checkout.yml
            parameters:
              Paths: [/*]

          - template: /eng/pipelines/templates/steps/analyze.yml
            parameters:
              Toolchain: ${{ toolchain }}

          - template: /eng/common/pipelines/templates/steps/check-spelling.yml
            parameters:
              ContinueOnError: false

          # Disabled until we fix crates.io link checking
          # - template: /eng/common/pipelines/templates/steps/verify-links.yml
          #   parameters:
          #     ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
          #       Directory: ""
          #       Urls: (eng/common/scripts/get-markdown-files-from-changed-files.ps1)
          #     ${{ elseif eq(parameters.ServiceDirectory, 'auto') }}:
          #       Directory: ""
          #     ${{ else }}:
          #       Directory: sdk/${{ parameters.ServiceDirectory }}
          #     CheckLinkGuidance: $true
          #     Condition: succeededOrFailed()
