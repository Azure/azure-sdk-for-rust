name: Build and Test

on:
  pull_request:
  push:

env:
  RUSTFLAGS: -Dwarnings
  CARGO_INCREMENTAL: 0

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable]
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        profile: minimal
        override: true
        components: rustfmt
        target: wasm32-unknown-unknown

    - name: fmt
      run: |
        cargo fmt --all -- --check
        ./eng/scripts/check_json_format.sh
        cargo fmt --manifest-path services/Cargo.toml --all -- --check
      if: matrix.rust == 'stable'

    - name: check core for wasm
      run: cargo check -p azure_core --target=wasm32-unknown-unknown

    - name: check core for hyper
      run: cargo check -p azure_core --no-default-features --features enable_hyper

    - name: sdk tests
      run: cargo test --all

    - name: services check
      run: cargo check --manifest-path services/Cargo.toml --all

    - name: e2e tests build
      run: |
        PROJECTS=(core  cosmos  identity  service_bus  storage)
        for PROJ in ${PROJECTS[@]}
        do
          echo "Checking e2e tests for $PROJ"
          cargo check --tests --features test_e2e --manifest-path sdk/$PROJ/Cargo.toml || exit 1
        done

    - name: display free disk space
      run: df -h /
      if: ${{ always() }}
