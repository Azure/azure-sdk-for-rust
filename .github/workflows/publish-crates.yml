name: Publish All Services

on:
  workflow_dispatch:

# Do NOT add your CARGO_REGISTRY_TOKEN to Azure/azure-sdk-for-rust repository. Only add it to your repository.
# The publish actions are intended for running in your own fork where only you have access to run the actions.
env:
  CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

jobs:
  get_service_crates:
    runs-on: ubuntu-latest
    # the services crates all depend on azure_core, so make sure that completes first
    needs: publish_sdk_crates
    outputs:
      members: ${{ steps.get_members.outputs.members }}
    steps:
      - uses: actions/checkout@v3
      - run: rustup update --no-self-update stable
      - id: get_members
        run: |
          MEMBERS=$(cargo metadata --format-version=1 --no-deps | jq -c '.packages | .[] | select(.publish == null) | .name' | jq -s '.' | jq -c '.')
          echo members=${MEMBERS} >> $GITHUB_OUTPUT
        working-directory: services

  publish_service_crates:
    name: publish ${{ matrix.crate }}
    runs-on: ubuntu-latest
    needs: get_service_crates
    strategy:
      fail-fast: false
      matrix:
        crate: ${{ fromJSON(needs.get_service_crates.outputs.members) }}
    steps:
      - uses: actions/checkout@v3
      - run: rustup update --no-self-update stable
      - run: cargo publish -p ${{ matrix.crate }}
        working-directory: services

  get_sdk_crates:
    runs-on: ubuntu-latest
    outputs:
      members: ${{ steps.get_members.outputs.members }}
    steps:
      - uses: actions/checkout@v3
      - run: rustup update --no-self-update stable
      - id: get_members
        run: |
          MEMBERS=$(cargo metadata --format-version=1 --no-deps | jq -c '.packages | .[] | select(.publish == null) | .name' | jq -s '.' | jq -c '.')
          echo members=${MEMBERS} >> $GITHUB_OUTPUT
  
  publish_sdk_crates:
    name: publish ${{ matrix.crate }}
    runs-on: ubuntu-latest
    needs: get_sdk_crates
    strategy:
      fail-fast: false
      matrix:
        crate: ${{ fromJSON(needs.get_sdk_crates.outputs.members) }}
    steps:
      - uses: actions/checkout@v3
      - run: rustup update --no-self-update stable
      - run: cargo publish -p ${{ matrix.crate }}
