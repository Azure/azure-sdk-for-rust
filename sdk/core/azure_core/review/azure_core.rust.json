{
  "root": 1920,
  "crate_version": "0.22.0",
  "index": {
    "580": {
      "id": 580,
      "crate_id": 0,
      "name": "DELETE_SNAPSHOTS",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "1346": {
      "id": 1346,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1314,
              "name": "SourceLeaseId"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [
            "assert_receiver_is_total_eq"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 114,
            "name": "Eq"
          }
        }
      }
    },
    "228": {
      "id": 228,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 196,
              "name": "LeaseDuration"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 118,
            "name": "Copy"
          }
        }
      }
    },
    "1580": {
      "id": 1580,
      "crate_id": 0,
      "name": "clone",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 1552,
                "name": "ClientRequestId"
              }
            }
          }
        }
      }
    },
    "518": {
      "id": 518,
      "crate_id": 0,
      "name": "AccessToken",
      "visibility": "public",
      "docs": "Represents an Azure service bearer access token with expiry information.",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "impls": [
            522,
            523,
            524,
            525,
            526,
            527,
            528,
            529,
            530,
            531,
            532,
            533,
            534,
            535,
            536,
            537,
            538,
            539,
            540,
            541,
            542,
            543,
            544,
            546,
            548,
            550,
            552
          ],
          "kind": {
            "plain": {
              "fields": [
                515,
                516
              ],
              "has_stripped_fields": false
            }
          }
        }
      }
    },
    "234": {
      "id": 234,
      "crate_id": 0,
      "name": "as_ref",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "borrowed_ref": {
                "is_mutable": false,
                "lifetime": null,
                "type": {
                  "primitive": "str"
                }
              }
            }
          }
        }
      }
    },
    "547": {
      "id": 547,
      "crate_id": 0,
      "name": "clone",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 518,
                "name": "AccessToken"
              }
            }
          }
        }
      }
    },
    "572": {
      "id": 572,
      "crate_id": 0,
      "name": "CONTENT_DISPOSITION",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "766": {
      "id": 766,
      "crate_id": 29,
      "name": "Iter",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "assoc_type": {
          "bounds": [],
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [
                    {
                      "type": {
                        "tuple": [
                          {
                            "resolved_path": {
                              "args": {
                                "angle_bracketed": {
                                  "args": [],
                                  "constraints": []
                                }
                              },
                              "id": 557,
                              "name": "HeaderName"
                            }
                          },
                          {
                            "resolved_path": {
                              "args": {
                                "angle_bracketed": {
                                  "args": [],
                                  "constraints": []
                                }
                              },
                              "id": 14,
                              "name": "HeaderValue"
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "constraints": []
                }
              },
              "id": 767,
              "name": "IntoIter"
            }
          }
        }
      }
    },
    "15": {
      "id": 15,
      "crate_id": 0,
      "name": "APPLICATION_X_WWW_FORM_URLENCODED",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 14,
              "name": "crate::headers::HeaderValue"
            }
          }
        }
      }
    },
    "865": {
      "id": 865,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 834,
              "name": "IfSourceModifiedSinceCondition"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [
            "assert_receiver_is_total_eq"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 114,
            "name": "Eq"
          }
        }
      }
    },
    "1836": {
      "id": 1836,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1805,
              "name": "TestMode"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1835
          ],
          "provided_trait_methods": [
            "ne"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 112,
            "name": "PartialEq"
          }
        }
      }
    },
    "1442": {
      "id": 1442,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1408,
              "name": "ClientVersion"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1440,
            1441
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 771,
            "name": "Header"
          }
        }
      }
    },
    "1853": {
      "id": 1853,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [
        "#[cfg(feature = \"tokio_fs\")]"
      ],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 1852,
          "is_glob": true,
          "name": "fs",
          "source": "typespec_client_core::fs"
        }
      }
    },
    "1350": {
      "id": 1350,
      "crate_id": 0,
      "name": "from_str",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "primitive": "str"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "generic": "Self"
                        }
                      },
                      {
                        "type": {
                          "qualified_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "name": "Err",
                            "self_type": {
                              "generic": "Self"
                            },
                            "trait": {
                              "args": null,
                              "id": 125,
                              "name": ""
                            }
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 64,
                "name": "Result"
              }
            }
          }
        }
      }
    },
    "1347": {
      "id": 1347,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "fmt",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "std::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "tuple": []
                        }
                      },
                      {
                        "type": {
                          "resolved_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "id": 905,
                            "name": "std::fmt::Error"
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 64,
                "name": "Result"
              }
            }
          }
        }
      }
    },
    "438": {
      "id": 438,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": "Sets the User-Agent header with useful information in a typical format for Azure SDKs.",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 436,
              "name": "TelemetryPolicy"
            }
          },
          "generics": {
            "params": [
              {
                "kind": {
                  "lifetime": {
                    "outlives": []
                  }
                },
                "name": "'a"
              }
            ],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            437
          ],
          "provided_trait_methods": [],
          "trait": null
        }
      }
    },
    "694": {
      "id": 694,
      "crate_id": 0,
      "name": "get_retry_after",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "headers",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 659,
                        "name": "crate::headers::Headers"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 521,
                "name": "std::time::Duration"
              }
            }
          }
        }
      }
    },
    "1792": {
      "id": 1792,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1766,
              "name": "Prefix"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1791
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "825": {
      "id": 825,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 795,
              "name": "IfSourceMatchCondition"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [
            "assert_receiver_is_total_eq"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 114,
            "name": "Eq"
          }
        }
      }
    },
    "1901": {
      "id": 1901,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 1900,
          "is_glob": false,
          "name": "sleep",
          "source": "typespec_client_core::sleep"
        }
      }
    },
    "1447": {
      "id": 1447,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1444,
              "name": "User"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1445,
            1446
          ],
          "provided_trait_methods": [],
          "trait": null
        }
      }
    },
    "868": {
      "id": 868,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 834,
              "name": "IfSourceModifiedSinceCondition"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            866,
            867
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 771,
            "name": "Header"
          }
        }
      }
    },
    "1125": {
      "id": 1125,
      "crate_id": 0,
      "name": "from",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "header_map",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 659,
                        "name": "Headers"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "1248": {
      "id": 1248,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1217,
              "name": "Range"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1247
          ],
          "provided_trait_methods": [
            "ne"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 112,
            "name": "PartialEq"
          }
        }
      }
    },
    "1395": {
      "id": 1395,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 871,
          "is_glob": false,
          "name": "LeaseId",
          "source": "lease::LeaseId"
        }
      }
    },
    "145": {
      "id": 145,
      "crate_id": 0,
      "name": "Broken",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "variant": {
          "discriminant": null,
          "kind": "plain"
        }
      }
    },
    "352": {
      "id": 352,
      "crate_id": 0,
      "name": "Pipeline",
      "visibility": "public",
      "docs": "Execution pipeline.\n\nA pipeline follows a precise flow:\n\n1. Client library-specified per-call policies are executed. Per-call policies can fail and bail out of the pipeline\n   immediately.\n2. User-specified per-call policies are executed.\n3. Telemetry policy.\n4. Retry policy. It allows to re-execute the following policies.\n5. Client library-specified per-retry policies. Per-retry polices are always executed at least once but are re-executed\n   in case of retries.\n6. User-specified per-retry policies are executed.\n7. Authorization policy. Authorization can depend on the HTTP headers and/or the request body so it\n   must be executed right before sending the request to the transport. Also, the authorization\n   can depend on the current time so it must be executed at every retry.\n8. Transport policy. Transport policy is always the last policy and is the policy that\n   actually constructs the `Response` to be passed up the pipeline.\n\nA pipeline is immutable. In other words a policy can either succeed and call the following\npolicy of fail and return to the calling policy. Arbitrary policy \"skip\" must be avoided (but\ncannot be enforced by code). All policies except Transport policy can assume there is another following policy (so\n`self.pipeline[0]` is always valid).",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "impls": [
            358,
            359,
            360,
            361,
            362,
            363,
            364,
            365,
            366,
            367,
            368,
            369,
            370,
            371,
            373,
            376,
            377,
            378,
            379,
            380,
            381,
            382,
            383,
            385,
            387,
            391
          ],
          "kind": {
            "tuple": [
              null
            ]
          }
        }
      }
    },
    "1209": {
      "id": 1209,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 918,
              "name": "ProposedLeaseId"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1207,
            1208
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 771,
            "name": "Header"
          }
        }
      }
    },
    "1473": {
      "id": 1473,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1444,
              "name": "User"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1472
          ],
          "provided_trait_methods": [
            "clone_from"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 53,
            "name": "Clone"
          }
        }
      }
    },
    "246": {
      "id": 246,
      "crate_id": 0,
      "name": "Change",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "variant": {
          "discriminant": null,
          "kind": "plain"
        }
      }
    },
    "765": {
      "id": 765,
      "crate_id": 29,
      "name": "Error",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "assoc_type": {
          "bounds": [],
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 68,
              "name": "Infallible"
            }
          }
        }
      }
    },
    "1895": {
      "id": 1895,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 3,
          "is_glob": false,
          "name": "Url",
          "source": "typespec_client_core::http::Url"
        }
      }
    },
    "866": {
      "id": 866,
      "crate_id": 0,
      "name": "name",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 557,
                "name": "HeaderName"
              }
            }
          }
        }
      }
    },
    "983": {
      "id": 983,
      "crate_id": 0,
      "name": "clone",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 958,
                "name": "LeaseDuration"
              }
            }
          }
        }
      }
    },
    "951": {
      "id": 951,
      "crate_id": 0,
      "name": "name",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 557,
                "name": "headers::HeaderName"
              }
            }
          }
        }
      }
    },
    "785": {
      "id": 785,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 749,
              "name": "IfSequenceNumber"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            784
          ],
          "provided_trait_methods": [
            "ne"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 112,
            "name": "PartialEq"
          }
        }
      }
    },
    "172": {
      "id": 172,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 146,
              "name": "LeaseState"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 109,
            "name": "StructuralPartialEq"
          }
        }
      }
    },
    "1309": {
      "id": 1309,
      "crate_id": 0,
      "name": "name",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 557,
                "name": "headers::HeaderName"
              }
            }
          }
        }
      }
    },
    "630": {
      "id": 630,
      "crate_id": 0,
      "name": "OperationLocation",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "variant": {
          "discriminant": null,
          "kind": "plain"
        }
      }
    },
    "1920": {
      "id": 1920,
      "crate_id": 0,
      "name": "azure_core",
      "visibility": "public",
      "docs": "# Azure Core shared client library for Rust\n\n`azure_core` provides shared primitives, abstractions, and helpers for modern Rust Azure SDK client libraries.\nThese libraries follow the [Azure SDK Design Guidelines for Rust][guidelines]\nand can typically be identified by package and namespaces names starting with `azure_`, e.g. `azure_identity`.\n\n`azure_core` allows client libraries to expose common functionality in a consistent fashion\nso that once you learn how to use these APIs in one client library, you will know how to use them in other client libraries.\n\n[Source code] | [Package (crates.io)] | [API Reference Documentation]\n\n## Getting started\n\nTypically, you will not need to install `azure_core`;\nit will be installed for you when you install one of the client libraries using it.\nIn case you want to install it explicitly - to implement your own client library, for example -\nyou can find the crates.io package [here][Package (crates.io)].\n\n## Key concepts\n\nThe main shared concepts of `azure_core` - and Azure SDK libraries using `azure_core` - include:\n\n- Configuring service clients, e.g. configuring retries, logging (`ClientOptions`).\n- Accessing HTTP response details (`Response<T>`).\n- Paging and asynchronous streams (`Pager<T>`).\n- Errors from service requests in a consistent fashion. (`azure_core::Error`).\n- Customizing requests (`ClientOptions`).\n- Abstractions for representing Azure SDK credentials. (`TokenCredentials`).\n\n### Thread safety\n\nWe guarantee that all client instance methods are thread-safe and independent of each other ([guidelines]). This ensures that the recommendation of reusing client instances is always safe, even across threads.\n\n### Additional concepts\n\n<!-- CLIENT COMMON BAR -->\n[Client options](#configuring-service-clients-using-clientoptions) |\n[Accessing the response](#accessing-http-response-details-using-responset) |\n[Handling Errors Results](#handling-errors-results) |\n[Consuming Service Methods Returning `Pager<T>`](#consuming-service-methods-returning-pagert)\n<!-- CLIENT COMMON BAR -->\n\n## Examples\n\n**NOTE:** Samples in this file apply only to packages that follow [Azure SDK Design Guidelines][guidelines]. Names of such packages typically start with `azure_`.\n\n### Configuring service clients using `ClientOptions`\n\nAzure SDK client libraries typically expose one or more _service client_ types that\nare the main starting points for calling corresponding Azure services.\nYou can easily find these client types as their names end with the word _Client_.\nFor example, `SecretClient` can be used to call the Key Vault service and interact with secrets,\nand `KeyClient` can be used to access Key Vault service cryptographic keys.\n\nThese client types can be instantiated by calling a simple `new` function that takes various configuration options.These options are passed as a parameter that extends `ClientOptions` class exposed by `azure_core`.\nVarious service specific options are usually added to its subclasses, but a set of SDK-wide options are\navailable directly on `ClientOptions`.\n\n```rust no_run\nuse azure_core::ClientOptions;\nuse azure_identity::DefaultAzureCredential;\nuse azure_security_keyvault_secrets::{SecretClient, SecretClientOptions};\n\n#[tokio::main]\nasync fn main() -> Result<(), Box<dyn std::error::Error>> {\n    let credential = DefaultAzureCredential::new()?;\n\n    let options = SecretClientOptions {\n        api_version: \"7.5\".to_string(),\n        ..Default::default()\n    };\n\n    let client = SecretClient::new(\n        \"https://your-key-vault-name.vault.azure.net/\",\n        credential.clone(),\n        Some(options),\n    )?;\n\n    Ok(())\n}\n```\n\n### Accessing HTTP response details using `Response<T>`\n\n_Service clients_ have methods that can be used to call Azure services. We refer to these client methods as _service methods_.\n_Service methods_ return a shared `azure_core` type `Response<T>` where `T` is either a `Model` type or a `ResponseBody` representing a raw stream of bytes.\nThis type provides access to both the deserialized result of the service call, and to the details of the HTTP response returned from the server.\n\n```rust no_run\nuse azure_core::Response;\nuse azure_identity::DefaultAzureCredential;\nuse azure_security_keyvault_secrets::{models::SecretBundle, SecretClient};\n\n#[tokio::main]\nasync fn main() -> Result<(), Box<dyn std::error::Error>> {\n    // create a client\n    let credential = DefaultAzureCredential::new()?;\n    let client = SecretClient::new(\n        \"https://your-key-vault-name.vault.azure.net/\",\n        credential.clone(),\n        None,\n    )?;\n\n    // call a service method, which returns Response<T>\n    let response = client.get_secret(\"secret-name\", \"\", None).await?;\n\n    // Response<T> has two main accessors:\n    // 1. The `into_body()` function consumes self to deserialize into a model type\n    let secret = response.into_body().await?;\n\n    // get response again because it was moved in above statement\n    let response: Response<SecretBundle> = client.get_secret(\"secret-name\", \"\", None).await?;\n\n    // 2. The deconstruct() method for accessing all the details of the HTTP response\n    let (status, headers, body) = response.deconstruct();\n\n    // for example, you can access HTTP status\n    println!(\"Status: {}\", status);\n\n    // or the headers\n    for (header_name, header_value) in headers.iter() {\n        println!(\"{}: {}\", header_name.as_str(), header_value.as_str());\n    }\n\n    Ok(())\n}\n```\n\n### Handling errors results\n\nWhen a service call fails, the returned `Result` will contain an `Error`. The `Error` type provides a status property with an HTTP status code and an error_code property with a service-specific error code.\n\n```rust no_run\nuse azure_core::{error::{ErrorKind, HttpError}, Response, StatusCode};\nuse azure_identity::DefaultAzureCredential;\nuse azure_security_keyvault_secrets::SecretClient;\n\n#[tokio::main]\nasync fn main() -> Result<(), Box<dyn std::error::Error>> {\n    // create a client\n    let credential = DefaultAzureCredential::new()?;\n    let client = SecretClient::new(\n        \"https://your-key-vault-name.vault.azure.net/\",\n        credential.clone(),\n        None,\n    )?;\n\n    match client.get_secret(\"secret-name\", \"\", None).await {\n        Ok(secret) => println!(\"Secret: {:?}\", secret.into_body().await?.value),\n        Err(e) => match e.kind() {\n            ErrorKind::HttpResponse { status, error_code, .. } if *status == StatusCode::NotFound => {\n                // handle not found error\n                if let Some(code) = error_code {\n                    println!(\"ErrorCode: {}\", code);\n                } else {\n                    println!(\"Secret not found, but no error code provided.\");\n                }\n            },\n            _ => println!(\"An error occurred: {e:?}\"),\n        },\n    }\n\n    Ok(())\n}\n```\n\n### Consuming service methods returning `Pager<T>`\n\nIf a service call returns multiple values in pages, it would return `Result<Pager<T>>` as a result. You can iterator over each page's vector of results.\n\n```rust no_run\nuse azure_identity::DefaultAzureCredential;\nuse azure_security_keyvault_secrets::{ResourceExt, SecretClient};\nuse futures::TryStreamExt;\n\n#[tokio::main]\nasync fn main() -> Result<(), Box<dyn std::error::Error>> {\n    // create a client\n    let credential = DefaultAzureCredential::new()?;\n    let client = SecretClient::new(\n        \"https://your-key-vault-name.vault.azure.net/\",\n        credential.clone(),\n        None,\n    )?;\n\n    // get a stream\n    let mut pager = client.get_secrets(None)?.into_stream();\n\n    // poll the pager until there are no more SecretListResults\n    while let Some(secrets) = pager.try_next().await? {\n        let Some(secrets) = secrets.into_body().await?.value else {\n            continue;\n        };\n\n        // loop through secrets in SecretsListResults\n        for secret in secrets {\n            // get the secret name from the ID\n            let name = secret.resource_id()?.name;\n            println!(\"Found secret with name: {}\", name);\n        }\n    }\n\n    Ok(())\n}\n```\n\n<!-- ## Troubleshooting -->\n\n## Contributing\n\nSee the [CONTRIBUTING.md] for details on building, testing, and contributing to these libraries.\n\nThis project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit <https://opensource.microsoft.com/cla/>.\n\nWhen you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.\n\nThis project has adopted the [Microsoft Open Source Code of Conduct]. For more information see the [Code of Conduct FAQ] or contact <opencode@microsoft.com> with any additional questions or comments.\n\n[Source code]: https://github.com/Azure/azure-sdk-for-rust/tree/main/sdk/core/azure_core/src\n[Package (crates.io)]: https://crates.io/crates/azure_core\n[API Reference Documentation]: https://docs.rs/azure_core\n[CONTRIBUTING.md]: https://github.com/Azure/azure-sdk-for-rust/blob/main/CONTRIBUTING.md\n[Code of Conduct FAQ]: https://opensource.microsoft.com/codeofconduct/faq/\n[guidelines]: https://azure.github.io/azure-sdk/rust_introduction.html",
      "links": {},
      "attrs": [
        "#![forbid(unsafe_code)]",
        "#![deny(missing_debug_implementations, nonstandard_style)]"
      ],
      "deprecation": null,
      "inner": {
        "module": {
          "is_crate": true,
          "is_stripped": false,
          "items": [
            28,
            555,
            627,
            695,
            1801,
            1851,
            1854,
            1859,
            1862,
            1863,
            1865,
            1867,
            1869,
            1870,
            1872,
            1874,
            1876,
            1878,
            1880,
            1881,
            1883,
            1884,
            1886,
            1888,
            1890,
            1891,
            1893,
            1894,
            1895,
            1897,
            1899,
            1901,
            1903,
            1905,
            1907,
            1908,
            1909,
            1910,
            1911,
            1912,
            1913,
            1914,
            1915,
            1916,
            1917,
            1918,
            1919
          ]
        }
      }
    },
    "1304": {
      "id": 1304,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1269,
              "name": "SequenceNumber"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [
            "assert_receiver_is_total_eq"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 114,
            "name": "Eq"
          }
        }
      }
    },
    "295": {
      "id": 295,
      "crate_id": 0,
      "name": "from_str_optional",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "primitive": "str"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "resolved_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "id": 249,
                            "name": "LeaseAction"
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 26,
                "name": "$crate::error::Result"
              }
            }
          }
        }
      }
    },
    "909": {
      "id": 909,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 871,
              "name": "LeaseId"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            907
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 908,
                        "name": "Uuid"
                      }
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 55,
            "name": "From"
          }
        }
      }
    },
    "1918": {
      "id": 1918,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 392,
          "is_glob": true,
          "name": "pipeline",
          "source": "pipeline"
        }
      }
    },
    "1618": {
      "id": 1618,
      "crate_id": 0,
      "name": "from",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "generic": "S"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "238": {
      "id": 238,
      "crate_id": 0,
      "name": "deserialize",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "D"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [
                                {
                                  "lifetime": "'de"
                                }
                              ],
                              "constraints": []
                            }
                          },
                          "id": 132,
                          "name": "serde::Deserializer"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "D"
                  }
                }
              }
            ]
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "deserializer",
                {
                  "generic": "D"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "generic": "Self"
                        }
                      },
                      {
                        "type": {
                          "qualified_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "name": "Error",
                            "self_type": {
                              "generic": "D"
                            },
                            "trait": {
                              "args": null,
                              "id": 132,
                              "name": ""
                            }
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 64,
                "name": "::core::result::Result"
              }
            }
          }
        }
      }
    },
    "11": {
      "id": 11,
      "crate_id": 0,
      "name": "AZURE_PUBLIC_CLOUD",
      "visibility": "public",
      "docs": "Public Cloud Azure Authority Host",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "static": {
          "expr": "_",
          "is_mutable": false,
          "is_unsafe": false,
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [
                    {
                      "type": {
                        "resolved_path": {
                          "args": {
                            "angle_bracketed": {
                              "args": [],
                              "constraints": []
                            }
                          },
                          "id": 3,
                          "name": "$crate::Url"
                        }
                      }
                    }
                  ],
                  "constraints": []
                }
              },
              "id": 2,
              "name": "once_cell::sync::Lazy"
            }
          }
        }
      }
    },
    "578": {
      "id": 578,
      "crate_id": 0,
      "name": "COPY_STATUS",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "917": {
      "id": 917,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 918,
              "name": "ProposedLeaseId"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            916
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 871,
                        "name": "LeaseId"
                      }
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 55,
            "name": "From"
          }
        }
      }
    },
    "512": {
      "id": 512,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 25,
              "name": "Secret"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            511
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "borrowed_ref": {
                        "is_mutable": false,
                        "lifetime": "'static",
                        "type": {
                          "primitive": "str"
                        }
                      }
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 55,
            "name": "From"
          }
        }
      }
    },
    "1019": {
      "id": 1019,
      "crate_id": 0,
      "name": "clone",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 992,
                "name": "MaxItemCount"
              }
            }
          }
        }
      }
    },
    "1912": {
      "id": 1912,
      "crate_id": 0,
      "name": "EMPTY_BODY",
      "visibility": "public",
      "docs": "An empty HTTP body.",
      "links": {},
      "attrs": [
        "#[allow(clippy::declare_interior_mutable_const)]"
      ],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1086,
              "name": "bytes::Bytes"
            }
          }
        }
      }
    },
    "1300": {
      "id": 1300,
      "crate_id": 0,
      "name": "eq",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "other",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 1269,
                        "name": "SequenceNumber"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "primitive": "bool"
            }
          }
        }
      }
    },
    "249": {
      "id": 249,
      "crate_id": 0,
      "name": "LeaseAction",
      "visibility": "public",
      "docs": "The lease action to perform on an Azure resource.",
      "links": {},
      "attrs": [
        "#[non_exhaustive]"
      ],
      "deprecation": null,
      "inner": {
        "enum": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_stripped_variants": false,
          "impls": [
            250,
            251,
            252,
            253,
            254,
            255,
            256,
            257,
            258,
            259,
            260,
            261,
            262,
            263,
            264,
            265,
            266,
            267,
            268,
            269,
            270,
            271,
            272,
            274,
            275,
            277,
            278,
            280,
            281,
            283,
            286,
            288,
            290,
            292,
            294,
            296
          ],
          "variants": [
            244,
            245,
            246,
            247,
            248
          ]
        }
      }
    },
    "620": {
      "id": 620,
      "crate_id": 0,
      "name": "SOURCE_LEASE_ID",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "669": {
      "id": 669,
      "crate_id": 0,
      "name": "Canceled",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "variant": {
          "discriminant": null,
          "kind": "plain"
        }
      }
    },
    "700": {
      "id": 700,
      "crate_id": 0,
      "name": "new",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "start",
                {
                  "primitive": "u64"
                }
              ],
              [
                "end",
                {
                  "primitive": "u64"
                }
              ],
              [
                "total_length",
                {
                  "primitive": "u64"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 699,
                "name": "ContentRange"
              }
            }
          }
        }
      }
    },
    "1132": {
      "id": 1132,
      "crate_id": 0,
      "name": "new",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "next_marker",
                {
                  "resolved_path": {
                    "args": {
                      "angle_bracketed": {
                        "args": [],
                        "constraints": []
                      }
                    },
                    "id": 27,
                    "name": "String"
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "1858": {
      "id": 1858,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 1857,
          "is_glob": true,
          "name": "error",
          "source": "typespec_client_core::error"
        }
      }
    },
    "735": {
      "id": 735,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 699,
              "name": "ContentRange"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            734
          ],
          "provided_trait_methods": [
            "ne"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 112,
            "name": "PartialEq"
          }
        }
      }
    },
    "914": {
      "id": 914,
      "crate_id": 0,
      "name": "value",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 14,
                "name": "headers::HeaderValue"
              }
            }
          }
        }
      }
    },
    "982": {
      "id": 982,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 958,
              "name": "LeaseDuration"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            981
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "509": {
      "id": 509,
      "crate_id": 0,
      "name": "from",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "access_token",
                {
                  "resolved_path": {
                    "args": {
                      "angle_bracketed": {
                        "args": [],
                        "constraints": []
                      }
                    },
                    "id": 27,
                    "name": "String"
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "589": {
      "id": 589,
      "crate_id": 0,
      "name": "IF_SEQUENCE_NUMBER_LT",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "1299": {
      "id": 1299,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1269,
              "name": "SequenceNumber"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 109,
            "name": "StructuralPartialEq"
          }
        }
      }
    },
    "745": {
      "id": 745,
      "crate_id": 0,
      "name": "0",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct_field": {
          "primitive": "u64"
        }
      }
    },
    "1726": {
      "id": 1726,
      "crate_id": 0,
      "name": "from",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "generic": "S"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "1627": {
      "id": 1627,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1624,
              "name": "Continuation"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1625,
            1626
          ],
          "provided_trait_methods": [],
          "trait": null
        }
      }
    },
    "858": {
      "id": 858,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 834,
              "name": "IfSourceModifiedSinceCondition"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            857
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "91": {
      "id": 91,
      "crate_id": 77,
      "name": "vzip",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "generic": "Self"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "V"
            }
          }
        }
      }
    },
    "1891": {
      "id": 1891,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 428,
          "is_glob": false,
          "name": "Request",
          "source": "typespec_client_core::http::Request"
        }
      }
    },
    "1358": {
      "id": 1358,
      "crate_id": 0,
      "name": "new",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "duration",
                {
                  "resolved_path": {
                    "args": {
                      "angle_bracketed": {
                        "args": [],
                        "constraints": []
                      }
                    },
                    "id": 521,
                    "name": "Duration"
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "1552": {
      "id": 1552,
      "crate_id": 0,
      "name": "ClientRequestId",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "impls": [
            1555,
            1556,
            1557,
            1558,
            1559,
            1560,
            1561,
            1562,
            1563,
            1564,
            1565,
            1566,
            1567,
            1568,
            1569,
            1570,
            1571,
            1572,
            1573,
            1574,
            1575,
            1576,
            1577,
            1579,
            1581,
            1583,
            1586
          ],
          "kind": {
            "tuple": [
              null
            ]
          }
        }
      }
    },
    "1211": {
      "id": 1211,
      "crate_id": 0,
      "name": "0",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct_field": {
          "resolved_path": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "primitive": "u64"
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 1212,
            "name": "std::ops::Range"
          }
        }
      }
    },
    "1840": {
      "id": 1840,
      "crate_id": 0,
      "name": "cmp",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "other",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 1805,
                        "name": "TestMode"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 1065,
                "name": "$crate::cmp::Ordering"
              }
            }
          }
        }
      }
    },
    "1354": {
      "id": 1354,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1314,
              "name": "SourceLeaseId"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1352,
            1353
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 771,
            "name": "Header"
          }
        }
      }
    },
    "613": {
      "id": 613,
      "crate_id": 0,
      "name": "SERVER_ENCRYPTED",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "898": {
      "id": 898,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 871,
              "name": "LeaseId"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            897
          ],
          "provided_trait_methods": [
            "clone_from"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 53,
            "name": "Clone"
          }
        }
      }
    },
    "956": {
      "id": 956,
      "crate_id": 0,
      "name": "0",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct_field": {
          "primitive": "u8"
        }
      }
    },
    "349": {
      "id": 349,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 348,
          "is_glob": false,
          "name": "TransportOptions",
          "source": "typespec_client_core::http::TransportOptions"
        }
      }
    },
    "29": {
      "id": 29,
      "crate_id": 0,
      "name": "Locked",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "variant": {
          "discriminant": null,
          "kind": "plain"
        }
      }
    },
    "1133": {
      "id": 1133,
      "crate_id": 0,
      "name": "from_possibly_empty_string",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "next_marker",
                {
                  "resolved_path": {
                    "args": {
                      "angle_bracketed": {
                        "args": [
                          {
                            "type": {
                              "resolved_path": {
                                "args": {
                                  "angle_bracketed": {
                                    "args": [],
                                    "constraints": []
                                  }
                                },
                                "id": 27,
                                "name": "String"
                              }
                            }
                          }
                        ],
                        "constraints": []
                      }
                    },
                    "id": 354,
                    "name": "Option"
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "generic": "Self"
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 354,
                "name": "Option"
              }
            }
          }
        }
      }
    },
    "918": {
      "id": 918,
      "crate_id": 0,
      "name": "ProposedLeaseId",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "impls": [
            1180,
            1181,
            1182,
            1183,
            1184,
            1185,
            1186,
            1187,
            1188,
            1189,
            1190,
            1191,
            1192,
            1193,
            1194,
            1195,
            1196,
            1197,
            1198,
            1199,
            1200,
            1201,
            1203,
            1205,
            1206,
            917,
            1209
          ],
          "kind": {
            "tuple": [
              null
            ]
          }
        }
      }
    },
    "185": {
      "id": 185,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 146,
              "name": "LeaseState"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            184
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "primitive": "str"
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 128,
            "name": "AsRef"
          }
        }
      }
    },
    "1092": {
      "id": 1092,
      "crate_id": 0,
      "name": "Metadatum",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "impls": [],
          "kind": {
            "tuple": [
              null,
              null
            ]
          }
        }
      }
    },
    "1548": {
      "id": 1548,
      "crate_id": 0,
      "name": "name",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 557,
                "name": "$crate::http::headers::HeaderName"
              }
            }
          }
        }
      }
    },
    "597": {
      "id": 597,
      "crate_id": 0,
      "name": "LEASE_STATE",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "821": {
      "id": 821,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 795,
              "name": "IfSourceMatchCondition"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            820
          ],
          "provided_trait_methods": [
            "clone_from"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 53,
            "name": "Clone"
          }
        }
      }
    },
    "1651": {
      "id": 1651,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1624,
              "name": "Continuation"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1650
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "129": {
      "id": 129,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "::std::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "::std::fmt::Result"
              }
            }
          }
        }
      }
    },
    "1545": {
      "id": 1545,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1516,
              "name": "App"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1544
          ],
          "provided_trait_methods": [
            "clone_from"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 53,
            "name": "Clone"
          }
        }
      }
    },
    "1798": {
      "id": 1798,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1766,
              "name": "Prefix"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1797
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 1074,
            "name": "AppendToUrlQuery"
          }
        }
      }
    },
    "229": {
      "id": 229,
      "crate_id": 0,
      "name": "from",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "e",
                {
                  "resolved_path": {
                    "args": {
                      "angle_bracketed": {
                        "args": [],
                        "constraints": []
                      }
                    },
                    "id": 196,
                    "name": "LeaseDuration"
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "863": {
      "id": 863,
      "crate_id": 0,
      "name": "eq",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "other",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 834,
                        "name": "IfSourceModifiedSinceCondition"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "primitive": "bool"
            }
          }
        }
      }
    },
    "778": {
      "id": 778,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "$crate::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "$crate::fmt::Result"
              }
            }
          }
        }
      }
    },
    "242": {
      "id": 242,
      "crate_id": 0,
      "name": "from_str_optional",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "primitive": "str"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "resolved_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "id": 196,
                            "name": "LeaseDuration"
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 26,
                "name": "$crate::error::Result"
              }
            }
          }
        }
      }
    },
    "273": {
      "id": 273,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "$crate::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "$crate::fmt::Result"
              }
            }
          }
        }
      }
    },
    "1692": {
      "id": 1692,
      "crate_id": 0,
      "name": "name",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 557,
                "name": "$crate::http::headers::HeaderName"
              }
            }
          }
        }
      }
    },
    "1357": {
      "id": 1357,
      "crate_id": 0,
      "name": "Timeout",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "impls": [
            1359,
            1360,
            1361,
            1362,
            1363,
            1364,
            1365,
            1366,
            1367,
            1368,
            1369,
            1370,
            1371,
            1372,
            1373,
            1374,
            1375,
            1376,
            1377,
            1378,
            1379,
            1380,
            1382,
            1384,
            1385,
            1387,
            1389
          ],
          "kind": {
            "tuple": [
              null
            ]
          }
        }
      }
    },
    "607": {
      "id": 607,
      "crate_id": 0,
      "name": "PROPOSED_LEASE_ID",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "276": {
      "id": 276,
      "crate_id": 0,
      "name": "eq",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "other",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 249,
                        "name": "LeaseAction"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "primitive": "bool"
            }
          }
        }
      }
    },
    "1435": {
      "id": 1435,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1408,
              "name": "ClientVersion"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1434
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "736": {
      "id": 736,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 699,
              "name": "ContentRange"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [
            "assert_receiver_is_total_eq"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 114,
            "name": "Eq"
          }
        }
      }
    },
    "1351": {
      "id": 1351,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1314,
              "name": "SourceLeaseId"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1349,
            1350
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 125,
            "name": "FromStr"
          }
        }
      }
    },
    "1909": {
      "id": 1909,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 908,
          "is_glob": false,
          "name": "Uuid",
          "source": "typespec_client_core::Uuid"
        }
      }
    },
    "1271": {
      "id": 1271,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1269,
              "name": "SequenceNumber"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1270
          ],
          "provided_trait_methods": [],
          "trait": null
        }
      }
    },
    "896": {
      "id": 896,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 871,
              "name": "LeaseId"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            895
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "469": {
      "id": 469,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 466,
          "is_glob": true,
          "name": "telemetry",
          "source": "telemetry"
        }
      }
    },
    "18": {
      "id": 18,
      "crate_id": 0,
      "name": "APPLICATION_OCTET_STREAM",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 14,
              "name": "crate::headers::HeaderValue"
            }
          }
        }
      }
    },
    "334": {
      "id": 334,
      "crate_id": 0,
      "name": "telemetry",
      "visibility": {
        "restricted": {
          "parent": 335,
          "path": "::options"
        }
      },
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "module": {
          "is_crate": false,
          "is_stripped": true,
          "items": [
            303
          ]
        }
      }
    },
    "63": {
      "id": 63,
      "crate_id": 2,
      "name": "try_into",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "generic": "Self"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "generic": "U"
                        }
                      },
                      {
                        "type": {
                          "qualified_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "name": "Error",
                            "self_type": {
                              "generic": "U"
                            },
                            "trait": {
                              "args": {
                                "angle_bracketed": {
                                  "args": [
                                    {
                                      "type": {
                                        "generic": "T"
                                      }
                                    }
                                  ],
                                  "constraints": []
                                }
                              },
                              "id": 62,
                              "name": "TryFrom"
                            }
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 64,
                "name": "Result"
              }
            }
          }
        }
      }
    },
    "474": {
      "id": 474,
      "crate_id": 0,
      "name": "new",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "T"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [
                                {
                                  "type": {
                                    "resolved_path": {
                                      "args": {
                                        "angle_bracketed": {
                                          "args": [
                                            {
                                              "lifetime": "'static"
                                            },
                                            {
                                              "type": {
                                                "primitive": "str"
                                              }
                                            }
                                          ],
                                          "constraints": []
                                        }
                                      },
                                      "id": 475,
                                      "name": "Cow"
                                    }
                                  }
                                }
                              ],
                              "constraints": []
                            }
                          },
                          "id": 58,
                          "name": "Into"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "T"
                  }
                }
              }
            ]
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "access_token",
                {
                  "generic": "T"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "239": {
      "id": 239,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 196,
              "name": "LeaseDuration"
            }
          },
          "generics": {
            "params": [
              {
                "kind": {
                  "lifetime": {
                    "outlives": []
                  }
                },
                "name": "'de"
              }
            ],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            238
          ],
          "provided_trait_methods": [
            "deserialize_in_place"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "lifetime": "'de"
                  }
                ],
                "constraints": []
              }
            },
            "id": 85,
            "name": "Deserialize"
          }
        }
      }
    },
    "823": {
      "id": 823,
      "crate_id": 0,
      "name": "eq",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "other",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 795,
                        "name": "IfSourceMatchCondition"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "primitive": "bool"
            }
          }
        }
      }
    },
    "1296": {
      "id": 1296,
      "crate_id": 0,
      "name": "clone",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 1269,
                "name": "SequenceNumber"
              }
            }
          }
        }
      }
    },
    "1348": {
      "id": 1348,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1314,
              "name": "SourceLeaseId"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1347
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 82,
            "name": "Display"
          }
        }
      }
    },
    "139": {
      "id": 139,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 31,
              "name": "LeaseStatus"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            138
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 31,
                        "name": "LeaseStatus"
                      }
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 140,
            "name": "FromStringOptional"
          }
        }
      }
    },
    "175": {
      "id": 175,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 146,
              "name": "LeaseState"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [
            "assert_receiver_is_total_eq"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 114,
            "name": "Eq"
          }
        }
      }
    },
    "1131": {
      "id": 1131,
      "crate_id": 0,
      "name": "NextMarker",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "impls": [
            1137,
            1138,
            1139,
            1140,
            1141,
            1142,
            1143,
            1144,
            1145,
            1146,
            1147,
            1148,
            1149,
            1150,
            1151,
            1152,
            1153,
            1154,
            1155,
            1156,
            1157,
            1158,
            1159,
            1161,
            1163,
            1164,
            1166,
            1167,
            1169,
            1171,
            1173,
            1175,
            1177
          ],
          "kind": {
            "tuple": [
              null
            ]
          }
        }
      }
    },
    "1893": {
      "id": 1893,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 1892,
          "is_glob": false,
          "name": "RequestContent",
          "source": "typespec_client_core::http::RequestContent"
        }
      }
    },
    "283": {
      "id": 283,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "borrowed_ref": {
              "is_mutable": false,
              "lifetime": "'static",
              "type": {
                "primitive": "str"
              }
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            282
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 249,
                        "name": "LeaseAction"
                      }
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 55,
            "name": "From"
          }
        }
      }
    },
    "1854": {
      "id": 1854,
      "crate_id": 0,
      "name": "tokio",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "module": {
          "is_crate": false,
          "is_stripped": false,
          "items": [
            1853
          ]
        }
      }
    },
    "1160": {
      "id": 1160,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "$crate::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "$crate::fmt::Result"
              }
            }
          }
        }
      }
    },
    "126": {
      "id": 126,
      "crate_id": 0,
      "name": "as_ref",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "borrowed_ref": {
                "is_mutable": false,
                "lifetime": null,
                "type": {
                  "primitive": "str"
                }
              }
            }
          }
        }
      }
    },
    "500": {
      "id": 500,
      "crate_id": 0,
      "name": "clone",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 25,
                "name": "Secret"
              }
            }
          }
        }
      }
    },
    "1206": {
      "id": 1206,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 918,
              "name": "ProposedLeaseId"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 118,
            "name": "Copy"
          }
        }
      }
    },
    "1388": {
      "id": 1388,
      "crate_id": 0,
      "name": "from",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "d",
                {
                  "resolved_path": {
                    "args": {
                      "angle_bracketed": {
                        "args": [],
                        "constraints": []
                      }
                    },
                    "id": 521,
                    "name": "Duration"
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "1176": {
      "id": 1176,
      "crate_id": 0,
      "name": "from",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "next_marker",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "primitive": "str"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "123": {
      "id": 123,
      "crate_id": 0,
      "name": "from_str",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "primitive": "str"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "resolved_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "id": 31,
                            "name": "LeaseStatus"
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 26,
                "name": "$crate::error::Result"
              }
            }
          }
        }
      }
    },
    "1833": {
      "id": 1833,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1805,
              "name": "TestMode"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1832
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 333,
            "name": "Default"
          }
        }
      }
    },
    "1482": {
      "id": 1482,
      "crate_id": 0,
      "name": "from_static",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": true,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": "'static",
                    "type": {
                      "primitive": "str"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "594": {
      "id": 594,
      "crate_id": 0,
      "name": "LEASE_BREAK_PERIOD",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "609": {
      "id": 609,
      "crate_id": 0,
      "name": "RANGE_GET_CONTENT_MD5",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "665": {
      "id": 665,
      "crate_id": 0,
      "name": "body_content",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "module": {
          "is_crate": false,
          "is_stripped": false,
          "items": [
            663
          ]
        }
      }
    },
    "1807": {
      "id": 1807,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1805,
              "name": "TestMode"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1806
          ],
          "provided_trait_methods": [],
          "trait": null
        }
      }
    },
    "1250": {
      "id": 1250,
      "crate_id": 0,
      "name": "from",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "r",
                {
                  "resolved_path": {
                    "args": {
                      "angle_bracketed": {
                        "args": [
                          {
                            "type": {
                              "primitive": "u64"
                            }
                          }
                        ],
                        "constraints": []
                      }
                    },
                    "id": 1212,
                    "name": "StdRange"
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "1385": {
      "id": 1385,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1357,
              "name": "Timeout"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 118,
            "name": "Copy"
          }
        }
      }
    },
    "1615": {
      "id": 1615,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1588,
              "name": "ContentDisposition"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1614
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "819": {
      "id": 819,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 795,
              "name": "IfSourceMatchCondition"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            818
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "1405": {
      "id": 1405,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 1314,
          "is_glob": false,
          "name": "SourceLeaseId",
          "source": "source_lease_id::SourceLeaseId"
        }
      }
    },
    "792": {
      "id": 792,
      "crate_id": 0,
      "name": "Match",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "variant": {
          "discriminant": null,
          "kind": {
            "tuple": [
              791
            ]
          }
        }
      }
    },
    "392": {
      "id": 392,
      "crate_id": 0,
      "name": "pipeline",
      "visibility": "crate",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "module": {
          "is_crate": false,
          "is_stripped": true,
          "items": [
            352
          ]
        }
      }
    },
    "565": {
      "id": 565,
      "crate_id": 0,
      "name": "BLOB_COMMITTED_BLOCK_COUNT",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "1386": {
      "id": 1386,
      "crate_id": 0,
      "name": "append_to_url_query",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "url",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 3,
                        "name": "Url"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": null
          }
        }
      }
    },
    "1311": {
      "id": 1311,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1269,
              "name": "SequenceNumber"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1309,
            1310
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 771,
            "name": "Header"
          }
        }
      }
    },
    "184": {
      "id": 184,
      "crate_id": 0,
      "name": "as_ref",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "borrowed_ref": {
                "is_mutable": false,
                "lifetime": null,
                "type": {
                  "primitive": "str"
                }
              }
            }
          }
        }
      }
    },
    "328": {
      "id": 328,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 303,
              "name": "TelemetryOptions"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            327
          ],
          "provided_trait_methods": [
            "clone_from"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 53,
            "name": "Clone"
          }
        }
      }
    },
    "1305": {
      "id": 1305,
      "crate_id": 0,
      "name": "cmp",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "other",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 1269,
                        "name": "SequenceNumber"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 1065,
                "name": "$crate::cmp::Ordering"
              }
            }
          }
        }
      }
    },
    "1850": {
      "id": 1850,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1805,
              "name": "TestMode"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1848,
            1849
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 125,
            "name": "FromStr"
          }
        }
      }
    },
    "31": {
      "id": 31,
      "crate_id": 0,
      "name": "LeaseStatus",
      "visibility": "public",
      "docs": "Lease status of an Azure resource.",
      "links": {},
      "attrs": [
        "#[non_exhaustive]"
      ],
      "deprecation": null,
      "inner": {
        "enum": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_stripped_variants": false,
          "impls": [
            32,
            34,
            36,
            38,
            40,
            42,
            45,
            49,
            52,
            57,
            60,
            65,
            70,
            73,
            78,
            81,
            84,
            87,
            89,
            92,
            95,
            97,
            101,
            106,
            108,
            111,
            113,
            116,
            117,
            120,
            124,
            127,
            130,
            133,
            136,
            139
          ],
          "variants": [
            29,
            30
          ]
        }
      }
    },
    "611": {
      "id": 611,
      "crate_id": 0,
      "name": "REQUEST_SERVER_ENCRYPTED",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "619": {
      "id": 619,
      "crate_id": 0,
      "name": "SOURCE_IF_UNMODIFIED_SINCE",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "436": {
      "id": 436,
      "crate_id": 0,
      "name": "TelemetryPolicy",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "impls": [
            438,
            439,
            440,
            441,
            442,
            443,
            444,
            445,
            446,
            447,
            448,
            449,
            450,
            451,
            452,
            453,
            454,
            455,
            456,
            457,
            458,
            459,
            461,
            463,
            465
          ],
          "kind": {
            "plain": {
              "fields": [],
              "has_stripped_fields": true
            }
          }
        }
      }
    },
    "660": {
      "id": 660,
      "crate_id": 0,
      "name": "get_provisioning_state",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "body",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "slice": {
                        "primitive": "u8"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "resolved_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "id": 661,
                            "name": "crate::lro::LroStatus"
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 354,
                "name": "Option"
              }
            }
          }
        }
      }
    },
    "16": {
      "id": 16,
      "crate_id": 0,
      "name": "APPLICATION_XML",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 14,
              "name": "crate::headers::HeaderValue"
            }
          }
        }
      }
    },
    "1662": {
      "id": 1662,
      "crate_id": 0,
      "name": "from_static",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": true,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": "'static",
                    "type": {
                      "primitive": "str"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "730": {
      "id": 730,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 699,
              "name": "ContentRange"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 118,
            "name": "Copy"
          }
        }
      }
    },
    "1026": {
      "id": 1026,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 992,
              "name": "MaxItemCount"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1025
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "primitive": "i32"
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 55,
            "name": "From"
          }
        }
      }
    },
    "1796": {
      "id": 1796,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1766,
              "name": "Prefix"
            }
          },
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "S"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [
                                {
                                  "type": {
                                    "resolved_path": {
                                      "args": {
                                        "angle_bracketed": {
                                          "args": [
                                            {
                                              "lifetime": "'static"
                                            },
                                            {
                                              "type": {
                                                "primitive": "str"
                                              }
                                            }
                                          ],
                                          "constraints": []
                                        }
                                      },
                                      "id": 475,
                                      "name": "std::borrow::Cow"
                                    }
                                  }
                                }
                              ],
                              "constraints": []
                            }
                          },
                          "id": 58,
                          "name": "Into"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "S"
                  }
                }
              }
            ]
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1795
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "generic": "S"
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 55,
            "name": "From"
          }
        }
      }
    },
    "1090": {
      "id": 1090,
      "crate_id": 0,
      "name": "iter",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "impl_trait": [
                {
                  "trait_bound": {
                    "generic_params": [],
                    "modifier": "none",
                    "trait": {
                      "args": {
                        "angle_bracketed": {
                          "args": [],
                          "constraints": [
                            {
                              "args": {
                                "angle_bracketed": {
                                  "args": [],
                                  "constraints": []
                                }
                              },
                              "binding": {
                                "equality": {
                                  "type": {
                                    "resolved_path": {
                                      "args": {
                                        "angle_bracketed": {
                                          "args": [],
                                          "constraints": []
                                        }
                                      },
                                      "id": 1092,
                                      "name": "Metadatum"
                                    }
                                  }
                                }
                              },
                              "name": "Item"
                            }
                          ]
                        }
                      },
                      "id": 1091,
                      "name": "Iterator"
                    }
                  }
                },
                {
                  "outlives": "'_"
                }
              ]
            }
          }
        }
      }
    },
    "24": {
      "id": 24,
      "crate_id": 0,
      "name": "hmac_sha256",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [
        "#[cfg(feature = \"hmac_openssl\")]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "data",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "primitive": "str"
                    }
                  }
                }
              ],
              [
                "key",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 25,
                        "name": "crate::credentials::Secret"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "resolved_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "id": 27,
                            "name": "String"
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 26,
                "name": "crate::Result"
              }
            }
          }
        }
      }
    },
    "1838": {
      "id": 1838,
      "crate_id": 0,
      "name": "partial_cmp",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "other",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 1805,
                        "name": "TestMode"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "resolved_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "id": 1065,
                            "name": "$crate::cmp::Ordering"
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 354,
                "name": "$crate::option::Option"
              }
            }
          }
        }
      }
    },
    "115": {
      "id": 115,
      "crate_id": 0,
      "name": "clone",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 31,
                "name": "LeaseStatus"
              }
            }
          }
        }
      }
    },
    "1846": {
      "id": 1846,
      "crate_id": 0,
      "name": "from",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "mode",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 1805,
                        "name": "TestMode"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "555": {
      "id": 555,
      "crate_id": 0,
      "name": "credentials",
      "visibility": "public",
      "docs": "Azure authentication and authorization.",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "module": {
          "is_crate": false,
          "is_stripped": false,
          "items": [
            472,
            25,
            518,
            398
          ]
        }
      }
    },
    "564": {
      "id": 564,
      "crate_id": 0,
      "name": "BLOB_CACHE_CONTROL",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "8": {
      "id": 8,
      "crate_id": 0,
      "name": "AZURE_CHINA_CLOUD",
      "visibility": "public",
      "docs": "China-based Azure Authority Host",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "static": {
          "expr": "_",
          "is_mutable": false,
          "is_unsafe": false,
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [
                    {
                      "type": {
                        "resolved_path": {
                          "args": {
                            "angle_bracketed": {
                              "args": [],
                              "constraints": []
                            }
                          },
                          "id": 3,
                          "name": "$crate::Url"
                        }
                      }
                    }
                  ],
                  "constraints": []
                }
              },
              "id": 2,
              "name": "once_cell::sync::Lazy"
            }
          }
        }
      }
    },
    "284": {
      "id": 284,
      "crate_id": 0,
      "name": "Err",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "assoc_type": {
          "bounds": [],
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 122,
              "name": "Error"
            }
          }
        }
      }
    },
    "189": {
      "id": 189,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 146,
              "name": "LeaseState"
            }
          },
          "generics": {
            "params": [
              {
                "kind": {
                  "lifetime": {
                    "outlives": []
                  }
                },
                "name": "'de"
              }
            ],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            188
          ],
          "provided_trait_methods": [
            "deserialize_in_place"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "lifetime": "'de"
                  }
                ],
                "constraints": []
              }
            },
            "id": 85,
            "name": "Deserialize"
          }
        }
      }
    },
    "602": {
      "id": 602,
      "crate_id": 0,
      "name": "MS_DATE",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "586": {
      "id": 586,
      "crate_id": 0,
      "name": "HAS_LEGAL_HOLD",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "1653": {
      "id": 1653,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1624,
              "name": "Continuation"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1652
          ],
          "provided_trait_methods": [
            "clone_from"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 53,
            "name": "Clone"
          }
        }
      }
    },
    "386": {
      "id": 386,
      "crate_id": 0,
      "name": "clone",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 352,
                "name": "Pipeline"
              }
            }
          }
        }
      }
    },
    "629": {
      "id": 629,
      "crate_id": 0,
      "name": "Location",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "variant": {
          "discriminant": null,
          "kind": "plain"
        }
      }
    },
    "738": {
      "id": 738,
      "crate_id": 0,
      "name": "from_str",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "primitive": "str"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "resolved_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "id": 699,
                            "name": "ContentRange"
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 26,
                "name": "crate::Result"
              }
            }
          }
        }
      }
    },
    "236": {
      "id": 236,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "::std::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "::std::fmt::Result"
              }
            }
          }
        }
      }
    },
    "1403": {
      "id": 1403,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 1217,
          "is_glob": false,
          "name": "Range",
          "source": "range::Range"
        }
      }
    },
    "1732": {
      "id": 1732,
      "crate_id": 0,
      "name": "Delimiter",
      "visibility": "public",
      "docs": "Set delimiter for the request",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "impls": [
            1735,
            1736,
            1737,
            1738,
            1739,
            1740,
            1741,
            1742,
            1743,
            1744,
            1745,
            1746,
            1747,
            1748,
            1749,
            1750,
            1751,
            1752,
            1753,
            1754,
            1755,
            1756,
            1758,
            1760,
            1762,
            1764
          ],
          "kind": {
            "tuple": [
              null
            ]
          }
        }
      }
    },
    "784": {
      "id": 784,
      "crate_id": 0,
      "name": "eq",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "other",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 749,
                        "name": "IfSequenceNumber"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "primitive": "bool"
            }
          }
        }
      }
    },
    "1550": {
      "id": 1550,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1516,
              "name": "App"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1548,
            1549
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 771,
            "name": "Header"
          }
        }
      }
    },
    "12": {
      "id": 12,
      "crate_id": 0,
      "name": "authority_hosts",
      "visibility": "public",
      "docs": "A list of known Azure authority hosts",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "module": {
          "is_crate": false,
          "is_stripped": false,
          "items": [
            8,
            9,
            10,
            11
          ]
        }
      }
    },
    "1165": {
      "id": 1165,
      "crate_id": 0,
      "name": "eq",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "other",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 1131,
                        "name": "NextMarker"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "primitive": "bool"
            }
          }
        }
      }
    },
    "1881": {
      "id": 1881,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 1074,
          "is_glob": false,
          "name": "AppendToUrlQuery",
          "source": "typespec_client_core::http::AppendToUrlQuery"
        }
      }
    },
    "1244": {
      "id": 1244,
      "crate_id": 0,
      "name": "clone",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 1217,
                "name": "Range"
              }
            }
          }
        }
      }
    },
    "99": {
      "id": 99,
      "crate_id": 119,
      "name": "__clone_box",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "_",
                {
                  "resolved_path": {
                    "args": {
                      "angle_bracketed": {
                        "args": [],
                        "constraints": []
                      }
                    },
                    "id": 100,
                    "name": "Private"
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "raw_pointer": {
                "is_mutable": true,
                "type": {
                  "tuple": []
                }
              }
            }
          }
        }
      }
    },
    "1616": {
      "id": 1616,
      "crate_id": 0,
      "name": "clone",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 1588,
                "name": "ContentDisposition"
              }
            }
          }
        }
      }
    },
    "9": {
      "id": 9,
      "crate_id": 0,
      "name": "AZURE_GERMANY_CLOUD",
      "visibility": "public",
      "docs": "Germany-based Azure Authority Host",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "static": {
          "expr": "_",
          "is_mutable": false,
          "is_unsafe": false,
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [
                    {
                      "type": {
                        "resolved_path": {
                          "args": {
                            "angle_bracketed": {
                              "args": [],
                              "constraints": []
                            }
                          },
                          "id": 3,
                          "name": "$crate::Url"
                        }
                      }
                    }
                  ],
                  "constraints": []
                }
              },
              "id": 2,
              "name": "once_cell::sync::Lazy"
            }
          }
        }
      }
    },
    "1338": {
      "id": 1338,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "$crate::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "$crate::fmt::Result"
              }
            }
          }
        }
      }
    },
    "1724": {
      "id": 1724,
      "crate_id": 0,
      "name": "clone",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 1696,
                "name": "Version"
              }
            }
          }
        }
      }
    },
    "1164": {
      "id": 1164,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1131,
              "name": "NextMarker"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 109,
            "name": "StructuralPartialEq"
          }
        }
      }
    },
    "1831": {
      "id": 1831,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1805,
              "name": "TestMode"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 118,
            "name": "Copy"
          }
        }
      }
    },
    "1880": {
      "id": 1880,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 1879,
          "is_glob": false,
          "name": "ResponseBody",
          "source": "typespec_client_core::http::response::ResponseBody"
        }
      }
    },
    "231": {
      "id": 231,
      "crate_id": 0,
      "name": "Err",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "assoc_type": {
          "bounds": [],
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 122,
              "name": "Error"
            }
          }
        }
      }
    },
    "830": {
      "id": 830,
      "crate_id": 0,
      "name": "0",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct_field": {
          "resolved_path": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 517,
            "name": "typespec_client_core::date::OffsetDateTime"
          }
        }
      }
    },
    "1758": {
      "id": 1758,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1732,
              "name": "Delimiter"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1757
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "779": {
      "id": 779,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 749,
              "name": "IfSequenceNumber"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            778
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "903": {
      "id": 903,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 871,
              "name": "LeaseId"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [
            "assert_receiver_is_total_eq"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 114,
            "name": "Eq"
          }
        }
      }
    },
    "1261": {
      "id": 1261,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1217,
              "name": "Range"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1258,
            1259,
            1260
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 769,
            "name": "AsHeaders"
          }
        }
      }
    },
    "1339": {
      "id": 1339,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1314,
              "name": "SourceLeaseId"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1338
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "1259": {
      "id": 1259,
      "crate_id": 0,
      "name": "Iter",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "assoc_type": {
          "bounds": [],
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [
                    {
                      "type": {
                        "tuple": [
                          {
                            "resolved_path": {
                              "args": {
                                "angle_bracketed": {
                                  "args": [],
                                  "constraints": []
                                }
                              },
                              "id": 557,
                              "name": "HeaderName"
                            }
                          },
                          {
                            "resolved_path": {
                              "args": {
                                "angle_bracketed": {
                                  "args": [],
                                  "constraints": []
                                }
                              },
                              "id": 14,
                              "name": "HeaderValue"
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "constraints": []
                }
              },
              "id": 767,
              "name": "IntoIter"
            }
          }
        }
      }
    },
    "1848": {
      "id": 1848,
      "crate_id": 0,
      "name": "Err",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "assoc_type": {
          "bounds": [],
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 122,
              "name": "Error"
            }
          }
        }
      }
    },
    "196": {
      "id": 196,
      "crate_id": 0,
      "name": "LeaseDuration",
      "visibility": "public",
      "docs": "Lease duration of an Azure resource.",
      "links": {},
      "attrs": [
        "#[non_exhaustive]"
      ],
      "deprecation": null,
      "inner": {
        "enum": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_stripped_variants": false,
          "impls": [
            197,
            198,
            199,
            200,
            201,
            202,
            203,
            204,
            205,
            206,
            207,
            208,
            209,
            210,
            211,
            212,
            213,
            214,
            215,
            216,
            217,
            218,
            219,
            221,
            222,
            224,
            225,
            227,
            228,
            230,
            233,
            235,
            237,
            239,
            241,
            243
          ],
          "variants": [
            194,
            195
          ]
        }
      }
    },
    "895": {
      "id": 895,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "$crate::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "$crate::fmt::Result"
              }
            }
          }
        }
      }
    },
    "1073": {
      "id": 1073,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1031,
              "name": "MaxResults"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1072
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 1074,
            "name": "AppendToUrlQuery"
          }
        }
      }
    },
    "298": {
      "id": 298,
      "crate_id": 0,
      "name": "models",
      "visibility": "crate",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "module": {
          "is_crate": false,
          "is_stripped": true,
          "items": [
            300,
            301
          ]
        }
      }
    },
    "1690": {
      "id": 1690,
      "crate_id": 0,
      "name": "from",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "generic": "S"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "1475": {
      "id": 1475,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1444,
              "name": "User"
            }
          },
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "S"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [
                                {
                                  "type": {
                                    "resolved_path": {
                                      "args": {
                                        "angle_bracketed": {
                                          "args": [
                                            {
                                              "lifetime": "'static"
                                            },
                                            {
                                              "type": {
                                                "primitive": "str"
                                              }
                                            }
                                          ],
                                          "constraints": []
                                        }
                                      },
                                      "id": 475,
                                      "name": "std::borrow::Cow"
                                    }
                                  }
                                }
                              ],
                              "constraints": []
                            }
                          },
                          "id": 58,
                          "name": "Into"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "S"
                  }
                }
              }
            ]
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1474
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "generic": "S"
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 55,
            "name": "From"
          }
        }
      }
    },
    "588": {
      "id": 588,
      "crate_id": 0,
      "name": "IF_SEQUENCE_NUMBER_LE",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "668": {
      "id": 668,
      "crate_id": 0,
      "name": "Failed",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "variant": {
          "discriminant": null,
          "kind": "plain"
        }
      }
    },
    "582": {
      "id": 582,
      "crate_id": 0,
      "name": "ENCRYPTION_ALGORITHM",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "174": {
      "id": 174,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 146,
              "name": "LeaseState"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            173
          ],
          "provided_trait_methods": [
            "ne"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 112,
            "name": "PartialEq"
          }
        }
      }
    },
    "867": {
      "id": 867,
      "crate_id": 0,
      "name": "value",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 14,
                "name": "headers::HeaderValue"
              }
            }
          }
        }
      }
    },
    "693": {
      "id": 693,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 661,
              "name": "LroStatus"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            692
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "borrowed_ref": {
                        "is_mutable": false,
                        "lifetime": null,
                        "type": {
                          "primitive": "str"
                        }
                      }
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 55,
            "name": "From"
          }
        }
      }
    },
    "170": {
      "id": 170,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "$crate::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "$crate::fmt::Result"
              }
            }
          }
        }
      }
    },
    "560": {
      "id": 560,
      "crate_id": 0,
      "name": "APP",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "1255": {
      "id": 1255,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1217,
              "name": "Range"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1254
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "type": {
                                  "primitive": "usize"
                                }
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 1212,
                        "name": "Range"
                      }
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 55,
            "name": "From"
          }
        }
      }
    },
    "10": {
      "id": 10,
      "crate_id": 0,
      "name": "AZURE_US_GOVERNMENT_CLOUD",
      "visibility": "public",
      "docs": "US Government Azure Authority Host",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "static": {
          "expr": "_",
          "is_mutable": false,
          "is_unsafe": false,
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [
                    {
                      "type": {
                        "resolved_path": {
                          "args": {
                            "angle_bracketed": {
                              "args": [],
                              "constraints": []
                            }
                          },
                          "id": 3,
                          "name": "$crate::Url"
                        }
                      }
                    }
                  ],
                  "constraints": []
                }
              },
              "id": 2,
              "name": "once_cell::sync::Lazy"
            }
          }
        }
      }
    },
    "48": {
      "id": 48,
      "crate_id": 2,
      "name": "borrow_mut",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "borrowed_ref": {
                "is_mutable": true,
                "lifetime": null,
                "type": {
                  "generic": "T"
                }
              }
            }
          }
        }
      }
    },
    "946": {
      "id": 946,
      "crate_id": 0,
      "name": "clone",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 921,
                "name": "LeaseBreakPeriod"
              }
            }
          }
        }
      }
    },
    "1512": {
      "id": 1512,
      "crate_id": 0,
      "name": "name",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 557,
                "name": "$crate::http::headers::HeaderName"
              }
            }
          }
        }
      }
    },
    "994": {
      "id": 994,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 992,
              "name": "MaxItemCount"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            993
          ],
          "provided_trait_methods": [],
          "trait": null
        }
      }
    },
    "729": {
      "id": 729,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 699,
              "name": "ContentRange"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            728
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "606": {
      "id": 606,
      "crate_id": 0,
      "name": "PROPERTIES",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "1884": {
      "id": 1884,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 427,
          "is_glob": false,
          "name": "Context",
          "source": "typespec_client_core::http::Context"
        }
      }
    },
    "505": {
      "id": 505,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 25,
              "name": "Secret"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            504
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 137,
            "name": "Serialize"
          }
        }
      }
    },
    "1260": {
      "id": 1260,
      "crate_id": 0,
      "name": "as_headers",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "qualified_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "name": "Iter",
                            "self_type": {
                              "generic": "Self"
                            },
                            "trait": {
                              "args": null,
                              "id": 769,
                              "name": ""
                            }
                          }
                        }
                      },
                      {
                        "type": {
                          "qualified_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "name": "Error",
                            "self_type": {
                              "generic": "Self"
                            },
                            "trait": {
                              "args": null,
                              "id": 769,
                              "name": ""
                            }
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 64,
                "name": "Result"
              }
            }
          }
        }
      }
    },
    "610": {
      "id": 610,
      "crate_id": 0,
      "name": "REQUEST_ID",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "1253": {
      "id": 1253,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1217,
              "name": "Range"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1252
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "type": {
                                  "primitive": "u64"
                                }
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 1215,
                        "name": "RangeFrom"
                      }
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 55,
            "name": "From"
          }
        }
      }
    },
    "1270": {
      "id": 1270,
      "crate_id": 0,
      "name": "new",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "max_results",
                {
                  "primitive": "u64"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "138": {
      "id": 138,
      "crate_id": 0,
      "name": "from_str_optional",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "primitive": "str"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "resolved_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "id": 31,
                            "name": "LeaseStatus"
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 26,
                "name": "$crate::error::Result"
              }
            }
          }
        }
      }
    },
    "103": {
      "id": 103,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "$crate::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "$crate::fmt::Result"
              }
            }
          }
        }
      }
    },
    "1621": {
      "id": 1621,
      "crate_id": 0,
      "name": "value",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 14,
                "name": "$crate::http::headers::HeaderValue"
              }
            }
          }
        }
      }
    },
    "423": {
      "id": 423,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 396,
              "name": "BearerTokenCredentialPolicy"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            422
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "1513": {
      "id": 1513,
      "crate_id": 0,
      "name": "value",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 14,
                "name": "$crate::http::headers::HeaderValue"
              }
            }
          }
        }
      }
    },
    "1204": {
      "id": 1204,
      "crate_id": 0,
      "name": "clone",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 918,
                "name": "ProposedLeaseId"
              }
            }
          }
        }
      }
    },
    "699": {
      "id": 699,
      "crate_id": 0,
      "name": "ContentRange",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "impls": [
            705,
            706,
            707,
            708,
            709,
            710,
            711,
            712,
            713,
            714,
            715,
            716,
            717,
            718,
            719,
            720,
            721,
            722,
            723,
            724,
            725,
            726,
            727,
            729,
            730,
            732,
            733,
            735,
            736,
            739,
            741
          ],
          "kind": {
            "plain": {
              "fields": [],
              "has_stripped_fields": true
            }
          }
        }
      }
    },
    "577": {
      "id": 577,
      "crate_id": 0,
      "name": "COPY_STATUS_DESCRIPTION",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "598": {
      "id": 598,
      "crate_id": 0,
      "name": "LEASE_STATUS",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "7": {
      "id": 7,
      "crate_id": 0,
      "name": "resource_manager_endpoint",
      "visibility": "public",
      "docs": "Endpoints for Azure Resource Manager in different Azure clouds",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "module": {
          "is_crate": false,
          "is_stripped": false,
          "items": [
            1,
            4,
            5,
            6
          ]
        }
      }
    },
    "562": {
      "id": 562,
      "crate_id": 0,
      "name": "AZURE_ASYNCOPERATION",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "749": {
      "id": 749,
      "crate_id": 0,
      "name": "IfSequenceNumber",
      "visibility": "public",
      "docs": "Conditional request header based on the value of the object's sequence number\n\nRef: <https://learn.microsoft.com/en-us/rest/api/storageservices/put-page-from-url>",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "enum": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_stripped_variants": false,
          "impls": [
            750,
            751,
            752,
            753,
            754,
            755,
            756,
            757,
            758,
            759,
            760,
            761,
            762,
            763,
            764,
            770,
            772,
            773,
            774,
            775,
            776,
            777,
            779,
            781,
            782,
            783,
            785,
            786,
            789
          ],
          "variants": [
            744,
            746,
            748
          ]
        }
      }
    },
    "1801": {
      "id": 1801,
      "crate_id": 0,
      "name": "request_options",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "module": {
          "is_crate": false,
          "is_stripped": false,
          "items": [
            1391,
            1392,
            1393,
            1394,
            1395,
            1396,
            1397,
            1398,
            1399,
            1400,
            1401,
            1402,
            1403,
            1404,
            1405,
            1406,
            1408,
            1444,
            1480,
            1516,
            1552,
            1588,
            1624,
            1660,
            1696,
            1732,
            1766,
            1800
          ]
        }
      }
    },
    "603": {
      "id": 603,
      "crate_id": 0,
      "name": "MS_RANGE",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "136": {
      "id": 136,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 31,
              "name": "LeaseStatus"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            134
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 137,
            "name": "Serialize"
          }
        }
      }
    },
    "768": {
      "id": 768,
      "crate_id": 29,
      "name": "as_headers",
      "visibility": "default",
      "docs": "Iterate over all the header name/value pairs.",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "qualified_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "name": "Iter",
                            "self_type": {
                              "generic": "T"
                            },
                            "trait": {
                              "args": {
                                "angle_bracketed": {
                                  "args": [],
                                  "constraints": []
                                }
                              },
                              "id": 769,
                              "name": "AsHeaders"
                            }
                          }
                        }
                      },
                      {
                        "type": {
                          "qualified_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "name": "Error",
                            "self_type": {
                              "generic": "T"
                            },
                            "trait": {
                              "args": {
                                "angle_bracketed": {
                                  "args": [],
                                  "constraints": []
                                }
                              },
                              "id": 769,
                              "name": "AsHeaders"
                            }
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 64,
                "name": "Result"
              }
            }
          }
        }
      }
    },
    "656": {
      "id": 656,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 631,
              "name": "FinalState"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            655
          ],
          "provided_trait_methods": [
            "clone_from"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 53,
            "name": "Clone"
          }
        }
      }
    },
    "1219": {
      "id": 1219,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1217,
              "name": "Range"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1218
          ],
          "provided_trait_methods": [],
          "trait": null
        }
      }
    },
    "347": {
      "id": 347,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 346,
          "is_glob": false,
          "name": "RetryOptions",
          "source": "typespec_client_core::http::RetryOptions"
        }
      }
    },
    "733": {
      "id": 733,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 699,
              "name": "ContentRange"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 109,
            "name": "StructuralPartialEq"
          }
        }
      }
    },
    "515": {
      "id": 515,
      "crate_id": 0,
      "name": "token",
      "visibility": "public",
      "docs": "Get the access token value.",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct_field": {
          "resolved_path": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 25,
            "name": "Secret"
          }
        }
      }
    },
    "1173": {
      "id": 1173,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1131,
              "name": "NextMarker"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1172
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 1074,
            "name": "AppendToUrlQuery"
          }
        }
      }
    },
    "71": {
      "id": 71,
      "crate_id": 2,
      "name": "type_id",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 72,
                "name": "TypeId"
              }
            }
          }
        }
      }
    },
    "463": {
      "id": 463,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 436,
              "name": "TelemetryPolicy"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            462
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "955": {
      "id": 955,
      "crate_id": 0,
      "name": "Infinite",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "variant": {
          "discriminant": null,
          "kind": "plain"
        }
      }
    },
    "171": {
      "id": 171,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 146,
              "name": "LeaseState"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            170
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "108": {
      "id": 108,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 31,
              "name": "LeaseStatus"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 109,
            "name": "StructuralPartialEq"
          }
        }
      }
    },
    "329": {
      "id": 329,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "$crate::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "$crate::fmt::Result"
              }
            }
          }
        }
      }
    },
    "666": {
      "id": 666,
      "crate_id": 0,
      "name": "InProgress",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "variant": {
          "discriminant": null,
          "kind": "plain"
        }
      }
    },
    "1387": {
      "id": 1387,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1357,
              "name": "Timeout"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1386
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 1074,
            "name": "AppendToUrlQuery"
          }
        }
      }
    },
    "293": {
      "id": 293,
      "crate_id": 0,
      "name": "serialize",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "S"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [],
                              "constraints": []
                            }
                          },
                          "id": 135,
                          "name": "serde::Serializer"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "S"
                  }
                }
              }
            ]
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "s",
                {
                  "generic": "S"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "qualified_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "name": "Ok",
                            "self_type": {
                              "generic": "S"
                            },
                            "trait": {
                              "args": null,
                              "id": 135,
                              "name": ""
                            }
                          }
                        }
                      },
                      {
                        "type": {
                          "qualified_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "name": "Error",
                            "self_type": {
                              "generic": "S"
                            },
                            "trait": {
                              "args": null,
                              "id": 135,
                              "name": ""
                            }
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 64,
                "name": "::core::result::Result"
              }
            }
          }
        }
      }
    },
    "1402": {
      "id": 1402,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 918,
          "is_glob": false,
          "name": "ProposedLeaseId",
          "source": "proposed_lease_id::ProposedLeaseId"
        }
      }
    },
    "1727": {
      "id": 1727,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1696,
              "name": "Version"
            }
          },
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "S"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [
                                {
                                  "type": {
                                    "resolved_path": {
                                      "args": {
                                        "angle_bracketed": {
                                          "args": [
                                            {
                                              "lifetime": "'static"
                                            },
                                            {
                                              "type": {
                                                "primitive": "str"
                                              }
                                            }
                                          ],
                                          "constraints": []
                                        }
                                      },
                                      "id": 475,
                                      "name": "std::borrow::Cow"
                                    }
                                  }
                                }
                              ],
                              "constraints": []
                            }
                          },
                          "id": 58,
                          "name": "Into"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "S"
                  }
                }
              }
            ]
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1726
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "generic": "S"
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 55,
            "name": "From"
          }
        }
      }
    },
    "182": {
      "id": 182,
      "crate_id": 0,
      "name": "from_str",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "primitive": "str"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "resolved_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "id": 146,
                            "name": "LeaseState"
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 26,
                "name": "$crate::error::Result"
              }
            }
          }
        }
      }
    },
    "330": {
      "id": 330,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 303,
              "name": "TelemetryOptions"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            329
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "1876": {
      "id": 1876,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 1875,
          "is_glob": false,
          "name": "PinnedStream",
          "source": "typespec_client_core::http::response::PinnedStream"
        }
      }
    },
    "1404": {
      "id": 1404,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 1269,
          "is_glob": false,
          "name": "SequenceNumber",
          "source": "sequence_number::SequenceNumber"
        }
      }
    },
    "1411": {
      "id": 1411,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1408,
              "name": "ClientVersion"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1409,
            1410
          ],
          "provided_trait_methods": [],
          "trait": null
        }
      }
    },
    "1394": {
      "id": 1394,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 834,
          "is_glob": false,
          "name": "IfSourceModifiedSinceCondition",
          "source": "if_source_modified_since_condition::IfSourceModifiedSinceCondition"
        }
      }
    },
    "1384": {
      "id": 1384,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1357,
              "name": "Timeout"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1383
          ],
          "provided_trait_methods": [
            "clone_from"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 53,
            "name": "Clone"
          }
        }
      }
    },
    "1910": {
      "id": 1910,
      "crate_id": 0,
      "name": "RequestId",
      "visibility": "public",
      "docs": "A unique identifier for a request.",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "type_alias": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 908,
              "name": "Uuid"
            }
          }
        }
      }
    },
    "834": {
      "id": 834,
      "crate_id": 0,
      "name": "IfSourceModifiedSinceCondition",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "enum": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_stripped_variants": false,
          "impls": [
            835,
            836,
            837,
            838,
            839,
            840,
            841,
            842,
            843,
            844,
            845,
            846,
            847,
            848,
            849,
            850,
            851,
            852,
            853,
            854,
            855,
            856,
            858,
            860,
            861,
            862,
            864,
            865,
            868
          ],
          "variants": [
            831,
            833
          ]
        }
      }
    },
    "516": {
      "id": 516,
      "crate_id": 0,
      "name": "expires_on",
      "visibility": "public",
      "docs": "Gets the time when the provided token expires.",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct_field": {
          "resolved_path": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 517,
            "name": "typespec_client_core::date::OffsetDateTime"
          }
        }
      }
    },
    "1762": {
      "id": 1762,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1732,
              "name": "Delimiter"
            }
          },
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "S"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [
                                {
                                  "type": {
                                    "resolved_path": {
                                      "args": {
                                        "angle_bracketed": {
                                          "args": [
                                            {
                                              "lifetime": "'static"
                                            },
                                            {
                                              "type": {
                                                "primitive": "str"
                                              }
                                            }
                                          ],
                                          "constraints": []
                                        }
                                      },
                                      "id": 475,
                                      "name": "std::borrow::Cow"
                                    }
                                  }
                                }
                              ],
                              "constraints": []
                            }
                          },
                          "id": 58,
                          "name": "Into"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "S"
                  }
                }
              }
            ]
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1761
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "generic": "S"
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 55,
            "name": "From"
          }
        }
      }
    },
    "1310": {
      "id": 1310,
      "crate_id": 0,
      "name": "value",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 14,
                "name": "headers::HeaderValue"
              }
            }
          }
        }
      }
    },
    "193": {
      "id": 193,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 146,
              "name": "LeaseState"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            192
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 146,
                        "name": "LeaseState"
                      }
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 140,
            "name": "FromStringOptional"
          }
        }
      }
    },
    "127": {
      "id": 127,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 31,
              "name": "LeaseStatus"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            126
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "primitive": "str"
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 128,
            "name": "AsRef"
          }
        }
      }
    },
    "1583": {
      "id": 1583,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1552,
              "name": "ClientRequestId"
            }
          },
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "S"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [
                                {
                                  "type": {
                                    "resolved_path": {
                                      "args": {
                                        "angle_bracketed": {
                                          "args": [
                                            {
                                              "lifetime": "'static"
                                            },
                                            {
                                              "type": {
                                                "primitive": "str"
                                              }
                                            }
                                          ],
                                          "constraints": []
                                        }
                                      },
                                      "id": 475,
                                      "name": "std::borrow::Cow"
                                    }
                                  }
                                }
                              ],
                              "constraints": []
                            }
                          },
                          "id": 58,
                          "name": "Into"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "S"
                  }
                }
              }
            ]
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1582
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "generic": "S"
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 55,
            "name": "From"
          }
        }
      }
    },
    "916": {
      "id": 916,
      "crate_id": 0,
      "name": "from",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "lease_id",
                {
                  "resolved_path": {
                    "args": {
                      "angle_bracketed": {
                        "args": [],
                        "constraints": []
                      }
                    },
                    "id": 871,
                    "name": "LeaseId"
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "243": {
      "id": 243,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 196,
              "name": "LeaseDuration"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            242
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 196,
                        "name": "LeaseDuration"
                      }
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 140,
            "name": "FromStringOptional"
          }
        }
      }
    },
    "566": {
      "id": 566,
      "crate_id": 0,
      "name": "BLOB_CONTENT_LENGTH",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "989": {
      "id": 989,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 958,
              "name": "LeaseDuration"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            988
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 521,
                        "name": "Duration"
                      }
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 55,
            "name": "From"
          }
        }
      }
    },
    "655": {
      "id": 655,
      "crate_id": 0,
      "name": "clone",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 631,
                "name": "FinalState"
              }
            }
          }
        }
      }
    },
    "615": {
      "id": 615,
      "crate_id": 0,
      "name": "SKU_NAME",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "993": {
      "id": 993,
      "crate_id": 0,
      "name": "new",
      "visibility": "public",
      "docs": "Create a new `MaxItemCount`",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "count",
                {
                  "primitive": "i32"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "1265": {
      "id": 1265,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "fmt::Result"
              }
            }
          }
        }
      }
    },
    "1389": {
      "id": 1389,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1357,
              "name": "Timeout"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1388
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 521,
                        "name": "Duration"
                      }
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 55,
            "name": "From"
          }
        }
      }
    },
    "1397": {
      "id": 1397,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 958,
          "is_glob": false,
          "name": "LeaseDuration",
          "source": "lease_duration::LeaseDuration"
        }
      }
    },
    "290": {
      "id": 290,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 249,
              "name": "LeaseAction"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            289
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 82,
            "name": "Display"
          }
        }
      }
    },
    "860": {
      "id": 860,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 834,
              "name": "IfSourceModifiedSinceCondition"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            859
          ],
          "provided_trait_methods": [
            "clone_from"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 53,
            "name": "Clone"
          }
        }
      }
    },
    "1068": {
      "id": 1068,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1031,
              "name": "MaxResults"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [
            "assert_receiver_is_total_eq"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 114,
            "name": "Eq"
          }
        }
      }
    },
    "424": {
      "id": 424,
      "crate_id": 0,
      "name": "clone",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 396,
                "name": "BearerTokenCredentialPolicy"
              }
            }
          }
        }
      }
    },
    "133": {
      "id": 133,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 31,
              "name": "LeaseStatus"
            }
          },
          "generics": {
            "params": [
              {
                "kind": {
                  "lifetime": {
                    "outlives": []
                  }
                },
                "name": "'de"
              }
            ],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            131
          ],
          "provided_trait_methods": [
            "deserialize_in_place"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "lifetime": "'de"
                  }
                ],
                "constraints": []
              }
            },
            "id": 85,
            "name": "Deserialize"
          }
        }
      }
    },
    "501": {
      "id": 501,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 25,
              "name": "Secret"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            500
          ],
          "provided_trait_methods": [
            "clone_from"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 53,
            "name": "Clone"
          }
        }
      }
    },
    "476": {
      "id": 476,
      "crate_id": 0,
      "name": "secret",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "borrowed_ref": {
                "is_mutable": false,
                "lifetime": null,
                "type": {
                  "primitive": "str"
                }
              }
            }
          }
        }
      }
    },
    "13": {
      "id": 13,
      "crate_id": 0,
      "name": "MULTIPART_FORM_DATA",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 14,
              "name": "crate::headers::HeaderValue"
            }
          }
        }
      }
    },
    "1214": {
      "id": 1214,
      "crate_id": 0,
      "name": "0",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct_field": {
          "resolved_path": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "primitive": "u64"
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 1215,
            "name": "std::ops::RangeFrom"
          }
        }
      }
    },
    "667": {
      "id": 667,
      "crate_id": 0,
      "name": "Succeeded",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "variant": {
          "discriminant": null,
          "kind": "plain"
        }
      }
    },
    "146": {
      "id": 146,
      "crate_id": 0,
      "name": "LeaseState",
      "visibility": "public",
      "docs": "State of a lease of an Azure resource.",
      "links": {},
      "attrs": [
        "#[non_exhaustive]"
      ],
      "deprecation": null,
      "inner": {
        "enum": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_stripped_variants": false,
          "impls": [
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            165,
            166,
            167,
            168,
            169,
            171,
            172,
            174,
            175,
            177,
            178,
            180,
            183,
            185,
            187,
            189,
            191,
            193
          ],
          "variants": [
            141,
            142,
            143,
            144,
            145
          ]
        }
      }
    },
    "1167": {
      "id": 1167,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1131,
              "name": "NextMarker"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [
            "assert_receiver_is_total_eq"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 114,
            "name": "Eq"
          }
        }
      }
    },
    "1734": {
      "id": 1734,
      "crate_id": 0,
      "name": "from_static",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": true,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": "'static",
                    "type": {
                      "primitive": "str"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "781": {
      "id": 781,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 749,
              "name": "IfSequenceNumber"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            780
          ],
          "provided_trait_methods": [
            "clone_from"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 53,
            "name": "Clone"
          }
        }
      }
    },
    "113": {
      "id": 113,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 31,
              "name": "LeaseStatus"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [
            "assert_receiver_is_total_eq"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 114,
            "name": "Eq"
          }
        }
      }
    },
    "950": {
      "id": 950,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 921,
              "name": "LeaseBreakPeriod"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            949
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 521,
                        "name": "Duration"
                      }
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 55,
            "name": "From"
          }
        }
      }
    },
    "335": {
      "id": 335,
      "crate_id": 0,
      "name": "options",
      "visibility": "crate",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "module": {
          "is_crate": false,
          "is_stripped": true,
          "items": [
            337,
            339,
            341,
            343,
            345,
            347,
            349,
            350
          ]
        }
      }
    },
    "1834": {
      "id": 1834,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1805,
              "name": "TestMode"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 109,
            "name": "StructuralPartialEq"
          }
        }
      }
    },
    "1795": {
      "id": 1795,
      "crate_id": 0,
      "name": "from",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "generic": "S"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "304": {
      "id": 304,
      "crate_id": 0,
      "name": "application_id",
      "visibility": "public",
      "docs": "Set the application ID to telemetry.",
      "links": {},
      "attrs": [
        "#[allow(clippy :: redundant_field_names)]",
        "#[allow(clippy :: needless_update)]",
        "#[allow(missing_docs)]",
        "#[must_use]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [
                      {
                        "trait_bound": {
                          "generic_params": [],
                          "modifier": "none",
                          "trait": {
                            "args": {
                              "angle_bracketed": {
                                "args": [
                                  {
                                    "type": {
                                      "resolved_path": {
                                        "args": {
                                          "angle_bracketed": {
                                            "args": [],
                                            "constraints": []
                                          }
                                        },
                                        "id": 27,
                                        "name": "String"
                                      }
                                    }
                                  }
                                ],
                                "constraints": []
                              }
                            },
                            "id": 58,
                            "name": "::std::convert::Into"
                          }
                        }
                      }
                    ],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "P"
              }
            ],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "generic": "Self"
                }
              ],
              [
                "application_id",
                {
                  "generic": "P"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "1307": {
      "id": 1307,
      "crate_id": 0,
      "name": "from",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "max_results",
                {
                  "primitive": "u64"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "1698": {
      "id": 1698,
      "crate_id": 0,
      "name": "from_static",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": true,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": "'static",
                    "type": {
                      "primitive": "str"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "1087": {
      "id": 1087,
      "crate_id": 0,
      "name": "len",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "primitive": "usize"
            }
          }
        }
      }
    },
    "1841": {
      "id": 1841,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1805,
              "name": "TestMode"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1840
          ],
          "provided_trait_methods": [
            "max",
            "min",
            "clamp"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 1071,
            "name": "Ord"
          }
        }
      }
    },
    "183": {
      "id": 183,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 146,
              "name": "LeaseState"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            181,
            182
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 125,
            "name": "FromStr"
          }
        }
      }
    },
    "1162": {
      "id": 1162,
      "crate_id": 0,
      "name": "clone",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 1131,
                "name": "NextMarker"
              }
            }
          }
        }
      }
    },
    "223": {
      "id": 223,
      "crate_id": 0,
      "name": "eq",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "other",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 196,
                        "name": "LeaseDuration"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "primitive": "bool"
            }
          }
        }
      }
    },
    "187": {
      "id": 187,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 146,
              "name": "LeaseState"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            186
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 82,
            "name": "Display"
          }
        }
      }
    },
    "331": {
      "id": 331,
      "crate_id": 0,
      "name": "default",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 303,
                "name": "TelemetryOptions"
              }
            }
          }
        }
      }
    },
    "1383": {
      "id": 1383,
      "crate_id": 0,
      "name": "clone",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 1357,
                "name": "Timeout"
              }
            }
          }
        }
      }
    },
    "506": {
      "id": 506,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 25,
              "name": "Secret"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [
            "assert_receiver_is_total_eq"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 114,
            "name": "Eq"
          }
        }
      }
    },
    "56": {
      "id": 56,
      "crate_id": 2,
      "name": "into",
      "visibility": "default",
      "docs": "Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.",
      "links": {
        "From": 55
      },
      "attrs": [
        "#[track_caller]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "generic": "Self"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "U"
            }
          }
        }
      }
    },
    "1802": {
      "id": 1802,
      "crate_id": 0,
      "name": "Playback",
      "visibility": "default",
      "docs": "Test client methods by playing back recordings.",
      "links": {},
      "attrs": [
        "#[default]"
      ],
      "deprecation": null,
      "inner": {
        "variant": {
          "discriminant": null,
          "kind": "plain"
        }
      }
    },
    "1897": {
      "id": 1897,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 1896,
          "is_glob": false,
          "name": "json",
          "source": "typespec_client_core::json"
        }
      }
    },
    "297": {
      "id": 297,
      "crate_id": 0,
      "name": "lease",
      "visibility": {
        "restricted": {
          "parent": 298,
          "path": "::models"
        }
      },
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "module": {
          "is_crate": false,
          "is_stripped": true,
          "items": [
            31,
            146,
            196,
            249
          ]
        }
      }
    },
    "141": {
      "id": 141,
      "crate_id": 0,
      "name": "Available",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "variant": {
          "discriminant": null,
          "kind": "plain"
        }
      }
    },
    "472": {
      "id": 472,
      "crate_id": 0,
      "name": "DEFAULT_SCOPE_SUFFIX",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "static": {
          "expr": "\"/.default\"",
          "is_mutable": false,
          "is_unsafe": false,
          "type": {
            "borrowed_ref": {
              "is_mutable": false,
              "lifetime": null,
              "type": {
                "primitive": "str"
              }
            }
          }
        }
      }
    },
    "1203": {
      "id": 1203,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 918,
              "name": "ProposedLeaseId"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1202
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "1483": {
      "id": 1483,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1480,
              "name": "ActivityId"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1481,
            1482
          ],
          "provided_trait_methods": [],
          "trait": null
        }
      }
    },
    "1391": {
      "id": 1391,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 699,
          "is_glob": false,
          "name": "ContentRange",
          "source": "content_range::ContentRange"
        }
      }
    },
    "124": {
      "id": 124,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 31,
              "name": "LeaseStatus"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            121,
            123
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 125,
            "name": "FromStr"
          }
        }
      }
    },
    "570": {
      "id": 570,
      "crate_id": 0,
      "name": "CLIENT_REQUEST_ID",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "1392": {
      "id": 1392,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 749,
          "is_glob": false,
          "name": "IfSequenceNumber",
          "source": "if_sequence_number::IfSequenceNumber"
        }
      }
    },
    "6": {
      "id": 6,
      "crate_id": 0,
      "name": "AZURE_US_GOVERNMENT_CLOUD",
      "visibility": "public",
      "docs": "Azure Resource Manager US government cloud endpoint",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "static": {
          "expr": "_",
          "is_mutable": false,
          "is_unsafe": false,
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [
                    {
                      "type": {
                        "resolved_path": {
                          "args": {
                            "angle_bracketed": {
                              "args": [],
                              "constraints": []
                            }
                          },
                          "id": 3,
                          "name": "$crate::Url"
                        }
                      }
                    }
                  ],
                  "constraints": []
                }
              },
              "id": 2,
              "name": "once_cell::sync::Lazy"
            }
          }
        }
      }
    },
    "616": {
      "id": 616,
      "crate_id": 0,
      "name": "SOURCE_IF_MATCH",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "20": {
      "id": 20,
      "crate_id": 0,
      "name": "content_type",
      "visibility": "public",
      "docs": "Constants related to the Content-Type header\n\n<https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type>",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "module": {
          "is_crate": false,
          "is_stripped": false,
          "items": [
            13,
            15,
            16,
            17,
            18,
            19
          ]
        }
      }
    },
    "1172": {
      "id": 1172,
      "crate_id": 0,
      "name": "append_to_url_query",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "url",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 3,
                        "name": "Url"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": null
          }
        }
      }
    },
    "1549": {
      "id": 1549,
      "crate_id": 0,
      "name": "value",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 14,
                "name": "$crate::http::headers::HeaderValue"
              }
            }
          }
        }
      }
    },
    "864": {
      "id": 864,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 834,
              "name": "IfSourceModifiedSinceCondition"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            863
          ],
          "provided_trait_methods": [
            "ne"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 112,
            "name": "PartialEq"
          }
        }
      }
    },
    "1916": {
      "id": 1916,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [
        "#[doc(inline)]"
      ],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 298,
          "is_glob": true,
          "name": "models",
          "source": "models"
        }
      }
    },
    "425": {
      "id": 425,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 396,
              "name": "BearerTokenCredentialPolicy"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            424
          ],
          "provided_trait_methods": [
            "clone_from"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 53,
            "name": "Clone"
          }
        }
      }
    },
    "953": {
      "id": 953,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 921,
              "name": "LeaseBreakPeriod"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            951,
            952
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 771,
            "name": "Header"
          }
        }
      }
    },
    "915": {
      "id": 915,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 871,
              "name": "LeaseId"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            913,
            914
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 771,
            "name": "Header"
          }
        }
      }
    },
    "1863": {
      "id": 1863,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 26,
          "is_glob": false,
          "name": "Result",
          "source": "typespec::Result"
        }
      }
    },
    "106": {
      "id": 106,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 31,
              "name": "LeaseStatus"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            103
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "1302": {
      "id": 1302,
      "crate_id": 0,
      "name": "partial_cmp",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "other",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 1269,
                        "name": "SequenceNumber"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "resolved_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "id": 1065,
                            "name": "$crate::cmp::Ordering"
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 354,
                "name": "$crate::option::Option"
              }
            }
          }
        }
      }
    },
    "1264": {
      "id": 1264,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1217,
              "name": "Range"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1262,
            1263
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 125,
            "name": "FromStr"
          }
        }
      }
    },
    "1804": {
      "id": 1804,
      "crate_id": 0,
      "name": "Live",
      "visibility": "default",
      "docs": "Execute live sessions without recording.",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "variant": {
          "discriminant": null,
          "kind": "plain"
        }
      }
    },
    "1441": {
      "id": 1441,
      "crate_id": 0,
      "name": "value",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 14,
                "name": "$crate::http::headers::HeaderValue"
              }
            }
          }
        }
      }
    },
    "561": {
      "id": 561,
      "crate_id": 0,
      "name": "APPEND_POSITION",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "904": {
      "id": 904,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "fmt",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "std::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "tuple": []
                        }
                      },
                      {
                        "type": {
                          "resolved_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "id": 905,
                            "name": "std::fmt::Error"
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 64,
                "name": "Result"
              }
            }
          }
        }
      }
    },
    "1085": {
      "id": 1085,
      "crate_id": 0,
      "name": "insert",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "K"
              },
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "V"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [
                                {
                                  "type": {
                                    "resolved_path": {
                                      "args": {
                                        "angle_bracketed": {
                                          "args": [],
                                          "constraints": []
                                        }
                                      },
                                      "id": 27,
                                      "name": "String"
                                    }
                                  }
                                }
                              ],
                              "constraints": []
                            }
                          },
                          "id": 58,
                          "name": "Into"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "K"
                  }
                }
              },
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [
                                {
                                  "type": {
                                    "resolved_path": {
                                      "args": {
                                        "angle_bracketed": {
                                          "args": [],
                                          "constraints": []
                                        }
                                      },
                                      "id": 1086,
                                      "name": "Bytes"
                                    }
                                  }
                                }
                              ],
                              "constraints": []
                            }
                          },
                          "id": 58,
                          "name": "Into"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "V"
                  }
                }
              }
            ]
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "k",
                {
                  "generic": "K"
                }
              ],
              [
                "v",
                {
                  "generic": "V"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "resolved_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "id": 1086,
                            "name": "Bytes"
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 354,
                "name": "Option"
              }
            }
          }
        }
      }
    },
    "280": {
      "id": 280,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 249,
              "name": "LeaseAction"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            279
          ],
          "provided_trait_methods": [
            "clone_from"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 53,
            "name": "Clone"
          }
        }
      }
    },
    "949": {
      "id": 949,
      "crate_id": 0,
      "name": "from",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "duration",
                {
                  "resolved_path": {
                    "args": {
                      "angle_bracketed": {
                        "args": [],
                        "constraints": []
                      }
                    },
                    "id": 521,
                    "name": "Duration"
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "191": {
      "id": 191,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 146,
              "name": "LeaseState"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            190
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 137,
            "name": "Serialize"
          }
        }
      }
    },
    "1693": {
      "id": 1693,
      "crate_id": 0,
      "name": "value",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 14,
                "name": "$crate::http::headers::HeaderValue"
              }
            }
          }
        }
      }
    },
    "786": {
      "id": 786,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 749,
              "name": "IfSequenceNumber"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [
            "assert_receiver_is_total_eq"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 114,
            "name": "Eq"
          }
        }
      }
    },
    "1393": {
      "id": 1393,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 795,
          "is_glob": false,
          "name": "IfSourceMatchCondition",
          "source": "if_source_match_condition::IfSourceMatchCondition"
        }
      }
    },
    "385": {
      "id": 385,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 352,
              "name": "Pipeline"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            384
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "1345": {
      "id": 1345,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1314,
              "name": "SourceLeaseId"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1344
          ],
          "provided_trait_methods": [
            "ne"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 112,
            "name": "PartialEq"
          }
        }
      }
    },
    "1020": {
      "id": 1020,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 992,
              "name": "MaxItemCount"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1019
          ],
          "provided_trait_methods": [
            "clone_from"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 53,
            "name": "Clone"
          }
        }
      }
    },
    "605": {
      "id": 605,
      "crate_id": 0,
      "name": "PAGE_WRITE",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "695": {
      "id": 695,
      "crate_id": 0,
      "name": "lro",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "module": {
          "is_crate": false,
          "is_stripped": false,
          "items": [
            662,
            665,
            661,
            694
          ]
        }
      }
    },
    "1134": {
      "id": 1134,
      "crate_id": 0,
      "name": "as_str",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "borrowed_ref": {
                "is_mutable": false,
                "lifetime": null,
                "type": {
                  "primitive": "str"
                }
              }
            }
          }
        }
      }
    },
    "910": {
      "id": 910,
      "crate_id": 0,
      "name": "Err",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "assoc_type": {
          "bounds": [],
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "type": {
            "qualified_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "name": "Err",
              "self_type": {
                "resolved_path": {
                  "args": {
                    "angle_bracketed": {
                      "args": [],
                      "constraints": []
                    }
                  },
                  "id": 908,
                  "name": "Uuid"
                }
              },
              "trait": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 125,
                "name": "FromStr"
              }
            }
          }
        }
      }
    },
    "1829": {
      "id": 1829,
      "crate_id": 0,
      "name": "clone",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 1805,
                "name": "TestMode"
              }
            }
          }
        }
      }
    },
    "391": {
      "id": 391,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 352,
              "name": "Pipeline"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            388,
            390
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 374,
            "name": "Deref"
          }
        }
      }
    },
    "291": {
      "id": 291,
      "crate_id": 0,
      "name": "deserialize",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "D"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [
                                {
                                  "lifetime": "'de"
                                }
                              ],
                              "constraints": []
                            }
                          },
                          "id": 132,
                          "name": "serde::Deserializer"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "D"
                  }
                }
              }
            ]
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "deserializer",
                {
                  "generic": "D"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "generic": "Self"
                        }
                      },
                      {
                        "type": {
                          "qualified_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "name": "Error",
                            "self_type": {
                              "generic": "D"
                            },
                            "trait": {
                              "args": null,
                              "id": 132,
                              "name": ""
                            }
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 64,
                "name": "::core::result::Result"
              }
            }
          }
        }
      }
    },
    "1314": {
      "id": 1314,
      "crate_id": 0,
      "name": "SourceLeaseId",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "impls": [
            1315,
            1316,
            1317,
            1318,
            1319,
            1320,
            1321,
            1322,
            1323,
            1324,
            1325,
            1326,
            1327,
            1328,
            1329,
            1330,
            1331,
            1332,
            1333,
            1334,
            1335,
            1336,
            1337,
            1339,
            1341,
            1342,
            1343,
            1345,
            1346,
            1348,
            1351,
            1354
          ],
          "kind": {
            "tuple": [
              null
            ]
          }
        }
      }
    },
    "1021": {
      "id": 1021,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 992,
              "name": "MaxItemCount"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 118,
            "name": "Copy"
          }
        }
      }
    },
    "1760": {
      "id": 1760,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1732,
              "name": "Delimiter"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1759
          ],
          "provided_trait_methods": [
            "clone_from"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 53,
            "name": "Clone"
          }
        }
      }
    },
    "28": {
      "id": 28,
      "crate_id": 0,
      "name": "hmac",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "module": {
          "is_crate": false,
          "is_stripped": false,
          "items": [
            24
          ]
        }
      }
    },
    "1083": {
      "id": 1083,
      "crate_id": 0,
      "name": "Metadata",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "impls": [
            1093,
            1094,
            1095,
            1096,
            1097,
            1098,
            1099,
            1100,
            1101,
            1102,
            1103,
            1104,
            1105,
            1106,
            1107,
            1108,
            1109,
            1110,
            1111,
            1112,
            1113,
            1114,
            1116,
            1118,
            1120,
            1123,
            1126
          ],
          "kind": {
            "tuple": [
              null
            ]
          }
        }
      }
    },
    "614": {
      "id": 614,
      "crate_id": 0,
      "name": "SESSION_TOKEN",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "670": {
      "id": 670,
      "crate_id": 0,
      "name": "0",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct_field": {
          "resolved_path": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 27,
            "name": "String"
          }
        }
      }
    },
    "1256": {
      "id": 1256,
      "crate_id": 0,
      "name": "from",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "r",
                {
                  "resolved_path": {
                    "args": {
                      "angle_bracketed": {
                        "args": [
                          {
                            "type": {
                              "primitive": "usize"
                            }
                          }
                        ],
                        "constraints": []
                      }
                    },
                    "id": 1215,
                    "name": "RangeFrom"
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "1359": {
      "id": 1359,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1357,
              "name": "Timeout"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1358
          ],
          "provided_trait_methods": [],
          "trait": null
        }
      }
    },
    "1202": {
      "id": 1202,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "$crate::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "$crate::fmt::Result"
              }
            }
          }
        }
      }
    },
    "1508": {
      "id": 1508,
      "crate_id": 0,
      "name": "clone",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 1480,
                "name": "ActivityId"
              }
            }
          }
        }
      }
    },
    "568": {
      "id": 568,
      "crate_id": 0,
      "name": "BLOB_SEQUENCE_NUMBER",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "1213": {
      "id": 1213,
      "crate_id": 0,
      "name": "Range",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "variant": {
          "discriminant": null,
          "kind": {
            "tuple": [
              1211
            ]
          }
        }
      }
    },
    "1803": {
      "id": 1803,
      "crate_id": 0,
      "name": "Record",
      "visibility": "default",
      "docs": "Record live sessions.",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "variant": {
          "discriminant": null,
          "kind": "plain"
        }
      }
    },
    "1794": {
      "id": 1794,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1766,
              "name": "Prefix"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1793
          ],
          "provided_trait_methods": [
            "clone_from"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 53,
            "name": "Clone"
          }
        }
      }
    },
    "75": {
      "id": 75,
      "crate_id": 5,
      "name": "Owned",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "assoc_type": {
          "bounds": [],
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "type": {
            "generic": "T"
          }
        }
      }
    },
    "117": {
      "id": 117,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 31,
              "name": "LeaseStatus"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 118,
            "name": "Copy"
          }
        }
      }
    },
    "1894": {
      "id": 1894,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 664,
          "is_glob": false,
          "name": "StatusCode",
          "source": "typespec_client_core::http::StatusCode"
        }
      }
    },
    "372": {
      "id": 372,
      "crate_id": 2,
      "name": "Target",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "assoc_type": {
          "bounds": [],
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "type": {
            "generic": "T"
          }
        }
      }
    },
    "1088": {
      "id": 1088,
      "crate_id": 0,
      "name": "is_empty",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "primitive": "bool"
            }
          }
        }
      }
    },
    "507": {
      "id": 507,
      "crate_id": 0,
      "name": "eq",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "other",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "primitive": "bool"
            }
          }
        }
      }
    },
    "1440": {
      "id": 1440,
      "crate_id": 0,
      "name": "name",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 557,
                "name": "$crate::http::headers::HeaderName"
              }
            }
          }
        }
      }
    },
    "1070": {
      "id": 1070,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1031,
              "name": "MaxResults"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1069
          ],
          "provided_trait_methods": [
            "max",
            "min",
            "clamp"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 1071,
            "name": "Ord"
          }
        }
      }
    },
    "1915": {
      "id": 1915,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 23,
          "is_glob": true,
          "name": "constants",
          "source": "constants"
        }
      }
    },
    "737": {
      "id": 737,
      "crate_id": 0,
      "name": "Err",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "assoc_type": {
          "bounds": [],
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 122,
              "name": "Error"
            }
          }
        }
      }
    },
    "1907": {
      "id": 1907,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 1906,
          "is_glob": false,
          "name": "SeekableStream",
          "source": "typespec_client_core::stream::SeekableStream"
        }
      }
    },
    "1400": {
      "id": 1400,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 1083,
          "is_glob": false,
          "name": "Metadata",
          "source": "metadata::Metadata"
        }
      }
    },
    "1862": {
      "id": 1862,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 122,
          "is_glob": false,
          "name": "Error",
          "source": "typespec::Error"
        }
      }
    },
    "1697": {
      "id": 1697,
      "crate_id": 0,
      "name": "new",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "S"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [
                                {
                                  "type": {
                                    "resolved_path": {
                                      "args": {
                                        "angle_bracketed": {
                                          "args": [
                                            {
                                              "lifetime": "'static"
                                            },
                                            {
                                              "type": {
                                                "primitive": "str"
                                              }
                                            }
                                          ],
                                          "constraints": []
                                        }
                                      },
                                      "id": 475,
                                      "name": "std::borrow::Cow"
                                    }
                                  }
                                }
                              ],
                              "constraints": []
                            }
                          },
                          "id": 58,
                          "name": "Into"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "S"
                  }
                }
              }
            ]
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "generic": "S"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "286": {
      "id": 286,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 249,
              "name": "LeaseAction"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            284,
            285
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 125,
            "name": "FromStr"
          }
        }
      }
    },
    "1546": {
      "id": 1546,
      "crate_id": 0,
      "name": "from",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "generic": "S"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "178": {
      "id": 178,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 146,
              "name": "LeaseState"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 118,
            "name": "Copy"
          }
        }
      }
    },
    "1585": {
      "id": 1585,
      "crate_id": 0,
      "name": "value",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 14,
                "name": "$crate::http::headers::HeaderValue"
              }
            }
          }
        }
      }
    },
    "220": {
      "id": 220,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "$crate::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "$crate::fmt::Result"
              }
            }
          }
        }
      }
    },
    "1878": {
      "id": 1878,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 1877,
          "is_glob": false,
          "name": "Response",
          "source": "typespec_client_core::http::response::Response"
        }
      }
    },
    "288": {
      "id": 288,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 249,
              "name": "LeaseAction"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            287
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "primitive": "str"
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 128,
            "name": "AsRef"
          }
        }
      }
    },
    "579": {
      "id": 579,
      "crate_id": 0,
      "name": "CREATION_TIME",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "624": {
      "id": 624,
      "crate_id": 0,
      "name": "VERSION",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "628": {
      "id": 628,
      "crate_id": 0,
      "name": "AzureAsyncOperation",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "variant": {
          "discriminant": null,
          "kind": "plain"
        }
      }
    },
    "1759": {
      "id": 1759,
      "crate_id": 0,
      "name": "clone",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 1732,
                "name": "Delimiter"
              }
            }
          }
        }
      }
    },
    "1584": {
      "id": 1584,
      "crate_id": 0,
      "name": "name",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 557,
                "name": "$crate::http::headers::HeaderName"
              }
            }
          }
        }
      }
    },
    "702": {
      "id": 702,
      "crate_id": 0,
      "name": "end",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "primitive": "u64"
            }
          }
        }
      }
    },
    "1344": {
      "id": 1344,
      "crate_id": 0,
      "name": "eq",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "other",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 1314,
                        "name": "SourceLeaseId"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "primitive": "bool"
            }
          }
        }
      }
    },
    "177": {
      "id": 177,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 146,
              "name": "LeaseState"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            176
          ],
          "provided_trait_methods": [
            "clone_from"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 53,
            "name": "Clone"
          }
        }
      }
    },
    "744": {
      "id": 744,
      "crate_id": 0,
      "name": "LessThan",
      "visibility": "default",
      "docs": "If the object's sequence number is less than the specified value, the\nrequest proceeds; otherwise it fails with SequenceNumberConditionNotMet\nerror (HTTP status code 412 – Precondition Failed).",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "variant": {
          "discriminant": null,
          "kind": {
            "tuple": [
              743
            ]
          }
        }
      }
    },
    "1064": {
      "id": 1064,
      "crate_id": 0,
      "name": "partial_cmp",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "other",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 1031,
                        "name": "MaxResults"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "resolved_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "id": 1065,
                            "name": "$crate::cmp::Ordering"
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 354,
                "name": "$crate::option::Option"
              }
            }
          }
        }
      }
    },
    "1177": {
      "id": 1177,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1131,
              "name": "NextMarker"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1176
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "borrowed_ref": {
                        "is_mutable": false,
                        "lifetime": null,
                        "type": {
                          "primitive": "str"
                        }
                      }
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 55,
            "name": "From"
          }
        }
      }
    },
    "548": {
      "id": 548,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 518,
              "name": "AccessToken"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            547
          ],
          "provided_trait_methods": [
            "clone_from"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 53,
            "name": "Clone"
          }
        }
      }
    },
    "1254": {
      "id": 1254,
      "crate_id": 0,
      "name": "from",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "r",
                {
                  "resolved_path": {
                    "args": {
                      "angle_bracketed": {
                        "args": [
                          {
                            "type": {
                              "primitive": "usize"
                            }
                          }
                        ],
                        "constraints": []
                      }
                    },
                    "id": 1212,
                    "name": "StdRange"
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "1729": {
      "id": 1729,
      "crate_id": 0,
      "name": "value",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 14,
                "name": "$crate::http::headers::HeaderValue"
              }
            }
          }
        }
      }
    },
    "583": {
      "id": 583,
      "crate_id": 0,
      "name": "ENCRYPTION_KEY_SHA256",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "576": {
      "id": 576,
      "crate_id": 0,
      "name": "COPY_SOURCE",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "130": {
      "id": 130,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 31,
              "name": "LeaseStatus"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            129
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 82,
            "name": "Display"
          }
        }
      }
    },
    "1663": {
      "id": 1663,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1660,
              "name": "IfTags"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1661,
            1662
          ],
          "provided_trait_methods": [],
          "trait": null
        }
      }
    },
    "224": {
      "id": 224,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 196,
              "name": "LeaseDuration"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            223
          ],
          "provided_trait_methods": [
            "ne"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 112,
            "name": "PartialEq"
          }
        }
      }
    },
    "1588": {
      "id": 1588,
      "crate_id": 0,
      "name": "ContentDisposition",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "impls": [
            1591,
            1592,
            1593,
            1594,
            1595,
            1596,
            1597,
            1598,
            1599,
            1600,
            1601,
            1602,
            1603,
            1604,
            1605,
            1606,
            1607,
            1608,
            1609,
            1610,
            1611,
            1612,
            1613,
            1615,
            1617,
            1619,
            1622
          ],
          "kind": {
            "tuple": [
              null
            ]
          }
        }
      }
    },
    "1870": {
      "id": 1870,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 771,
          "is_glob": false,
          "name": "Header",
          "source": "typespec_client_core::http::headers::Header"
        }
      }
    },
    "1553": {
      "id": 1553,
      "crate_id": 0,
      "name": "new",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "S"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [
                                {
                                  "type": {
                                    "resolved_path": {
                                      "args": {
                                        "angle_bracketed": {
                                          "args": [
                                            {
                                              "lifetime": "'static"
                                            },
                                            {
                                              "type": {
                                                "primitive": "str"
                                              }
                                            }
                                          ],
                                          "constraints": []
                                        }
                                      },
                                      "id": 475,
                                      "name": "std::borrow::Cow"
                                    }
                                  }
                                }
                              ],
                              "constraints": []
                            }
                          },
                          "id": 58,
                          "name": "Into"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "S"
                  }
                }
              }
            ]
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "generic": "S"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "241": {
      "id": 241,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 196,
              "name": "LeaseDuration"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            240
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 137,
            "name": "Serialize"
          }
        }
      }
    },
    "612": {
      "id": 612,
      "crate_id": 0,
      "name": "REQUIRES_SYNC",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "599": {
      "id": 599,
      "crate_id": 0,
      "name": "LEASE_TIME",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "1655": {
      "id": 1655,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1624,
              "name": "Continuation"
            }
          },
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "S"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [
                                {
                                  "type": {
                                    "resolved_path": {
                                      "args": {
                                        "angle_bracketed": {
                                          "args": [
                                            {
                                              "lifetime": "'static"
                                            },
                                            {
                                              "type": {
                                                "primitive": "str"
                                              }
                                            }
                                          ],
                                          "constraints": []
                                        }
                                      },
                                      "id": 475,
                                      "name": "std::borrow::Cow"
                                    }
                                  }
                                }
                              ],
                              "constraints": []
                            }
                          },
                          "id": 58,
                          "name": "Into"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "S"
                  }
                }
              }
            ]
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1654
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "generic": "S"
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 55,
            "name": "From"
          }
        }
      }
    },
    "1205": {
      "id": 1205,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 918,
              "name": "ProposedLeaseId"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1204
          ],
          "provided_trait_methods": [
            "clone_from"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 53,
            "name": "Clone"
          }
        }
      }
    },
    "1839": {
      "id": 1839,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1805,
              "name": "TestMode"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1838
          ],
          "provided_trait_methods": [
            "lt",
            "le",
            "gt",
            "ge"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 1067,
            "name": "PartialOrd"
          }
        }
      }
    },
    "593": {
      "id": 593,
      "crate_id": 0,
      "name": "LEASE_ACTION",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "741": {
      "id": 741,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 699,
              "name": "ContentRange"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            740
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 82,
            "name": "Display"
          }
        }
      }
    },
    "1343": {
      "id": 1343,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1314,
              "name": "SourceLeaseId"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 109,
            "name": "StructuralPartialEq"
          }
        }
      }
    },
    "1589": {
      "id": 1589,
      "crate_id": 0,
      "name": "new",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "S"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [
                                {
                                  "type": {
                                    "resolved_path": {
                                      "args": {
                                        "angle_bracketed": {
                                          "args": [
                                            {
                                              "lifetime": "'static"
                                            },
                                            {
                                              "type": {
                                                "primitive": "str"
                                              }
                                            }
                                          ],
                                          "constraints": []
                                        }
                                      },
                                      "id": 475,
                                      "name": "std::borrow::Cow"
                                    }
                                  }
                                }
                              ],
                              "constraints": []
                            }
                          },
                          "id": 58,
                          "name": "Into"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "S"
                  }
                }
              }
            ]
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "generic": "S"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "1883": {
      "id": 1883,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 1882,
          "is_glob": false,
          "name": "Body",
          "source": "typespec_client_core::http::Body"
        }
      }
    },
    "1481": {
      "id": 1481,
      "crate_id": 0,
      "name": "new",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "S"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [
                                {
                                  "type": {
                                    "resolved_path": {
                                      "args": {
                                        "angle_bracketed": {
                                          "args": [
                                            {
                                              "lifetime": "'static"
                                            },
                                            {
                                              "type": {
                                                "primitive": "str"
                                              }
                                            }
                                          ],
                                          "constraints": []
                                        }
                                      },
                                      "id": 475,
                                      "name": "std::borrow::Cow"
                                    }
                                  }
                                }
                              ],
                              "constraints": []
                            }
                          },
                          "id": 58,
                          "name": "Into"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "S"
                  }
                }
              }
            ]
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "generic": "S"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "292": {
      "id": 292,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 249,
              "name": "LeaseAction"
            }
          },
          "generics": {
            "params": [
              {
                "kind": {
                  "lifetime": {
                    "outlives": []
                  }
                },
                "name": "'de"
              }
            ],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            291
          ],
          "provided_trait_methods": [
            "deserialize_in_place"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "lifetime": "'de"
                  }
                ],
                "constraints": []
              }
            },
            "id": 85,
            "name": "Deserialize"
          }
        }
      }
    },
    "510": {
      "id": 510,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 25,
              "name": "Secret"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            509
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 27,
                        "name": "String"
                      }
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 55,
            "name": "From"
          }
        }
      }
    },
    "17": {
      "id": 17,
      "crate_id": 0,
      "name": "APPLICATION_JSON",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 14,
              "name": "crate::headers::HeaderValue"
            }
          }
        }
      }
    },
    "783": {
      "id": 783,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 749,
              "name": "IfSequenceNumber"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 109,
            "name": "StructuralPartialEq"
          }
        }
      }
    },
    "1768": {
      "id": 1768,
      "crate_id": 0,
      "name": "from_static",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": true,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": "'static",
                    "type": {
                      "primitive": "str"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "225": {
      "id": 225,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 196,
              "name": "LeaseDuration"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [
            "assert_receiver_is_total_eq"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 114,
            "name": "Eq"
          }
        }
      }
    },
    "422": {
      "id": 422,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "$crate::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "$crate::fmt::Result"
              }
            }
          }
        }
      }
    },
    "1518": {
      "id": 1518,
      "crate_id": 0,
      "name": "from_static",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": true,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": "'static",
                    "type": {
                      "primitive": "str"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "1059": {
      "id": 1059,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1031,
              "name": "MaxResults"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1058
          ],
          "provided_trait_methods": [
            "clone_from"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 53,
            "name": "Clone"
          }
        }
      }
    },
    "1806": {
      "id": 1806,
      "crate_id": 0,
      "name": "current",
      "visibility": "public",
      "docs": "Gets the `TestMode` from the `AZURE_TEST_MODE` environment variable or returns the default if undefined.",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "generic": "Self"
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 26,
                "name": "typespec::Result"
              }
            }
          }
        }
      }
    },
    "1890": {
      "id": 1890,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 1889,
          "is_glob": false,
          "name": "Pager",
          "source": "typespec_client_core::http::Pager"
        }
      }
    },
    "1872": {
      "id": 1872,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 1871,
          "is_glob": false,
          "name": "new_http_client",
          "source": "typespec_client_core::http::new_http_client"
        }
      }
    },
    "1579": {
      "id": 1579,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1552,
              "name": "ClientRequestId"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1578
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "1471": {
      "id": 1471,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1444,
              "name": "User"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1470
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "477": {
      "id": 477,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 25,
              "name": "Secret"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            474,
            476
          ],
          "provided_trait_methods": [],
          "trait": null
        }
      }
    },
    "1080": {
      "id": 1080,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1031,
              "name": "MaxResults"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1078,
            1079
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "primitive": "u32"
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 62,
            "name": "TryFrom"
          }
        }
      }
    },
    "80": {
      "id": 80,
      "crate_id": 5,
      "name": "to_string",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 27,
                "name": "String"
              }
            }
          }
        }
      }
    },
    "296": {
      "id": 296,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 249,
              "name": "LeaseAction"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            295
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 249,
                        "name": "LeaseAction"
                      }
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 140,
            "name": "FromStringOptional"
          }
        }
      }
    },
    "1735": {
      "id": 1735,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1732,
              "name": "Delimiter"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1733,
            1734
          ],
          "provided_trait_methods": [],
          "trait": null
        }
      }
    },
    "1170": {
      "id": 1170,
      "crate_id": 0,
      "name": "deserialize",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "__D"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [
                                {
                                  "lifetime": "'de"
                                }
                              ],
                              "constraints": []
                            }
                          },
                          "id": 132,
                          "name": "_serde::Deserializer"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "__D"
                  }
                }
              }
            ]
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "__deserializer",
                {
                  "generic": "__D"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "generic": "Self"
                        }
                      },
                      {
                        "type": {
                          "qualified_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "name": "Error",
                            "self_type": {
                              "generic": "__D"
                            },
                            "trait": {
                              "args": null,
                              "id": 132,
                              "name": ""
                            }
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 64,
                "name": "_serde::__private::Result"
              }
            }
          }
        }
      }
    },
    "1342": {
      "id": 1342,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1314,
              "name": "SourceLeaseId"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 118,
            "name": "Copy"
          }
        }
      }
    },
    "1903": {
      "id": 1903,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 1902,
          "is_glob": false,
          "name": "sleep",
          "source": "typespec_client_core::sleep::sleep"
        }
      }
    },
    "195": {
      "id": 195,
      "crate_id": 0,
      "name": "Fixed",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "variant": {
          "discriminant": null,
          "kind": "plain"
        }
      }
    },
    "396": {
      "id": 396,
      "crate_id": 0,
      "name": "BearerTokenCredentialPolicy",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "impls": [
            400,
            401,
            402,
            403,
            404,
            405,
            406,
            407,
            408,
            409,
            410,
            411,
            412,
            413,
            414,
            415,
            416,
            417,
            418,
            419,
            420,
            421,
            423,
            425,
            433
          ],
          "kind": {
            "plain": {
              "fields": [],
              "has_stripped_fields": true
            }
          }
        }
      }
    },
    "503": {
      "id": 503,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 25,
              "name": "Secret"
            }
          },
          "generics": {
            "params": [
              {
                "kind": {
                  "lifetime": {
                    "outlives": []
                  }
                },
                "name": "'de"
              }
            ],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            502
          ],
          "provided_trait_methods": [
            "deserialize_in_place"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "lifetime": "'de"
                  }
                ],
                "constraints": []
              }
            },
            "id": 85,
            "name": "Deserialize"
          }
        }
      }
    },
    "61": {
      "id": 61,
      "crate_id": 2,
      "name": "Error",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "assoc_type": {
          "bounds": [],
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "type": {
            "qualified_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "name": "Error",
              "self_type": {
                "generic": "U"
              },
              "trait": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "generic": "T"
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 62,
                "name": "TryFrom"
              }
            }
          }
        }
      }
    },
    "1069": {
      "id": 1069,
      "crate_id": 0,
      "name": "cmp",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "other",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 1031,
                        "name": "MaxResults"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 1065,
                "name": "$crate::cmp::Ordering"
              }
            }
          }
        }
      }
    },
    "226": {
      "id": 226,
      "crate_id": 0,
      "name": "clone",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 196,
                "name": "LeaseDuration"
              }
            }
          }
        }
      }
    },
    "25": {
      "id": 25,
      "crate_id": 0,
      "name": "Secret",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "impls": [
            477,
            478,
            479,
            480,
            481,
            482,
            483,
            484,
            485,
            486,
            487,
            488,
            489,
            490,
            491,
            492,
            493,
            494,
            495,
            496,
            497,
            498,
            499,
            501,
            503,
            505,
            506,
            508,
            510,
            512,
            514
          ],
          "kind": {
            "tuple": [
              null
            ]
          }
        }
      }
    },
    "465": {
      "id": 465,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 436,
              "name": "TelemetryPolicy"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            464
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 357,
            "name": "Policy"
          }
        }
      }
    },
    "1519": {
      "id": 1519,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1516,
              "name": "App"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1517,
            1518
          ],
          "provided_trait_methods": [],
          "trait": null
        }
      }
    },
    "789": {
      "id": 789,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 749,
              "name": "IfSequenceNumber"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            787,
            788
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 771,
            "name": "Header"
          }
        }
      }
    },
    "19": {
      "id": 19,
      "crate_id": 0,
      "name": "TEXT_PLAIN",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 14,
              "name": "crate::headers::HeaderValue"
            }
          }
        }
      }
    },
    "1175": {
      "id": 1175,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1131,
              "name": "NextMarker"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1174
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 27,
                        "name": "String"
                      }
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 55,
            "name": "From"
          }
        }
      }
    },
    "1657": {
      "id": 1657,
      "crate_id": 0,
      "name": "value",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 14,
                "name": "$crate::http::headers::HeaderValue"
              }
            }
          }
        }
      }
    },
    "1476": {
      "id": 1476,
      "crate_id": 0,
      "name": "name",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 557,
                "name": "$crate::http::headers::HeaderName"
              }
            }
          }
        }
      }
    },
    "1072": {
      "id": 1072,
      "crate_id": 0,
      "name": "append_to_url_query",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "url",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 3,
                        "name": "Url"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": null
          }
        }
      }
    },
    "466": {
      "id": 466,
      "crate_id": 0,
      "name": "telemetry",
      "visibility": {
        "restricted": {
          "parent": 467,
          "path": "::policies"
        }
      },
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "module": {
          "is_crate": false,
          "is_stripped": true,
          "items": [
            436
          ]
        }
      }
    },
    "1480": {
      "id": 1480,
      "crate_id": 0,
      "name": "ActivityId",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "impls": [
            1483,
            1484,
            1485,
            1486,
            1487,
            1488,
            1489,
            1490,
            1491,
            1492,
            1493,
            1494,
            1495,
            1496,
            1497,
            1498,
            1499,
            1500,
            1501,
            1502,
            1503,
            1504,
            1505,
            1507,
            1509,
            1511,
            1514
          ],
          "kind": {
            "tuple": [
              null
            ]
          }
        }
      }
    },
    "300": {
      "id": 300,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 299,
          "is_glob": false,
          "name": "Etag",
          "source": "typespec_client_core::http::Etag"
        }
      }
    },
    "1121": {
      "id": 1121,
      "crate_id": 0,
      "name": "as_mut",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "borrowed_ref": {
                "is_mutable": true,
                "lifetime": null,
                "type": {
                  "resolved_path": {
                    "args": {
                      "angle_bracketed": {
                        "args": [
                          {
                            "type": {
                              "resolved_path": {
                                "args": {
                                  "angle_bracketed": {
                                    "args": [],
                                    "constraints": []
                                  }
                                },
                                "id": 27,
                                "name": "String"
                              }
                            }
                          },
                          {
                            "type": {
                              "resolved_path": {
                                "args": {
                                  "angle_bracketed": {
                                    "args": [],
                                    "constraints": []
                                  }
                                },
                                "id": 1086,
                                "name": "Bytes"
                              }
                            }
                          }
                        ],
                        "constraints": []
                      }
                    },
                    "id": 1122,
                    "name": "HashMap"
                  }
                }
              }
            }
          }
        }
      }
    },
    "1851": {
      "id": 1851,
      "crate_id": 0,
      "name": "test",
      "visibility": "public",
      "docs": "Shared utilities for testing client libraries built on `azure_core`.\n\nFor a comprehensive suite of utilities for testing client libraries built on `azure_core`,\nread documentation for the `azure_core_test` crate.",
      "links": {},
      "attrs": [
        "#[cfg(feature = \"test\")]"
      ],
      "deprecation": null,
      "inner": {
        "module": {
          "is_crate": false,
          "is_stripped": false,
          "items": [
            1805
          ]
        }
      }
    },
    "558": {
      "id": 558,
      "crate_id": 0,
      "name": "ACL",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "1207": {
      "id": 1207,
      "crate_id": 0,
      "name": "name",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 557,
                "name": "headers::HeaderName"
              }
            }
          }
        }
      }
    },
    "143": {
      "id": 143,
      "crate_id": 0,
      "name": "Expired",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "variant": {
          "discriminant": null,
          "kind": "plain"
        }
      }
    },
    "747": {
      "id": 747,
      "crate_id": 0,
      "name": "0",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct_field": {
          "primitive": "u64"
        }
      }
    },
    "912": {
      "id": 912,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 871,
              "name": "LeaseId"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            910,
            911
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 125,
            "name": "FromStr"
          }
        }
      }
    },
    "1242": {
      "id": 1242,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "$crate::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "$crate::fmt::Result"
              }
            }
          }
        }
      }
    },
    "504": {
      "id": 504,
      "crate_id": 0,
      "name": "serialize",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "__S"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [],
                              "constraints": []
                            }
                          },
                          "id": 135,
                          "name": "_serde::Serializer"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "__S"
                  }
                }
              }
            ]
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "__serializer",
                {
                  "generic": "__S"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "qualified_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "name": "Ok",
                            "self_type": {
                              "generic": "__S"
                            },
                            "trait": {
                              "args": null,
                              "id": 135,
                              "name": ""
                            }
                          }
                        }
                      },
                      {
                        "type": {
                          "qualified_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "name": "Error",
                            "self_type": {
                              "generic": "__S"
                            },
                            "trait": {
                              "args": null,
                              "id": 135,
                              "name": ""
                            }
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 64,
                "name": "_serde::__private::Result"
              }
            }
          }
        }
      }
    },
    "1243": {
      "id": 1243,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1217,
              "name": "Range"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1242
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "1": {
      "id": 1,
      "crate_id": 0,
      "name": "AZURE_CHINA_CLOUD",
      "visibility": "public",
      "docs": "Azure Resource Manager China cloud endpoint",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "static": {
          "expr": "_",
          "is_mutable": false,
          "is_unsafe": false,
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [
                    {
                      "type": {
                        "resolved_path": {
                          "args": {
                            "angle_bracketed": {
                              "args": [],
                              "constraints": []
                            }
                          },
                          "id": 3,
                          "name": "$crate::Url"
                        }
                      }
                    }
                  ],
                  "constraints": []
                }
              },
              "id": 2,
              "name": "once_cell::sync::Lazy"
            }
          }
        }
      }
    },
    "1084": {
      "id": 1084,
      "crate_id": 0,
      "name": "new",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "1245": {
      "id": 1245,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1217,
              "name": "Range"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1244
          ],
          "provided_trait_methods": [
            "clone_from"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 53,
            "name": "Clone"
          }
        }
      }
    },
    "1477": {
      "id": 1477,
      "crate_id": 0,
      "name": "value",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 14,
                "name": "$crate::http::headers::HeaderValue"
              }
            }
          }
        }
      }
    },
    "1660": {
      "id": 1660,
      "crate_id": 0,
      "name": "IfTags",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "impls": [
            1663,
            1664,
            1665,
            1666,
            1667,
            1668,
            1669,
            1670,
            1671,
            1672,
            1673,
            1674,
            1675,
            1676,
            1677,
            1678,
            1679,
            1680,
            1681,
            1682,
            1683,
            1684,
            1685,
            1687,
            1689,
            1691,
            1694
          ],
          "kind": {
            "tuple": [
              null
            ]
          }
        }
      }
    },
    "345": {
      "id": 345,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 344,
          "is_glob": false,
          "name": "FixedRetryOptions",
          "source": "typespec_client_core::http::FixedRetryOptions"
        }
      }
    },
    "1899": {
      "id": 1899,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 1898,
          "is_glob": false,
          "name": "parsing",
          "source": "typespec_client_core::parsing"
        }
      }
    },
    "1793": {
      "id": 1793,
      "crate_id": 0,
      "name": "clone",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 1766,
                "name": "Prefix"
              }
            }
          }
        }
      }
    },
    "1837": {
      "id": 1837,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1805,
              "name": "TestMode"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [
            "assert_receiver_is_total_eq"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 114,
            "name": "Eq"
          }
        }
      }
    },
    "1650": {
      "id": 1650,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "$crate::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "$crate::fmt::Result"
              }
            }
          }
        }
      }
    },
    "519": {
      "id": 519,
      "crate_id": 0,
      "name": "new",
      "visibility": "public",
      "docs": "Create a new `AccessToken`.",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "T"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [
                                {
                                  "type": {
                                    "resolved_path": {
                                      "args": {
                                        "angle_bracketed": {
                                          "args": [],
                                          "constraints": []
                                        }
                                      },
                                      "id": 25,
                                      "name": "Secret"
                                    }
                                  }
                                }
                              ],
                              "constraints": []
                            }
                          },
                          "id": 58,
                          "name": "Into"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "T"
                  }
                }
              }
            ]
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "token",
                {
                  "generic": "T"
                }
              ],
              [
                "expires_on",
                {
                  "resolved_path": {
                    "args": {
                      "angle_bracketed": {
                        "args": [],
                        "constraints": []
                      }
                    },
                    "id": 517,
                    "name": "OffsetDateTime"
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "571": {
      "id": 571,
      "crate_id": 0,
      "name": "CLIENT_VERSION",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "862": {
      "id": 862,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 834,
              "name": "IfSourceModifiedSinceCondition"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 109,
            "name": "StructuralPartialEq"
          }
        }
      }
    },
    "1591": {
      "id": 1591,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1588,
              "name": "ContentDisposition"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1589,
            1590
          ],
          "provided_trait_methods": [],
          "trait": null
        }
      }
    },
    "1766": {
      "id": 1766,
      "crate_id": 0,
      "name": "Prefix",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "impls": [
            1769,
            1770,
            1771,
            1772,
            1773,
            1774,
            1775,
            1776,
            1777,
            1778,
            1779,
            1780,
            1781,
            1782,
            1783,
            1784,
            1785,
            1786,
            1787,
            1788,
            1789,
            1790,
            1792,
            1794,
            1796,
            1798
          ],
          "kind": {
            "tuple": [
              null
            ]
          }
        }
      }
    },
    "1022": {
      "id": 1022,
      "crate_id": 0,
      "name": "name",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 557,
                "name": "headers::HeaderName"
              }
            }
          }
        }
      }
    },
    "1136": {
      "id": 1136,
      "crate_id": 0,
      "name": "from_header_optional",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "headers",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 659,
                        "name": "Headers"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "resolved_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [
                                  {
                                    "type": {
                                      "generic": "Self"
                                    }
                                  }
                                ],
                                "constraints": []
                              }
                            },
                            "id": 354,
                            "name": "Option"
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 26,
                "name": "crate::Result"
              }
            }
          }
        }
      }
    },
    "1382": {
      "id": 1382,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1357,
              "name": "Timeout"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1381
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "1764": {
      "id": 1764,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1732,
              "name": "Delimiter"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1763
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 1074,
            "name": "AppendToUrlQuery"
          }
        }
      }
    },
    "462": {
      "id": 462,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "$crate::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "$crate::fmt::Result"
              }
            }
          }
        }
      }
    },
    "1399": {
      "id": 1399,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 1031,
          "is_glob": false,
          "name": "MaxResults",
          "source": "max_results::MaxResults"
        }
      }
    },
    "237": {
      "id": 237,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 196,
              "name": "LeaseDuration"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            236
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 82,
            "name": "Display"
          }
        }
      }
    },
    "621": {
      "id": 621,
      "crate_id": 0,
      "name": "SOURCE_RANGE",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "859": {
      "id": 859,
      "crate_id": 0,
      "name": "clone",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 834,
                "name": "IfSourceModifiedSinceCondition"
              }
            }
          }
        }
      }
    },
    "913": {
      "id": 913,
      "crate_id": 0,
      "name": "name",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 557,
                "name": "headers::HeaderName"
              }
            }
          }
        }
      }
    },
    "1406": {
      "id": 1406,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 1357,
          "is_glob": false,
          "name": "Timeout",
          "source": "timeout::Timeout"
        }
      }
    },
    "1723": {
      "id": 1723,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1696,
              "name": "Version"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1722
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "704": {
      "id": 704,
      "crate_id": 0,
      "name": "is_empty",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "primitive": "bool"
            }
          }
        }
      }
    },
    "1058": {
      "id": 1058,
      "crate_id": 0,
      "name": "clone",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 1031,
                "name": "MaxResults"
              }
            }
          }
        }
      }
    },
    "111": {
      "id": 111,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 31,
              "name": "LeaseStatus"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            110
          ],
          "provided_trait_methods": [
            "ne"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 112,
            "name": "PartialEq"
          }
        }
      }
    },
    "833": {
      "id": 833,
      "crate_id": 0,
      "name": "Unmodified",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "variant": {
          "discriminant": null,
          "kind": {
            "tuple": [
              832
            ]
          }
        }
      }
    },
    "1434": {
      "id": 1434,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "$crate::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "$crate::fmt::Result"
              }
            }
          }
        }
      }
    },
    "824": {
      "id": 824,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 795,
              "name": "IfSourceMatchCondition"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            823
          ],
          "provided_trait_methods": [
            "ne"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 112,
            "name": "PartialEq"
          }
        }
      }
    },
    "1301": {
      "id": 1301,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1269,
              "name": "SequenceNumber"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1300
          ],
          "provided_trait_methods": [
            "ne"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 112,
            "name": "PartialEq"
          }
        }
      }
    },
    "1620": {
      "id": 1620,
      "crate_id": 0,
      "name": "name",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 557,
                "name": "$crate::http::headers::HeaderName"
              }
            }
          }
        }
      }
    },
    "1763": {
      "id": 1763,
      "crate_id": 0,
      "name": "append_to_url_query",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "url",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 3,
                        "name": "$crate::http::Url"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": null
          }
        }
      }
    },
    "832": {
      "id": 832,
      "crate_id": 0,
      "name": "0",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct_field": {
          "resolved_path": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 517,
            "name": "typespec_client_core::date::OffsetDateTime"
          }
        }
      }
    },
    "1269": {
      "id": 1269,
      "crate_id": 0,
      "name": "SequenceNumber",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "impls": [
            1271,
            1272,
            1273,
            1274,
            1275,
            1276,
            1277,
            1278,
            1279,
            1280,
            1281,
            1282,
            1283,
            1284,
            1285,
            1286,
            1287,
            1288,
            1289,
            1290,
            1291,
            1292,
            1293,
            1295,
            1297,
            1298,
            1299,
            1301,
            1303,
            1304,
            1306,
            1308,
            1311
          ],
          "kind": {
            "tuple": [
              null
            ]
          }
        }
      }
    },
    "791": {
      "id": 791,
      "crate_id": 0,
      "name": "0",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct_field": {
          "resolved_path": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 27,
            "name": "String"
          }
        }
      }
    },
    "289": {
      "id": 289,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "::std::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "::std::fmt::Result"
              }
            }
          }
        }
      }
    },
    "358": {
      "id": 358,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 352,
              "name": "Pipeline"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            353
          ],
          "provided_trait_methods": [],
          "trait": null
        }
      }
    },
    "227": {
      "id": 227,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 196,
              "name": "LeaseDuration"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            226
          ],
          "provided_trait_methods": [
            "clone_from"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 53,
            "name": "Clone"
          }
        }
      }
    },
    "1626": {
      "id": 1626,
      "crate_id": 0,
      "name": "from_static",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": true,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": "'static",
                    "type": {
                      "primitive": "str"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "732": {
      "id": 732,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 699,
              "name": "ContentRange"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            731
          ],
          "provided_trait_methods": [
            "clone_from"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 53,
            "name": "Clone"
          }
        }
      }
    },
    "186": {
      "id": 186,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "::std::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "::std::fmt::Result"
              }
            }
          }
        }
      }
    },
    "194": {
      "id": 194,
      "crate_id": 0,
      "name": "Infinite",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "variant": {
          "discriminant": null,
          "kind": "plain"
        }
      }
    },
    "508": {
      "id": 508,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 25,
              "name": "Secret"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            507
          ],
          "provided_trait_methods": [
            "ne"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 112,
            "name": "PartialEq"
          }
        }
      }
    },
    "690": {
      "id": 690,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "$crate::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "$crate::fmt::Result"
              }
            }
          }
        }
      }
    },
    "76": {
      "id": 76,
      "crate_id": 5,
      "name": "to_owned",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "T"
            }
          }
        }
      }
    },
    "692": {
      "id": 692,
      "crate_id": 0,
      "name": "from",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "primitive": "str"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "901": {
      "id": 901,
      "crate_id": 0,
      "name": "eq",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "other",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 871,
                        "name": "LeaseId"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "primitive": "bool"
            }
          }
        }
      }
    },
    "190": {
      "id": 190,
      "crate_id": 0,
      "name": "serialize",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "S"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [],
                              "constraints": []
                            }
                          },
                          "id": 135,
                          "name": "serde::Serializer"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "S"
                  }
                }
              }
            ]
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "s",
                {
                  "generic": "S"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "qualified_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "name": "Ok",
                            "self_type": {
                              "generic": "S"
                            },
                            "trait": {
                              "args": null,
                              "id": 135,
                              "name": ""
                            }
                          }
                        }
                      },
                      {
                        "type": {
                          "qualified_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "name": "Error",
                            "self_type": {
                              "generic": "S"
                            },
                            "trait": {
                              "args": null,
                              "id": 135,
                              "name": ""
                            }
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 64,
                "name": "::core::result::Result"
              }
            }
          }
        }
      }
    },
    "1658": {
      "id": 1658,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1624,
              "name": "Continuation"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1656,
            1657
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 771,
            "name": "Header"
          }
        }
      }
    },
    "984": {
      "id": 984,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 958,
              "name": "LeaseDuration"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            983
          ],
          "provided_trait_methods": [
            "clone_from"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 53,
            "name": "Clone"
          }
        }
      }
    },
    "1661": {
      "id": 1661,
      "crate_id": 0,
      "name": "new",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "S"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [
                                {
                                  "type": {
                                    "resolved_path": {
                                      "args": {
                                        "angle_bracketed": {
                                          "args": [
                                            {
                                              "lifetime": "'static"
                                            },
                                            {
                                              "type": {
                                                "primitive": "str"
                                              }
                                            }
                                          ],
                                          "constraints": []
                                        }
                                      },
                                      "id": 475,
                                      "name": "std::borrow::Cow"
                                    }
                                  }
                                }
                              ],
                              "constraints": []
                            }
                          },
                          "id": 58,
                          "name": "Into"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "S"
                  }
                }
              }
            ]
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "generic": "S"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "661": {
      "id": 661,
      "crate_id": 0,
      "name": "LroStatus",
      "visibility": "public",
      "docs": "Long Running Operation (LRO) status\n\nRef: <https://learn.microsoft.com/en-us/azure/azure-resource-manager/management/async-operations#provisioningstate-values>",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "enum": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_stripped_variants": false,
          "impls": [
            672,
            673,
            674,
            675,
            676,
            677,
            678,
            679,
            680,
            681,
            682,
            683,
            684,
            685,
            686,
            687,
            688,
            689,
            691,
            693
          ],
          "variants": [
            666,
            667,
            668,
            669,
            671
          ]
        }
      }
    },
    "703": {
      "id": 703,
      "crate_id": 0,
      "name": "total_length",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "primitive": "u64"
            }
          }
        }
      }
    },
    "134": {
      "id": 134,
      "crate_id": 0,
      "name": "serialize",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "S"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [],
                              "constraints": []
                            }
                          },
                          "id": 135,
                          "name": "serde::Serializer"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "S"
                  }
                }
              }
            ]
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "s",
                {
                  "generic": "S"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "qualified_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "name": "Ok",
                            "self_type": {
                              "generic": "S"
                            },
                            "trait": {
                              "args": null,
                              "id": 135,
                              "name": ""
                            }
                          }
                        }
                      },
                      {
                        "type": {
                          "qualified_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "name": "Error",
                            "self_type": {
                              "generic": "S"
                            },
                            "trait": {
                              "args": null,
                              "id": 135,
                              "name": ""
                            }
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 64,
                "name": "::core::result::Result"
              }
            }
          }
        }
      }
    },
    "553": {
      "id": 553,
      "crate_id": 0,
      "name": "get_token",
      "visibility": "default",
      "docs": "Gets a `AccessToken` for the specified resource",
      "links": {},
      "attrs": [
        "#[must_use]",
        "#[allow(elided_named_lifetimes, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds)]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [
              {
                "kind": {
                  "lifetime": {
                    "outlives": []
                  }
                },
                "name": "'life0"
              },
              {
                "kind": {
                  "lifetime": {
                    "outlives": []
                  }
                },
                "name": "'life1"
              },
              {
                "kind": {
                  "lifetime": {
                    "outlives": []
                  }
                },
                "name": "'life2"
              },
              {
                "kind": {
                  "lifetime": {
                    "outlives": []
                  }
                },
                "name": "'async_trait"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "outlives": "'async_trait"
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "Self"
                  }
                }
              },
              {
                "lifetime_predicate": {
                  "lifetime": "'life0",
                  "outlives": [
                    "'async_trait"
                  ]
                }
              },
              {
                "lifetime_predicate": {
                  "lifetime": "'life1",
                  "outlives": [
                    "'async_trait"
                  ]
                }
              },
              {
                "lifetime_predicate": {
                  "lifetime": "'life2",
                  "outlives": [
                    "'async_trait"
                  ]
                }
              }
            ]
          },
          "has_body": false,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": "'life0",
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "scopes",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": "'life1",
                    "type": {
                      "slice": {
                        "borrowed_ref": {
                          "is_mutable": false,
                          "lifetime": "'life2",
                          "type": {
                            "primitive": "str"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "resolved_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [
                                  {
                                    "type": {
                                      "dyn_trait": {
                                        "lifetime": "'async_trait",
                                        "traits": [
                                          {
                                            "generic_params": [],
                                            "trait": {
                                              "args": {
                                                "angle_bracketed": {
                                                  "args": [],
                                                  "constraints": [
                                                    {
                                                      "args": {
                                                        "angle_bracketed": {
                                                          "args": [],
                                                          "constraints": []
                                                        }
                                                      },
                                                      "binding": {
                                                        "equality": {
                                                          "type": {
                                                            "resolved_path": {
                                                              "args": {
                                                                "angle_bracketed": {
                                                                  "args": [
                                                                    {
                                                                      "type": {
                                                                        "resolved_path": {
                                                                          "args": {
                                                                            "angle_bracketed": {
                                                                              "args": [],
                                                                              "constraints": []
                                                                            }
                                                                          },
                                                                          "id": 518,
                                                                          "name": "AccessToken"
                                                                        }
                                                                      }
                                                                    }
                                                                  ],
                                                                  "constraints": []
                                                                }
                                                              },
                                                              "id": 26,
                                                              "name": "crate::Result"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "name": "Output"
                                                    }
                                                  ]
                                                }
                                              },
                                              "id": 431,
                                              "name": "::core::future::Future"
                                            }
                                          },
                                          {
                                            "generic_params": [],
                                            "trait": {
                                              "args": {
                                                "angle_bracketed": {
                                                  "args": [],
                                                  "constraints": []
                                                }
                                              },
                                              "id": 33,
                                              "name": "::core::marker::Send"
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ],
                                "constraints": []
                              }
                            },
                            "id": 430,
                            "name": "Box"
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 429,
                "name": "::core::pin::Pin"
              }
            }
          }
        }
      }
    },
    "861": {
      "id": 861,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 834,
              "name": "IfSourceModifiedSinceCondition"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 118,
            "name": "Copy"
          }
        }
      }
    },
    "1060": {
      "id": 1060,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1031,
              "name": "MaxResults"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 118,
            "name": "Copy"
          }
        }
      }
    },
    "654": {
      "id": 654,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 631,
              "name": "FinalState"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            653
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "142": {
      "id": 142,
      "crate_id": 0,
      "name": "Leased",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "variant": {
          "discriminant": null,
          "kind": "plain"
        }
      }
    },
    "1028": {
      "id": 1028,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 992,
              "name": "MaxItemCount"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1027
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 333,
            "name": "Default"
          }
        }
      }
    },
    "1251": {
      "id": 1251,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1217,
              "name": "Range"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1250
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "type": {
                                  "primitive": "u64"
                                }
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 1212,
                        "name": "Range"
                      }
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 55,
            "name": "From"
          }
        }
      }
    },
    "327": {
      "id": 327,
      "crate_id": 0,
      "name": "clone",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 303,
                "name": "TelemetryOptions"
              }
            }
          }
        }
      }
    },
    "1689": {
      "id": 1689,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1660,
              "name": "IfTags"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1688
          ],
          "provided_trait_methods": [
            "clone_from"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 53,
            "name": "Clone"
          }
        }
      }
    },
    "581": {
      "id": 581,
      "crate_id": 0,
      "name": "DELETE_TYPE_PERMANENT",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "657": {
      "id": 657,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 631,
              "name": "FinalState"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 118,
            "name": "Copy"
          }
        }
      }
    },
    "1166": {
      "id": 1166,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1131,
              "name": "NextMarker"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1165
          ],
          "provided_trait_methods": [
            "ne"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 112,
            "name": "PartialEq"
          }
        }
      }
    },
    "1832": {
      "id": 1832,
      "crate_id": 0,
      "name": "default",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 1805,
                "name": "TestMode"
              }
            }
          }
        }
      }
    },
    "831": {
      "id": 831,
      "crate_id": 0,
      "name": "Modified",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "variant": {
          "discriminant": null,
          "kind": {
            "tuple": [
              830
            ]
          }
        }
      }
    },
    "350": {
      "id": 350,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 334,
          "is_glob": true,
          "name": "telemetry",
          "source": "telemetry"
        }
      }
    },
    "192": {
      "id": 192,
      "crate_id": 0,
      "name": "from_str_optional",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "primitive": "str"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "resolved_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "id": 146,
                            "name": "LeaseState"
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 26,
                "name": "$crate::error::Result"
              }
            }
          }
        }
      }
    },
    "981": {
      "id": 981,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "$crate::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "$crate::fmt::Result"
              }
            }
          }
        }
      }
    },
    "1257": {
      "id": 1257,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1217,
              "name": "Range"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1256
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "type": {
                                  "primitive": "usize"
                                }
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 1215,
                        "name": "RangeFrom"
                      }
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 55,
            "name": "From"
          }
        }
      }
    },
    "1208": {
      "id": 1208,
      "crate_id": 0,
      "name": "value",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 14,
                "name": "headers::HeaderValue"
              }
            }
          }
        }
      }
    },
    "1617": {
      "id": 1617,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1588,
              "name": "ContentDisposition"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1616
          ],
          "provided_trait_methods": [
            "clone_from"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 53,
            "name": "Clone"
          }
        }
      }
    },
    "1805": {
      "id": 1805,
      "crate_id": 0,
      "name": "TestMode",
      "visibility": "public",
      "docs": "Whether to test client methods by playing back recordings, recording live sessions, or executing live sessions without recording.",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "enum": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_stripped_variants": false,
          "impls": [
            1807,
            1808,
            1809,
            1810,
            1811,
            1812,
            1813,
            1814,
            1815,
            1816,
            1817,
            1818,
            1819,
            1820,
            1821,
            1822,
            1823,
            1824,
            1825,
            1826,
            1827,
            1828,
            1830,
            1831,
            1833,
            1834,
            1836,
            1837,
            1839,
            1841,
            1843,
            1845,
            1847,
            1850
          ],
          "variants": [
            1802,
            1803,
            1804
          ]
        }
      }
    },
    "230": {
      "id": 230,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "borrowed_ref": {
              "is_mutable": false,
              "lifetime": "'static",
              "type": {
                "primitive": "str"
              }
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            229
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 196,
                        "name": "LeaseDuration"
                      }
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 55,
            "name": "From"
          }
        }
      }
    },
    "1470": {
      "id": 1470,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "$crate::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "$crate::fmt::Result"
              }
            }
          }
        }
      }
    },
    "285": {
      "id": 285,
      "crate_id": 0,
      "name": "from_str",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "primitive": "str"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "resolved_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "id": 249,
                            "name": "LeaseAction"
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 26,
                "name": "$crate::error::Result"
              }
            }
          }
        }
      }
    },
    "1516": {
      "id": 1516,
      "crate_id": 0,
      "name": "App",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "impls": [
            1519,
            1520,
            1521,
            1522,
            1523,
            1524,
            1525,
            1526,
            1527,
            1528,
            1529,
            1530,
            1531,
            1532,
            1533,
            1534,
            1535,
            1536,
            1537,
            1538,
            1539,
            1540,
            1541,
            1543,
            1545,
            1547,
            1550
          ],
          "kind": {
            "tuple": [
              null
            ]
          }
        }
      }
    },
    "294": {
      "id": 294,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 249,
              "name": "LeaseAction"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            293
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 137,
            "name": "Serialize"
          }
        }
      }
    },
    "1353": {
      "id": 1353,
      "crate_id": 0,
      "name": "value",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 14,
                "name": "headers::HeaderValue"
              }
            }
          }
        }
      }
    },
    "734": {
      "id": 734,
      "crate_id": 0,
      "name": "eq",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "other",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 699,
                        "name": "ContentRange"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "primitive": "bool"
            }
          }
        }
      }
    },
    "739": {
      "id": 739,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 699,
              "name": "ContentRange"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            737,
            738
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 125,
            "name": "FromStr"
          }
        }
      }
    },
    "626": {
      "id": 626,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 625,
          "is_glob": true,
          "name": "headers",
          "source": "typespec_client_core::http::headers"
        }
      }
    },
    "1625": {
      "id": 1625,
      "crate_id": 0,
      "name": "new",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "S"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [
                                {
                                  "type": {
                                    "resolved_path": {
                                      "args": {
                                        "angle_bracketed": {
                                          "args": [
                                            {
                                              "lifetime": "'static"
                                            },
                                            {
                                              "type": {
                                                "primitive": "str"
                                              }
                                            }
                                          ],
                                          "constraints": []
                                        }
                                      },
                                      "id": 475,
                                      "name": "std::borrow::Cow"
                                    }
                                  }
                                }
                              ],
                              "constraints": []
                            }
                          },
                          "id": 58,
                          "name": "Into"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "S"
                  }
                }
              }
            ]
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "generic": "S"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "1116": {
      "id": 1116,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1083,
              "name": "Metadata"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1115
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "1691": {
      "id": 1691,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1660,
              "name": "IfTags"
            }
          },
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "S"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [
                                {
                                  "type": {
                                    "resolved_path": {
                                      "args": {
                                        "angle_bracketed": {
                                          "args": [
                                            {
                                              "lifetime": "'static"
                                            },
                                            {
                                              "type": {
                                                "primitive": "str"
                                              }
                                            }
                                          ],
                                          "constraints": []
                                        }
                                      },
                                      "id": 475,
                                      "name": "std::borrow::Cow"
                                    }
                                  }
                                }
                              ],
                              "constraints": []
                            }
                          },
                          "id": 58,
                          "name": "Into"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "S"
                  }
                }
              }
            ]
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1690
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "generic": "S"
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 55,
            "name": "From"
          }
        }
      }
    },
    "1582": {
      "id": 1582,
      "crate_id": 0,
      "name": "from",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "generic": "S"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "277": {
      "id": 277,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 249,
              "name": "LeaseAction"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            276
          ],
          "provided_trait_methods": [
            "ne"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 112,
            "name": "PartialEq"
          }
        }
      }
    },
    "600": {
      "id": 600,
      "crate_id": 0,
      "name": "MAX_ITEM_COUNT",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "77": {
      "id": 77,
      "crate_id": 5,
      "name": "clone_into",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "target",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "generic": "T"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": null
          }
        }
      }
    },
    "5": {
      "id": 5,
      "crate_id": 0,
      "name": "AZURE_PUBLIC_CLOUD",
      "visibility": "public",
      "docs": "Azure Resource Manager public cloud endpoint",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "static": {
          "expr": "_",
          "is_mutable": false,
          "is_unsafe": false,
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [
                    {
                      "type": {
                        "resolved_path": {
                          "args": {
                            "angle_bracketed": {
                              "args": [],
                              "constraints": []
                            }
                          },
                          "id": 3,
                          "name": "$crate::Url"
                        }
                      }
                    }
                  ],
                  "constraints": []
                }
              },
              "id": 2,
              "name": "once_cell::sync::Lazy"
            }
          }
        }
      }
    },
    "121": {
      "id": 121,
      "crate_id": 0,
      "name": "Err",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "assoc_type": {
          "bounds": [],
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 122,
              "name": "Error"
            }
          }
        }
      }
    },
    "902": {
      "id": 902,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 871,
              "name": "LeaseId"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            901
          ],
          "provided_trait_methods": [
            "ne"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 112,
            "name": "PartialEq"
          }
        }
      }
    },
    "1761": {
      "id": 1761,
      "crate_id": 0,
      "name": "from",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "generic": "S"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "1216": {
      "id": 1216,
      "crate_id": 0,
      "name": "RangeFrom",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "variant": {
          "discriminant": null,
          "kind": {
            "tuple": [
              1214
            ]
          }
        }
      }
    },
    "1867": {
      "id": 1867,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 1866,
          "is_glob": false,
          "name": "base64",
          "source": "typespec_client_core::base64"
        }
      }
    },
    "552": {
      "id": 552,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 518,
              "name": "AccessToken"
            }
          },
          "generics": {
            "params": [
              {
                "kind": {
                  "lifetime": {
                    "outlives": []
                  }
                },
                "name": "'de"
              }
            ],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            551
          ],
          "provided_trait_methods": [
            "deserialize_in_place"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "lifetime": "'de"
                  }
                ],
                "constraints": []
              }
            },
            "id": 85,
            "name": "Deserialize"
          }
        }
      }
    },
    "1303": {
      "id": 1303,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1269,
              "name": "SequenceNumber"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1302
          ],
          "provided_trait_methods": [
            "lt",
            "le",
            "gt",
            "ge"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 1067,
            "name": "PartialOrd"
          }
        }
      }
    },
    "1843": {
      "id": 1843,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1805,
              "name": "TestMode"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1842
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "388": {
      "id": 388,
      "crate_id": 0,
      "name": "Target",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "assoc_type": {
          "bounds": [],
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 389,
              "name": "Pipeline"
            }
          }
        }
      }
    },
    "554": {
      "id": 554,
      "crate_id": 0,
      "name": "clear_cache",
      "visibility": "default",
      "docs": "Clear the credential's cache.",
      "links": {},
      "attrs": [
        "#[must_use]",
        "#[allow(elided_named_lifetimes, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds)]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [
              {
                "kind": {
                  "lifetime": {
                    "outlives": []
                  }
                },
                "name": "'life0"
              },
              {
                "kind": {
                  "lifetime": {
                    "outlives": []
                  }
                },
                "name": "'async_trait"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "outlives": "'async_trait"
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "Self"
                  }
                }
              },
              {
                "lifetime_predicate": {
                  "lifetime": "'life0",
                  "outlives": [
                    "'async_trait"
                  ]
                }
              }
            ]
          },
          "has_body": false,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": "'life0",
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "resolved_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [
                                  {
                                    "type": {
                                      "dyn_trait": {
                                        "lifetime": "'async_trait",
                                        "traits": [
                                          {
                                            "generic_params": [],
                                            "trait": {
                                              "args": {
                                                "angle_bracketed": {
                                                  "args": [],
                                                  "constraints": [
                                                    {
                                                      "args": {
                                                        "angle_bracketed": {
                                                          "args": [],
                                                          "constraints": []
                                                        }
                                                      },
                                                      "binding": {
                                                        "equality": {
                                                          "type": {
                                                            "resolved_path": {
                                                              "args": {
                                                                "angle_bracketed": {
                                                                  "args": [
                                                                    {
                                                                      "type": {
                                                                        "tuple": []
                                                                      }
                                                                    }
                                                                  ],
                                                                  "constraints": []
                                                                }
                                                              },
                                                              "id": 26,
                                                              "name": "crate::Result"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "name": "Output"
                                                    }
                                                  ]
                                                }
                                              },
                                              "id": 431,
                                              "name": "::core::future::Future"
                                            }
                                          },
                                          {
                                            "generic_params": [],
                                            "trait": {
                                              "args": {
                                                "angle_bracketed": {
                                                  "args": [],
                                                  "constraints": []
                                                }
                                              },
                                              "id": 33,
                                              "name": "::core::marker::Send"
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ],
                                "constraints": []
                              }
                            },
                            "id": 430,
                            "name": "Box"
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 429,
                "name": "::core::pin::Pin"
              }
            }
          }
        }
      }
    },
    "1017": {
      "id": 1017,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "$crate::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "$crate::fmt::Result"
              }
            }
          }
        }
      }
    },
    "828": {
      "id": 828,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 795,
              "name": "IfSourceMatchCondition"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            826,
            827
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 771,
            "name": "Header"
          }
        }
      }
    },
    "1438": {
      "id": 1438,
      "crate_id": 0,
      "name": "from",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "generic": "S"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "1075": {
      "id": 1075,
      "crate_id": 0,
      "name": "from",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "max_results",
                {
                  "resolved_path": {
                    "args": {
                      "angle_bracketed": {
                        "args": [],
                        "constraints": []
                      }
                    },
                    "id": 1033,
                    "name": "NonZeroU32"
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "1543": {
      "id": 1543,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1516,
              "name": "App"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1542
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "337": {
      "id": 337,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 336,
          "is_glob": false,
          "name": "builders",
          "source": "typespec_client_core::http::builders"
        }
      }
    },
    "1437": {
      "id": 1437,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1408,
              "name": "ClientVersion"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1436
          ],
          "provided_trait_methods": [
            "clone_from"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 53,
            "name": "Clone"
          }
        }
      }
    },
    "1062": {
      "id": 1062,
      "crate_id": 0,
      "name": "eq",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "other",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 1031,
                        "name": "MaxResults"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "primitive": "bool"
            }
          }
        }
      }
    },
    "1056": {
      "id": 1056,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "$crate::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "$crate::fmt::Result"
              }
            }
          }
        }
      }
    },
    "945": {
      "id": 945,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 921,
              "name": "LeaseBreakPeriod"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            944
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "282": {
      "id": 282,
      "crate_id": 0,
      "name": "from",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "e",
                {
                  "resolved_path": {
                    "args": {
                      "angle_bracketed": {
                        "args": [],
                        "constraints": []
                      }
                    },
                    "id": 249,
                    "name": "LeaseAction"
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "1506": {
      "id": 1506,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "$crate::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "$crate::fmt::Result"
              }
            }
          }
        }
      }
    },
    "1126": {
      "id": 1126,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1083,
              "name": "Metadata"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1125
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "borrowed_ref": {
                        "is_mutable": false,
                        "lifetime": null,
                        "type": {
                          "resolved_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "id": 659,
                            "name": "Headers"
                          }
                        }
                      }
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 55,
            "name": "From"
          }
        }
      }
    },
    "921": {
      "id": 921,
      "crate_id": 0,
      "name": "LeaseBreakPeriod",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "impls": [
            922,
            923,
            924,
            925,
            926,
            927,
            928,
            929,
            930,
            931,
            932,
            933,
            934,
            935,
            936,
            937,
            938,
            939,
            940,
            941,
            942,
            943,
            945,
            947,
            948,
            950,
            953
          ],
          "kind": {
            "tuple": [
              null
            ]
          }
        }
      }
    },
    "671": {
      "id": 671,
      "crate_id": 0,
      "name": "Other",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "variant": {
          "discriminant": null,
          "kind": {
            "tuple": [
              670
            ]
          }
        }
      }
    },
    "1217": {
      "id": 1217,
      "crate_id": 0,
      "name": "Range",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "enum": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_stripped_variants": false,
          "impls": [
            1219,
            1220,
            1221,
            1222,
            1223,
            1224,
            1225,
            1226,
            1227,
            1228,
            1229,
            1230,
            1231,
            1232,
            1233,
            1234,
            1235,
            1236,
            1237,
            1238,
            1239,
            1240,
            1241,
            1243,
            1245,
            1246,
            1248,
            1249,
            1251,
            1253,
            1255,
            1257,
            1261,
            1264,
            1266
          ],
          "variants": [
            1213,
            1216
          ]
        }
      }
    },
    "1032": {
      "id": 1032,
      "crate_id": 0,
      "name": "new",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "max_results",
                {
                  "resolved_path": {
                    "args": {
                      "angle_bracketed": {
                        "args": [],
                        "constraints": []
                      }
                    },
                    "id": 1033,
                    "name": "NonZeroU32"
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "384": {
      "id": 384,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "$crate::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "$crate::fmt::Result"
              }
            }
          }
        }
      }
    },
    "339": {
      "id": 339,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 338,
          "is_glob": false,
          "name": "ClientMethodOptions",
          "source": "typespec_client_core::http::ClientMethodOptions"
        }
      }
    },
    "907": {
      "id": 907,
      "crate_id": 0,
      "name": "from",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "value",
                {
                  "resolved_path": {
                    "args": {
                      "angle_bracketed": {
                        "args": [],
                        "constraints": []
                      }
                    },
                    "id": 908,
                    "name": "Uuid"
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "1171": {
      "id": 1171,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1131,
              "name": "NextMarker"
            }
          },
          "generics": {
            "params": [
              {
                "kind": {
                  "lifetime": {
                    "outlives": []
                  }
                },
                "name": "'de"
              }
            ],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1170
          ],
          "provided_trait_methods": [
            "deserialize_in_place"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "lifetime": "'de"
                  }
                ],
                "constraints": []
              }
            },
            "id": 85,
            "name": "Deserialize"
          }
        }
      }
    },
    "1722": {
      "id": 1722,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "$crate::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "$crate::fmt::Result"
              }
            }
          }
        }
      }
    },
    "120": {
      "id": 120,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "borrowed_ref": {
              "is_mutable": false,
              "lifetime": "'static",
              "type": {
                "primitive": "str"
              }
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            119
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 31,
                        "name": "LeaseStatus"
                      }
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 55,
            "name": "From"
          }
        }
      }
    },
    "232": {
      "id": 232,
      "crate_id": 0,
      "name": "from_str",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "primitive": "str"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "resolved_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "id": 196,
                            "name": "LeaseDuration"
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 26,
                "name": "$crate::error::Result"
              }
            }
          }
        }
      }
    },
    "1696": {
      "id": 1696,
      "crate_id": 0,
      "name": "Version",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "impls": [
            1699,
            1700,
            1701,
            1702,
            1703,
            1704,
            1705,
            1706,
            1707,
            1708,
            1709,
            1710,
            1711,
            1712,
            1713,
            1714,
            1715,
            1716,
            1717,
            1718,
            1719,
            1720,
            1721,
            1723,
            1725,
            1727,
            1730
          ],
          "kind": {
            "tuple": [
              null
            ]
          }
        }
      }
    },
    "1507": {
      "id": 1507,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1480,
              "name": "ActivityId"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1506
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "1218": {
      "id": 1218,
      "crate_id": 0,
      "name": "new",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "start",
                {
                  "primitive": "u64"
                }
              ],
              [
                "end",
                {
                  "primitive": "u64"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 1217,
                "name": "Range"
              }
            }
          }
        }
      }
    },
    "247": {
      "id": 247,
      "crate_id": 0,
      "name": "Release",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "variant": {
          "discriminant": null,
          "kind": "plain"
        }
      }
    },
    "390": {
      "id": 390,
      "crate_id": 0,
      "name": "deref",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "borrowed_ref": {
                "is_mutable": false,
                "lifetime": null,
                "type": {
                  "qualified_path": {
                    "args": {
                      "angle_bracketed": {
                        "args": [],
                        "constraints": []
                      }
                    },
                    "name": "Target",
                    "self_type": {
                      "generic": "Self"
                    },
                    "trait": {
                      "args": null,
                      "id": 374,
                      "name": ""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "1089": {
      "id": 1089,
      "crate_id": 0,
      "name": "get",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "k",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "primitive": "str"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "resolved_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "id": 1086,
                            "name": "Bytes"
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 354,
                "name": "Option"
              }
            }
          }
        }
      }
    },
    "1842": {
      "id": 1842,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "fmt::Result"
              }
            }
          }
        }
      }
    },
    "245": {
      "id": 245,
      "crate_id": 0,
      "name": "Renew",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "variant": {
          "discriminant": null,
          "kind": "plain"
        }
      }
    },
    "30": {
      "id": 30,
      "crate_id": 0,
      "name": "Unlocked",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "variant": {
          "discriminant": null,
          "kind": "plain"
        }
      }
    },
    "584": {
      "id": 584,
      "crate_id": 0,
      "name": "ENCRYPTION_KEY",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "1578": {
      "id": 1578,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "$crate::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "$crate::fmt::Result"
              }
            }
          }
        }
      }
    },
    "1027": {
      "id": 1027,
      "crate_id": 0,
      "name": "default",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "1849": {
      "id": 1849,
      "crate_id": 0,
      "name": "from_str",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "primitive": "str"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "generic": "Self"
                        }
                      },
                      {
                        "type": {
                          "qualified_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "name": "Err",
                            "self_type": {
                              "generic": "Self"
                            },
                            "trait": {
                              "args": null,
                              "id": 125,
                              "name": ""
                            }
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 64,
                "name": "Result"
              }
            }
          }
        }
      }
    },
    "592": {
      "id": 592,
      "crate_id": 0,
      "name": "ITEM_TYPE",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "618": {
      "id": 618,
      "crate_id": 0,
      "name": "SOURCE_IF_NONE_MATCH",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "658": {
      "id": 658,
      "crate_id": 0,
      "name": "get_location",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "headers",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 659,
                        "name": "crate::headers::Headers"
                      }
                    }
                  }
                }
              ],
              [
                "final_state",
                {
                  "resolved_path": {
                    "args": {
                      "angle_bracketed": {
                        "args": [],
                        "constraints": []
                      }
                    },
                    "id": 631,
                    "name": "FinalState"
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "resolved_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [
                                  {
                                    "type": {
                                      "resolved_path": {
                                        "args": {
                                          "angle_bracketed": {
                                            "args": [],
                                            "constraints": []
                                          }
                                        },
                                        "id": 3,
                                        "name": "crate::Url"
                                      }
                                    }
                                  }
                                ],
                                "constraints": []
                              }
                            },
                            "id": 354,
                            "name": "Option"
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 26,
                "name": "crate::Result"
              }
            }
          }
        }
      }
    },
    "559": {
      "id": 559,
      "crate_id": 0,
      "name": "ACTIVITY_ID",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "705": {
      "id": 705,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 699,
              "name": "ContentRange"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            700,
            701,
            702,
            703,
            704
          ],
          "provided_trait_methods": [],
          "trait": null
        }
      }
    },
    "1830": {
      "id": 1830,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1805,
              "name": "TestMode"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1829
          ],
          "provided_trait_methods": [
            "clone_from"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 53,
            "name": "Clone"
          }
        }
      }
    },
    "780": {
      "id": 780,
      "crate_id": 0,
      "name": "clone",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 749,
                "name": "IfSequenceNumber"
              }
            }
          }
        }
      }
    },
    "992": {
      "id": 992,
      "crate_id": 0,
      "name": "MaxItemCount",
      "visibility": "public",
      "docs": "The max number of items in the collection",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "impls": [
            994,
            995,
            996,
            997,
            998,
            999,
            1000,
            1001,
            1002,
            1003,
            1004,
            1005,
            1006,
            1007,
            1008,
            1009,
            1010,
            1011,
            1012,
            1013,
            1014,
            1015,
            1016,
            1018,
            1020,
            1021,
            1024,
            1026,
            1028
          ],
          "kind": {
            "tuple": [
              null
            ]
          }
        }
      }
    },
    "1349": {
      "id": 1349,
      "crate_id": 0,
      "name": "Err",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "assoc_type": {
          "bounds": [],
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "type": {
            "qualified_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "name": "Err",
              "self_type": {
                "resolved_path": {
                  "args": {
                    "angle_bracketed": {
                      "args": [],
                      "constraints": []
                    }
                  },
                  "id": 908,
                  "name": "Uuid"
                }
              },
              "trait": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 125,
                "name": "FromStr"
              }
            }
          }
        }
      }
    },
    "1590": {
      "id": 1590,
      "crate_id": 0,
      "name": "from_static",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": true,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": "'static",
                    "type": {
                      "primitive": "str"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "1352": {
      "id": 1352,
      "crate_id": 0,
      "name": "name",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 557,
                "name": "headers::HeaderName"
              }
            }
          }
        }
      }
    },
    "948": {
      "id": 948,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 921,
              "name": "LeaseBreakPeriod"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 118,
            "name": "Copy"
          }
        }
      }
    },
    "585": {
      "id": 585,
      "crate_id": 0,
      "name": "HAS_IMMUTABILITY_POLICY",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "728": {
      "id": 728,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "$crate::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "$crate::fmt::Result"
              }
            }
          }
        }
      }
    },
    "1730": {
      "id": 1730,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1696,
              "name": "Version"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1728,
            1729
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 771,
            "name": "Header"
          }
        }
      }
    },
    "988": {
      "id": 988,
      "crate_id": 0,
      "name": "from",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "d",
                {
                  "resolved_path": {
                    "args": {
                      "angle_bracketed": {
                        "args": [],
                        "constraints": []
                      }
                    },
                    "id": 521,
                    "name": "Duration"
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "826": {
      "id": 826,
      "crate_id": 0,
      "name": "name",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 557,
                "name": "headers::HeaderName"
              }
            }
          }
        }
      }
    },
    "787": {
      "id": 787,
      "crate_id": 0,
      "name": "name",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 557,
                "name": "headers::HeaderName"
              }
            }
          }
        }
      }
    },
    "1439": {
      "id": 1439,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1408,
              "name": "ClientVersion"
            }
          },
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "S"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [
                                {
                                  "type": {
                                    "resolved_path": {
                                      "args": {
                                        "angle_bracketed": {
                                          "args": [
                                            {
                                              "lifetime": "'static"
                                            },
                                            {
                                              "type": {
                                                "primitive": "str"
                                              }
                                            }
                                          ],
                                          "constraints": []
                                        }
                                      },
                                      "id": 475,
                                      "name": "std::borrow::Cow"
                                    }
                                  }
                                }
                              ],
                              "constraints": []
                            }
                          },
                          "id": 58,
                          "name": "Into"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "S"
                  }
                }
              }
            ]
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1438
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "generic": "S"
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 55,
            "name": "From"
          }
        }
      }
    },
    "279": {
      "id": 279,
      "crate_id": 0,
      "name": "clone",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 249,
                "name": "LeaseAction"
              }
            }
          }
        }
      }
    },
    "287": {
      "id": 287,
      "crate_id": 0,
      "name": "as_ref",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "borrowed_ref": {
                "is_mutable": false,
                "lifetime": null,
                "type": {
                  "primitive": "str"
                }
              }
            }
          }
        }
      }
    },
    "743": {
      "id": 743,
      "crate_id": 0,
      "name": "0",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct_field": {
          "primitive": "u64"
        }
      }
    },
    "471": {
      "id": 471,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 470,
          "is_glob": true,
          "name": "policies",
          "source": "typespec_client_core::http::policies"
        }
      }
    },
    "1694": {
      "id": 1694,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1660,
              "name": "IfTags"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1692,
            1693
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 771,
            "name": "Header"
          }
        }
      }
    },
    "1542": {
      "id": 1542,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "$crate::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "$crate::fmt::Result"
              }
            }
          }
        }
      }
    },
    "1886": {
      "id": 1886,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 1885,
          "is_glob": false,
          "name": "HttpClient",
          "source": "typespec_client_core::http::HttpClient"
        }
      }
    },
    "550": {
      "id": 550,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 518,
              "name": "AccessToken"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            549
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 137,
            "name": "Serialize"
          }
        }
      }
    },
    "1396": {
      "id": 1396,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 921,
          "is_glob": false,
          "name": "LeaseBreakPeriod",
          "source": "lease_break_period::LeaseBreakPeriod"
        }
      }
    },
    "1687": {
      "id": 1687,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1660,
              "name": "IfTags"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1686
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "1123": {
      "id": 1123,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1083,
              "name": "Metadata"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1121
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "type": {
                                  "resolved_path": {
                                    "args": {
                                      "angle_bracketed": {
                                        "args": [],
                                        "constraints": []
                                      }
                                    },
                                    "id": 27,
                                    "name": "String"
                                  }
                                }
                              },
                              {
                                "type": {
                                  "resolved_path": {
                                    "args": {
                                      "angle_bracketed": {
                                        "args": [],
                                        "constraints": []
                                      }
                                    },
                                    "id": 1086,
                                    "name": "Bytes"
                                  }
                                }
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 1122,
                        "name": "HashMap"
                      }
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 1124,
            "name": "AsMut"
          }
        }
      }
    },
    "1688": {
      "id": 1688,
      "crate_id": 0,
      "name": "clone",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 1660,
                "name": "IfTags"
              }
            }
          }
        }
      }
    },
    "426": {
      "id": 426,
      "crate_id": 0,
      "name": "send",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[allow(elided_named_lifetimes, clippy :: async_yields_async, clippy ::\ndiverging_sub_expression, clippy :: let_unit_value, clippy ::\nneedless_arbitrary_self_type, clippy :: no_effect_underscore_binding, clippy\n:: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [
              {
                "kind": {
                  "lifetime": {
                    "outlives": []
                  }
                },
                "name": "'life0"
              },
              {
                "kind": {
                  "lifetime": {
                    "outlives": []
                  }
                },
                "name": "'life1"
              },
              {
                "kind": {
                  "lifetime": {
                    "outlives": []
                  }
                },
                "name": "'life2"
              },
              {
                "kind": {
                  "lifetime": {
                    "outlives": []
                  }
                },
                "name": "'life3"
              },
              {
                "kind": {
                  "lifetime": {
                    "outlives": []
                  }
                },
                "name": "'async_trait"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "outlives": "'async_trait"
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "Self"
                  }
                }
              },
              {
                "lifetime_predicate": {
                  "lifetime": "'life0",
                  "outlives": [
                    "'async_trait"
                  ]
                }
              },
              {
                "lifetime_predicate": {
                  "lifetime": "'life1",
                  "outlives": [
                    "'async_trait"
                  ]
                }
              },
              {
                "lifetime_predicate": {
                  "lifetime": "'life2",
                  "outlives": [
                    "'async_trait"
                  ]
                }
              },
              {
                "lifetime_predicate": {
                  "lifetime": "'life3",
                  "outlives": [
                    "'async_trait"
                  ]
                }
              }
            ]
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": "'life0",
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "ctx",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": "'life1",
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 427,
                        "name": "Context"
                      }
                    }
                  }
                }
              ],
              [
                "request",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": "'life2",
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 428,
                        "name": "Request"
                      }
                    }
                  }
                }
              ],
              [
                "next",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": "'life3",
                    "type": {
                      "slice": {
                        "resolved_path": {
                          "args": {
                            "angle_bracketed": {
                              "args": [
                                {
                                  "type": {
                                    "dyn_trait": {
                                      "lifetime": null,
                                      "traits": [
                                        {
                                          "generic_params": [],
                                          "trait": {
                                            "args": {
                                              "angle_bracketed": {
                                                "args": [],
                                                "constraints": []
                                              }
                                            },
                                            "id": 357,
                                            "name": "Policy"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ],
                              "constraints": []
                            }
                          },
                          "id": 356,
                          "name": "Arc"
                        }
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "resolved_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [
                                  {
                                    "type": {
                                      "dyn_trait": {
                                        "lifetime": "'async_trait",
                                        "traits": [
                                          {
                                            "generic_params": [],
                                            "trait": {
                                              "args": {
                                                "angle_bracketed": {
                                                  "args": [],
                                                  "constraints": [
                                                    {
                                                      "args": {
                                                        "angle_bracketed": {
                                                          "args": [],
                                                          "constraints": []
                                                        }
                                                      },
                                                      "binding": {
                                                        "equality": {
                                                          "type": {
                                                            "resolved_path": {
                                                              "args": {
                                                                "angle_bracketed": {
                                                                  "args": [],
                                                                  "constraints": []
                                                                }
                                                              },
                                                              "id": 432,
                                                              "name": "PolicyResult"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "name": "Output"
                                                    }
                                                  ]
                                                }
                                              },
                                              "id": 431,
                                              "name": "::core::future::Future"
                                            }
                                          },
                                          {
                                            "generic_params": [],
                                            "trait": {
                                              "args": {
                                                "angle_bracketed": {
                                                  "args": [],
                                                  "constraints": []
                                                }
                                              },
                                              "id": 33,
                                              "name": "::core::marker::Send"
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ],
                                "constraints": []
                              }
                            },
                            "id": 430,
                            "name": "Box"
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 429,
                "name": "::core::pin::Pin"
              }
            }
          }
        }
      }
    },
    "788": {
      "id": 788,
      "crate_id": 0,
      "name": "value",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 14,
                "name": "headers::HeaderValue"
              }
            }
          }
        }
      }
    },
    "1791": {
      "id": 1791,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "$crate::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "$crate::fmt::Result"
              }
            }
          }
        }
      }
    },
    "1544": {
      "id": 1544,
      "crate_id": 0,
      "name": "clone",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 1516,
                "name": "App"
              }
            }
          }
        }
      }
    },
    "513": {
      "id": 513,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "std::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "std::fmt::Result"
              }
            }
          }
        }
      }
    },
    "575": {
      "id": 575,
      "crate_id": 0,
      "name": "COPY_PROGRESS",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "900": {
      "id": 900,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 871,
              "name": "LeaseId"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 109,
            "name": "StructuralPartialEq"
          }
        }
      }
    },
    "1445": {
      "id": 1445,
      "crate_id": 0,
      "name": "new",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "S"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [
                                {
                                  "type": {
                                    "resolved_path": {
                                      "args": {
                                        "angle_bracketed": {
                                          "args": [
                                            {
                                              "lifetime": "'static"
                                            },
                                            {
                                              "type": {
                                                "primitive": "str"
                                              }
                                            }
                                          ],
                                          "constraints": []
                                        }
                                      },
                                      "id": 475,
                                      "name": "std::borrow::Cow"
                                    }
                                  }
                                }
                              ],
                              "constraints": []
                            }
                          },
                          "id": 58,
                          "name": "Into"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "S"
                  }
                }
              }
            ]
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "generic": "S"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "301": {
      "id": 301,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 297,
          "is_glob": true,
          "name": "lease",
          "source": "lease"
        }
      }
    },
    "794": {
      "id": 794,
      "crate_id": 0,
      "name": "NotMatch",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "variant": {
          "discriminant": null,
          "kind": {
            "tuple": [
              793
            ]
          }
        }
      }
    },
    "871": {
      "id": 871,
      "crate_id": 0,
      "name": "LeaseId",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "impls": [
            872,
            873,
            874,
            875,
            876,
            877,
            878,
            879,
            880,
            881,
            882,
            883,
            884,
            885,
            886,
            887,
            888,
            889,
            890,
            891,
            892,
            893,
            894,
            896,
            898,
            899,
            900,
            902,
            903,
            906,
            909,
            912,
            915,
            917
          ],
          "kind": {
            "tuple": [
              null
            ]
          }
        }
      }
    },
    "1401": {
      "id": 1401,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 1131,
          "is_glob": false,
          "name": "NextMarker",
          "source": "next_marker::NextMarker"
        }
      }
    },
    "188": {
      "id": 188,
      "crate_id": 0,
      "name": "deserialize",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "D"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [
                                {
                                  "lifetime": "'de"
                                }
                              ],
                              "constraints": []
                            }
                          },
                          "id": 132,
                          "name": "serde::Deserializer"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "D"
                  }
                }
              }
            ]
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "deserializer",
                {
                  "generic": "D"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "generic": "Self"
                        }
                      },
                      {
                        "type": {
                          "qualified_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "name": "Error",
                            "self_type": {
                              "generic": "D"
                            },
                            "trait": {
                              "args": null,
                              "id": 132,
                              "name": ""
                            }
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 64,
                "name": "::core::result::Result"
              }
            }
          }
        }
      }
    },
    "1263": {
      "id": 1263,
      "crate_id": 0,
      "name": "from_str",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "primitive": "str"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "resolved_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "id": 1217,
                            "name": "Range"
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 26,
                "name": "crate::Result"
              }
            }
          }
        }
      }
    },
    "1514": {
      "id": 1514,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1480,
              "name": "ActivityId"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1512,
            1513
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 771,
            "name": "Header"
          }
        }
      }
    },
    "1913": {
      "id": 1913,
      "crate_id": 0,
      "name": "future",
      "visibility": "public",
      "docs": "Declare a `Future` with the given name\n\n`Future::Output` will be set to `azure_core::Result<$NAMEResponse>`.\nThe `Future` will be `Send` for all targets but `wasm32`.",
      "links": {},
      "attrs": [
        "#[macro_export]"
      ],
      "deprecation": null,
      "inner": {
        "macro": "macro_rules! future {\n    ($name:ident) => { ... };\n    ($name:ident<$($generic:ident)?>) => { ... };\n}"
      }
    },
    "748": {
      "id": 748,
      "crate_id": 0,
      "name": "Equal",
      "visibility": "default",
      "docs": "If the object’s sequence number is equal to the specified value, the\nrequest proceeds; otherwise it fails with SequenceNumberConditionNotMet\nerror (HTTP status code 412 – Precondition Failed).",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "variant": {
          "discriminant": null,
          "kind": {
            "tuple": [
              747
            ]
          }
        }
      }
    },
    "574": {
      "id": 574,
      "crate_id": 0,
      "name": "COPY_COMPLETION_TIME",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "1835": {
      "id": 1835,
      "crate_id": 0,
      "name": "eq",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "other",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 1805,
                        "name": "TestMode"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "primitive": "bool"
            }
          }
        }
      }
    },
    "303": {
      "id": 303,
      "crate_id": 0,
      "name": "TelemetryOptions",
      "visibility": "public",
      "docs": "Telemetry options.",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "impls": [
            305,
            306,
            307,
            308,
            309,
            310,
            311,
            312,
            313,
            314,
            315,
            316,
            317,
            318,
            319,
            320,
            321,
            322,
            323,
            324,
            325,
            326,
            328,
            330,
            332
          ],
          "kind": {
            "plain": {
              "fields": [],
              "has_stripped_fields": true
            }
          }
        }
      }
    },
    "1398": {
      "id": 1398,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 992,
          "is_glob": false,
          "name": "MaxItemCount",
          "source": "max_item_count::MaxItemCount"
        }
      }
    },
    "1517": {
      "id": 1517,
      "crate_id": 0,
      "name": "new",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "S"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [
                                {
                                  "type": {
                                    "resolved_path": {
                                      "args": {
                                        "angle_bracketed": {
                                          "args": [
                                            {
                                              "lifetime": "'static"
                                            },
                                            {
                                              "type": {
                                                "primitive": "str"
                                              }
                                            }
                                          ],
                                          "constraints": []
                                        }
                                      },
                                      "id": 475,
                                      "name": "std::borrow::Cow"
                                    }
                                  }
                                }
                              ],
                              "constraints": []
                            }
                          },
                          "id": 58,
                          "name": "Into"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "S"
                  }
                }
              }
            ]
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "generic": "S"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "1874": {
      "id": 1874,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 1873,
          "is_glob": false,
          "name": "Model",
          "source": "typespec_client_core::http::response::Model"
        }
      }
    },
    "281": {
      "id": 281,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 249,
              "name": "LeaseAction"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 118,
            "name": "Copy"
          }
        }
      }
    },
    "353": {
      "id": 353,
      "crate_id": 0,
      "name": "new",
      "visibility": "public",
      "docs": "Creates a new pipeline given the client library crate name and version,\nalone with user-specified and client library-specified policies.\n\nCrates can simply pass `option_env!(\"CARGO_PKG_NAME\")` and `option_env!(\"CARGO_PKG_VERSION\")` for the\n`crate_name` and `crate_version` arguments respectively.",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "crate_name",
                {
                  "resolved_path": {
                    "args": {
                      "angle_bracketed": {
                        "args": [
                          {
                            "type": {
                              "borrowed_ref": {
                                "is_mutable": false,
                                "lifetime": "'static",
                                "type": {
                                  "primitive": "str"
                                }
                              }
                            }
                          }
                        ],
                        "constraints": []
                      }
                    },
                    "id": 354,
                    "name": "Option"
                  }
                }
              ],
              [
                "crate_version",
                {
                  "resolved_path": {
                    "args": {
                      "angle_bracketed": {
                        "args": [
                          {
                            "type": {
                              "borrowed_ref": {
                                "is_mutable": false,
                                "lifetime": "'static",
                                "type": {
                                  "primitive": "str"
                                }
                              }
                            }
                          }
                        ],
                        "constraints": []
                      }
                    },
                    "id": 354,
                    "name": "Option"
                  }
                }
              ],
              [
                "options",
                {
                  "resolved_path": {
                    "args": {
                      "angle_bracketed": {
                        "args": [],
                        "constraints": []
                      }
                    },
                    "id": 340,
                    "name": "http::ClientOptions"
                  }
                }
              ],
              [
                "per_call_policies",
                {
                  "resolved_path": {
                    "args": {
                      "angle_bracketed": {
                        "args": [
                          {
                            "type": {
                              "resolved_path": {
                                "args": {
                                  "angle_bracketed": {
                                    "args": [
                                      {
                                        "type": {
                                          "dyn_trait": {
                                            "lifetime": null,
                                            "traits": [
                                              {
                                                "generic_params": [],
                                                "trait": {
                                                  "args": {
                                                    "angle_bracketed": {
                                                      "args": [],
                                                      "constraints": []
                                                    }
                                                  },
                                                  "id": 357,
                                                  "name": "Policy"
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "constraints": []
                                  }
                                },
                                "id": 356,
                                "name": "Arc"
                              }
                            }
                          }
                        ],
                        "constraints": []
                      }
                    },
                    "id": 355,
                    "name": "Vec"
                  }
                }
              ],
              [
                "per_retry_policies",
                {
                  "resolved_path": {
                    "args": {
                      "angle_bracketed": {
                        "args": [
                          {
                            "type": {
                              "resolved_path": {
                                "args": {
                                  "angle_bracketed": {
                                    "args": [
                                      {
                                        "type": {
                                          "dyn_trait": {
                                            "lifetime": null,
                                            "traits": [
                                              {
                                                "generic_params": [],
                                                "trait": {
                                                  "args": {
                                                    "angle_bracketed": {
                                                      "args": [],
                                                      "constraints": []
                                                    }
                                                  },
                                                  "id": 357,
                                                  "name": "Policy"
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "constraints": []
                                  }
                                },
                                "id": 356,
                                "name": "Arc"
                              }
                            }
                          }
                        ],
                        "constraints": []
                      }
                    },
                    "id": 355,
                    "name": "Vec"
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "1306": {
      "id": 1306,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1269,
              "name": "SequenceNumber"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1305
          ],
          "provided_trait_methods": [
            "max",
            "min",
            "clamp"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 1071,
            "name": "Ord"
          }
        }
      }
    },
    "1474": {
      "id": 1474,
      "crate_id": 0,
      "name": "from",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "generic": "S"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "343": {
      "id": 343,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 342,
          "is_glob": false,
          "name": "ExponentialRetryOptions",
          "source": "typespec_client_core::http::ExponentialRetryOptions"
        }
      }
    },
    "1844": {
      "id": 1844,
      "crate_id": 0,
      "name": "from",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "mode",
                {
                  "resolved_path": {
                    "args": {
                      "angle_bracketed": {
                        "args": [],
                        "constraints": []
                      }
                    },
                    "id": 1805,
                    "name": "TestMode"
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "1137": {
      "id": 1137,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1131,
              "name": "NextMarker"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1132,
            1133,
            1134,
            1135,
            1136
          ],
          "provided_trait_methods": [],
          "trait": null
        }
      }
    },
    "248": {
      "id": 248,
      "crate_id": 0,
      "name": "Break",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "variant": {
          "discriminant": null,
          "kind": "plain"
        }
      }
    },
    "551": {
      "id": 551,
      "crate_id": 0,
      "name": "deserialize",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "__D"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [
                                {
                                  "lifetime": "'de"
                                }
                              ],
                              "constraints": []
                            }
                          },
                          "id": 132,
                          "name": "_serde::Deserializer"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "__D"
                  }
                }
              }
            ]
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "__deserializer",
                {
                  "generic": "__D"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "generic": "Self"
                        }
                      },
                      {
                        "type": {
                          "qualified_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "name": "Error",
                            "self_type": {
                              "generic": "__D"
                            },
                            "trait": {
                              "args": null,
                              "id": 132,
                              "name": ""
                            }
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 64,
                "name": "_serde::__private::Result"
              }
            }
          }
        }
      }
    },
    "1252": {
      "id": 1252,
      "crate_id": 0,
      "name": "from",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "r",
                {
                  "resolved_path": {
                    "args": {
                      "angle_bracketed": {
                        "args": [
                          {
                            "type": {
                              "primitive": "u64"
                            }
                          }
                        ],
                        "constraints": []
                      }
                    },
                    "id": 1215,
                    "name": "RangeFrom"
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "1295": {
      "id": 1295,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1269,
              "name": "SequenceNumber"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1294
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "59": {
      "id": 59,
      "crate_id": 2,
      "name": "from",
      "visibility": "default",
      "docs": "Returns the argument unchanged.",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "t",
                {
                  "generic": "T"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "T"
            }
          }
        }
      }
    },
    "617": {
      "id": 617,
      "crate_id": 0,
      "name": "SOURCE_IF_MODIFIED_SINCE",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "69": {
      "id": 69,
      "crate_id": 2,
      "name": "try_from",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "value",
                {
                  "generic": "U"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "generic": "T"
                        }
                      },
                      {
                        "type": {
                          "qualified_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "name": "Error",
                            "self_type": {
                              "generic": "T"
                            },
                            "trait": {
                              "args": {
                                "angle_bracketed": {
                                  "args": [
                                    {
                                      "type": {
                                        "generic": "U"
                                      }
                                    }
                                  ],
                                  "constraints": []
                                }
                              },
                              "id": 62,
                              "name": "TryFrom"
                            }
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 64,
                "name": "Result"
              }
            }
          }
        }
      }
    },
    "1856": {
      "id": 1856,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 1855,
          "is_glob": true,
          "name": "error",
          "source": "typespec::error"
        }
      }
    },
    "701": {
      "id": 701,
      "crate_id": 0,
      "name": "start",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "primitive": "u64"
            }
          }
        }
      }
    },
    "1135": {
      "id": 1135,
      "crate_id": 0,
      "name": "append_to_url_query_as_continuation",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "url",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 3,
                        "name": "Url"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": null
          }
        }
      }
    },
    "1905": {
      "id": 1905,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 1904,
          "is_glob": false,
          "name": "BytesStream",
          "source": "typespec_client_core::stream::BytesStream"
        }
      }
    },
    "1847": {
      "id": 1847,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "borrowed_ref": {
              "is_mutable": false,
              "lifetime": "'static",
              "type": {
                "primitive": "str"
              }
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1846
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "borrowed_ref": {
                        "is_mutable": false,
                        "lifetime": null,
                        "type": {
                          "resolved_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "id": 1805,
                            "name": "TestMode"
                          }
                        }
                      }
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 55,
            "name": "From"
          }
        }
      }
    },
    "22": {
      "id": 22,
      "crate_id": 0,
      "name": "query_param",
      "visibility": "public",
      "docs": "Constants related to query parameters",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "module": {
          "is_crate": false,
          "is_stripped": false,
          "items": [
            21
          ]
        }
      }
    },
    "795": {
      "id": 795,
      "crate_id": 0,
      "name": "IfSourceMatchCondition",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "enum": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_stripped_variants": false,
          "impls": [
            796,
            797,
            798,
            799,
            800,
            801,
            802,
            803,
            804,
            805,
            806,
            807,
            808,
            809,
            810,
            811,
            812,
            813,
            814,
            815,
            816,
            817,
            819,
            821,
            822,
            824,
            825,
            828
          ],
          "variants": [
            792,
            794
          ]
        }
      }
    },
    "818": {
      "id": 818,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "$crate::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "$crate::fmt::Result"
              }
            }
          }
        }
      }
    },
    "631": {
      "id": 631,
      "crate_id": 0,
      "name": "FinalState",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "enum": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_stripped_variants": false,
          "impls": [
            632,
            633,
            634,
            635,
            636,
            637,
            638,
            639,
            640,
            641,
            642,
            643,
            644,
            645,
            646,
            647,
            648,
            649,
            650,
            651,
            652,
            654,
            656,
            657
          ],
          "variants": [
            628,
            629,
            630
          ]
        }
      }
    },
    "944": {
      "id": 944,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "$crate::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "$crate::fmt::Result"
              }
            }
          }
        }
      }
    },
    "947": {
      "id": 947,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 921,
              "name": "LeaseBreakPeriod"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            946
          ],
          "provided_trait_methods": [
            "clone_from"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 53,
            "name": "Clone"
          }
        }
      }
    },
    "662": {
      "id": 662,
      "crate_id": 0,
      "name": "location",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "module": {
          "is_crate": false,
          "is_stripped": false,
          "items": [
            631,
            658,
            660
          ]
        }
      }
    },
    "1308": {
      "id": 1308,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1269,
              "name": "SequenceNumber"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1307
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "primitive": "u64"
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 55,
            "name": "From"
          }
        }
      }
    },
    "1919": {
      "id": 1919,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 467,
          "is_glob": true,
          "name": "policies",
          "source": "policies"
        }
      }
    },
    "433": {
      "id": 433,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 396,
              "name": "BearerTokenCredentialPolicy"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            426
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 357,
            "name": "Policy"
          }
        }
      }
    },
    "173": {
      "id": 173,
      "crate_id": 0,
      "name": "eq",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "other",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 146,
                        "name": "LeaseState"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "primitive": "bool"
            }
          }
        }
      }
    },
    "341": {
      "id": 341,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 340,
          "is_glob": false,
          "name": "ClientOptions",
          "source": "typespec_client_core::http::ClientOptions"
        }
      }
    },
    "1800": {
      "id": 1800,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 1799,
          "is_glob": true,
          "name": "options",
          "source": "typespec_client_core::http::request::options"
        }
      }
    },
    "233": {
      "id": 233,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 196,
              "name": "LeaseDuration"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            231,
            232
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 125,
            "name": "FromStr"
          }
        }
      }
    },
    "278": {
      "id": 278,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 249,
              "name": "LeaseAction"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [
            "assert_receiver_is_total_eq"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 114,
            "name": "Eq"
          }
        }
      }
    },
    "608": {
      "id": 608,
      "crate_id": 0,
      "name": "RANGE_GET_CONTENT_CRC64",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "437": {
      "id": 437,
      "crate_id": 0,
      "name": "new",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "crate_name",
                {
                  "resolved_path": {
                    "args": {
                      "angle_bracketed": {
                        "args": [
                          {
                            "type": {
                              "borrowed_ref": {
                                "is_mutable": false,
                                "lifetime": "'a",
                                "type": {
                                  "primitive": "str"
                                }
                              }
                            }
                          }
                        ],
                        "constraints": []
                      }
                    },
                    "id": 354,
                    "name": "Option"
                  }
                }
              ],
              [
                "crate_version",
                {
                  "resolved_path": {
                    "args": {
                      "angle_bracketed": {
                        "args": [
                          {
                            "type": {
                              "borrowed_ref": {
                                "is_mutable": false,
                                "lifetime": "'a",
                                "type": {
                                  "primitive": "str"
                                }
                              }
                            }
                          }
                        ],
                        "constraints": []
                      }
                    },
                    "id": 354,
                    "name": "Option"
                  }
                }
              ],
              [
                "options",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 303,
                        "name": "TelemetryOptions"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "4": {
      "id": 4,
      "crate_id": 0,
      "name": "AZURE_GERMANY_CLOUD",
      "visibility": "public",
      "docs": "Azure Resource Manager Germany cloud endpoint",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "static": {
          "expr": "_",
          "is_mutable": false,
          "is_unsafe": false,
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [
                    {
                      "type": {
                        "resolved_path": {
                          "args": {
                            "angle_bracketed": {
                              "args": [],
                              "constraints": []
                            }
                          },
                          "id": 3,
                          "name": "$crate::Url"
                        }
                      }
                    }
                  ],
                  "constraints": []
                }
              },
              "id": 2,
              "name": "once_cell::sync::Lazy"
            }
          }
        }
      }
    },
    "520": {
      "id": 520,
      "crate_id": 0,
      "name": "is_expired",
      "visibility": "public",
      "docs": "Check if the token is expired within a given duration.\n\nIf no duration is provided, then the default duration of 30 seconds is used.",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "window",
                {
                  "resolved_path": {
                    "args": {
                      "angle_bracketed": {
                        "args": [
                          {
                            "type": {
                              "resolved_path": {
                                "args": {
                                  "angle_bracketed": {
                                    "args": [],
                                    "constraints": []
                                  }
                                },
                                "id": 521,
                                "name": "Duration"
                              }
                            }
                          }
                        ],
                        "constraints": []
                      }
                    },
                    "id": 354,
                    "name": "Option"
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "primitive": "bool"
            }
          }
        }
      }
    },
    "1057": {
      "id": 1057,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1031,
              "name": "MaxResults"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1056
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "1298": {
      "id": 1298,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1269,
              "name": "SequenceNumber"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 118,
            "name": "Copy"
          }
        }
      }
    },
    "1034": {
      "id": 1034,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1031,
              "name": "MaxResults"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1032
          ],
          "provided_trait_methods": [],
          "trait": null
        }
      }
    },
    "1472": {
      "id": 1472,
      "crate_id": 0,
      "name": "clone",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 1444,
                "name": "User"
              }
            }
          }
        }
      }
    },
    "1119": {
      "id": 1119,
      "crate_id": 0,
      "name": "default",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "467": {
      "id": 467,
      "crate_id": 0,
      "name": "policies",
      "visibility": "crate",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "module": {
          "is_crate": false,
          "is_stripped": true,
          "items": [
            468,
            469,
            471
          ]
        }
      }
    },
    "1340": {
      "id": 1340,
      "crate_id": 0,
      "name": "clone",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 1314,
                "name": "SourceLeaseId"
              }
            }
          }
        }
      }
    },
    "1725": {
      "id": 1725,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1696,
              "name": "Version"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1724
          ],
          "provided_trait_methods": [
            "clone_from"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 53,
            "name": "Clone"
          }
        }
      }
    },
    "1586": {
      "id": 1586,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1552,
              "name": "ClientRequestId"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1584,
            1585
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 771,
            "name": "Header"
          }
        }
      }
    },
    "23": {
      "id": 23,
      "crate_id": 0,
      "name": "constants",
      "visibility": "crate",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "module": {
          "is_crate": false,
          "is_stripped": true,
          "items": [
            7,
            12,
            20,
            22
          ]
        }
      }
    },
    "731": {
      "id": 731,
      "crate_id": 0,
      "name": "clone",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 699,
                "name": "ContentRange"
              }
            }
          }
        }
      }
    },
    "110": {
      "id": 110,
      "crate_id": 0,
      "name": "eq",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "other",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 31,
                        "name": "LeaseStatus"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "primitive": "bool"
            }
          }
        }
      }
    },
    "587": {
      "id": 587,
      "crate_id": 0,
      "name": "IF_SEQUENCE_NUMBER_EQ",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "986": {
      "id": 986,
      "crate_id": 0,
      "name": "value",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 14,
                "name": "headers::HeaderValue"
              }
            }
          }
        }
      }
    },
    "1297": {
      "id": 1297,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1269,
              "name": "SequenceNumber"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1296
          ],
          "provided_trait_methods": [
            "clone_from"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 53,
            "name": "Clone"
          }
        }
      }
    },
    "591": {
      "id": 591,
      "crate_id": 0,
      "name": "ITEM_COUNT",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "897": {
      "id": 897,
      "crate_id": 0,
      "name": "clone",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 871,
                "name": "LeaseId"
              }
            }
          }
        }
      }
    },
    "1654": {
      "id": 1654,
      "crate_id": 0,
      "name": "from",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "generic": "S"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "522": {
      "id": 522,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 518,
              "name": "AccessToken"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            519,
            520
          ],
          "provided_trait_methods": [],
          "trait": null
        }
      }
    },
    "1511": {
      "id": 1511,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1480,
              "name": "ActivityId"
            }
          },
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "S"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [
                                {
                                  "type": {
                                    "resolved_path": {
                                      "args": {
                                        "angle_bracketed": {
                                          "args": [
                                            {
                                              "lifetime": "'static"
                                            },
                                            {
                                              "type": {
                                                "primitive": "str"
                                              }
                                            }
                                          ],
                                          "constraints": []
                                        }
                                      },
                                      "id": 475,
                                      "name": "std::borrow::Cow"
                                    }
                                  }
                                }
                              ],
                              "constraints": []
                            }
                          },
                          "id": 58,
                          "name": "Into"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "S"
                  }
                }
              }
            ]
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1510
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "generic": "S"
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 55,
            "name": "From"
          }
        }
      }
    },
    "274": {
      "id": 274,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 249,
              "name": "LeaseAction"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            273
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "119": {
      "id": 119,
      "crate_id": 0,
      "name": "from",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "e",
                {
                  "resolved_path": {
                    "args": {
                      "angle_bracketed": {
                        "args": [],
                        "constraints": []
                      }
                    },
                    "id": 31,
                    "name": "LeaseStatus"
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "1025": {
      "id": 1025,
      "crate_id": 0,
      "name": "from",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "count",
                {
                  "primitive": "i32"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "556": {
      "id": 556,
      "crate_id": 0,
      "name": "ACCOUNT_KIND",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "782": {
      "id": 782,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 749,
              "name": "IfSequenceNumber"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 118,
            "name": "Copy"
          }
        }
      }
    },
    "514": {
      "id": 514,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 25,
              "name": "Secret"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            513
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "144": {
      "id": 144,
      "crate_id": 0,
      "name": "Breaking",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "variant": {
          "discriminant": null,
          "kind": "plain"
        }
      }
    },
    "820": {
      "id": 820,
      "crate_id": 0,
      "name": "clone",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 795,
                "name": "IfSourceMatchCondition"
              }
            }
          }
        }
      }
    },
    "222": {
      "id": 222,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 196,
              "name": "LeaseDuration"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 109,
            "name": "StructuralPartialEq"
          }
        }
      }
    },
    "1031": {
      "id": 1031,
      "crate_id": 0,
      "name": "MaxResults",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "impls": [
            1034,
            1035,
            1036,
            1037,
            1038,
            1039,
            1040,
            1041,
            1042,
            1043,
            1044,
            1045,
            1046,
            1047,
            1048,
            1049,
            1050,
            1051,
            1052,
            1053,
            1054,
            1055,
            1057,
            1059,
            1060,
            1061,
            1063,
            1066,
            1068,
            1070,
            1073,
            1076,
            1080
          ],
          "kind": {
            "tuple": [
              null
            ]
          }
        }
      }
    },
    "400": {
      "id": 400,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 396,
              "name": "BearerTokenCredentialPolicy"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            397
          ],
          "provided_trait_methods": [],
          "trait": null
        }
      }
    },
    "1410": {
      "id": 1410,
      "crate_id": 0,
      "name": "from_static",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": true,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": "'static",
                    "type": {
                      "primitive": "str"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "1381": {
      "id": 1381,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "$crate::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "$crate::fmt::Result"
              }
            }
          }
        }
      }
    },
    "240": {
      "id": 240,
      "crate_id": 0,
      "name": "serialize",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "S"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [],
                              "constraints": []
                            }
                          },
                          "id": 135,
                          "name": "serde::Serializer"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "S"
                  }
                }
              }
            ]
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "s",
                {
                  "generic": "S"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "qualified_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "name": "Ok",
                            "self_type": {
                              "generic": "S"
                            },
                            "trait": {
                              "args": null,
                              "id": 135,
                              "name": ""
                            }
                          }
                        }
                      },
                      {
                        "type": {
                          "qualified_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "name": "Error",
                            "self_type": {
                              "generic": "S"
                            },
                            "trait": {
                              "args": null,
                              "id": 135,
                              "name": ""
                            }
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 64,
                "name": "::core::result::Result"
              }
            }
          }
        }
      }
    },
    "1120": {
      "id": 1120,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1083,
              "name": "Metadata"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1119
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 333,
            "name": "Default"
          }
        }
      }
    },
    "468": {
      "id": 468,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 396,
          "is_glob": false,
          "name": "BearerTokenCredentialPolicy",
          "source": "bearer_token_policy::BearerTokenCredentialPolicy"
        }
      }
    },
    "176": {
      "id": 176,
      "crate_id": 0,
      "name": "clone",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 146,
                "name": "LeaseState"
              }
            }
          }
        }
      }
    },
    "1914": {
      "id": 1914,
      "crate_id": 0,
      "name": "static_url",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [
        "#[macro_export]"
      ],
      "deprecation": null,
      "inner": {
        "macro": "macro_rules! static_url {\n    ( $(#[$outer:meta])* $name:ident, $value:expr) => { ... };\n}"
      }
    },
    "622": {
      "id": 622,
      "crate_id": 0,
      "name": "TAGS",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "1757": {
      "id": 1757,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "$crate::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "$crate::fmt::Result"
              }
            }
          }
        }
      }
    },
    "461": {
      "id": 461,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 436,
              "name": "TelemetryPolicy"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            460
          ],
          "provided_trait_methods": [
            "clone_from"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 53,
            "name": "Clone"
          }
        }
      }
    },
    "1652": {
      "id": 1652,
      "crate_id": 0,
      "name": "clone",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 1624,
                "name": "Continuation"
              }
            }
          }
        }
      }
    },
    "1888": {
      "id": 1888,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 1887,
          "is_glob": false,
          "name": "Method",
          "source": "typespec_client_core::http::Method"
        }
      }
    },
    "1908": {
      "id": 1908,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 1086,
          "is_glob": false,
          "name": "Bytes",
          "source": "typespec_client_core::Bytes"
        }
      }
    },
    "590": {
      "id": 590,
      "crate_id": 0,
      "name": "IF_TAGS",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "180": {
      "id": 180,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "borrowed_ref": {
              "is_mutable": false,
              "lifetime": "'static",
              "type": {
                "primitive": "str"
              }
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            179
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 146,
                        "name": "LeaseState"
                      }
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 55,
            "name": "From"
          }
        }
      }
    },
    "235": {
      "id": 235,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 196,
              "name": "LeaseDuration"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            234
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "primitive": "str"
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 128,
            "name": "AsRef"
          }
        }
      }
    },
    "1554": {
      "id": 1554,
      "crate_id": 0,
      "name": "from_static",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": true,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": "'static",
                    "type": {
                      "primitive": "str"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "179": {
      "id": 179,
      "crate_id": 0,
      "name": "from",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "e",
                {
                  "resolved_path": {
                    "args": {
                      "angle_bracketed": {
                        "args": [],
                        "constraints": []
                      }
                    },
                    "id": 146,
                    "name": "LeaseState"
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "1436": {
      "id": 1436,
      "crate_id": 0,
      "name": "clone",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 1408,
                "name": "ClientVersion"
              }
            }
          }
        }
      }
    },
    "958": {
      "id": 958,
      "crate_id": 0,
      "name": "LeaseDuration",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "enum": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_stripped_variants": false,
          "impls": [
            959,
            960,
            961,
            962,
            963,
            964,
            965,
            966,
            967,
            968,
            969,
            970,
            971,
            972,
            973,
            974,
            975,
            976,
            977,
            978,
            979,
            980,
            982,
            984,
            987,
            989
          ],
          "variants": [
            955,
            957
          ]
        }
      }
    },
    "987": {
      "id": 987,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 958,
              "name": "LeaseDuration"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            985,
            986
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 771,
            "name": "Header"
          }
        }
      }
    },
    "1266": {
      "id": 1266,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1217,
              "name": "Range"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1265
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 82,
            "name": "Display"
          }
        }
      }
    },
    "1769": {
      "id": 1769,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1766,
              "name": "Prefix"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1767,
            1768
          ],
          "provided_trait_methods": [],
          "trait": null
        }
      }
    },
    "1018": {
      "id": 1018,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 992,
              "name": "MaxItemCount"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1017
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "1686": {
      "id": 1686,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "$crate::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "$crate::fmt::Result"
              }
            }
          }
        }
      }
    },
    "502": {
      "id": 502,
      "crate_id": 0,
      "name": "deserialize",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "__D"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [
                                {
                                  "lifetime": "'de"
                                }
                              ],
                              "constraints": []
                            }
                          },
                          "id": 132,
                          "name": "_serde::Deserializer"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "__D"
                  }
                }
              }
            ]
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "__deserializer",
                {
                  "generic": "__D"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "generic": "Self"
                        }
                      },
                      {
                        "type": {
                          "qualified_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "name": "Error",
                            "self_type": {
                              "generic": "__D"
                            },
                            "trait": {
                              "args": null,
                              "id": 132,
                              "name": ""
                            }
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 64,
                "name": "_serde::__private::Result"
              }
            }
          }
        }
      }
    },
    "569": {
      "id": 569,
      "crate_id": 0,
      "name": "BLOB_TYPE",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "511": {
      "id": 511,
      "crate_id": 0,
      "name": "from",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "access_token",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": "'static",
                    "type": {
                      "primitive": "str"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "1061": {
      "id": 1061,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1031,
              "name": "MaxResults"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 109,
            "name": "StructuralPartialEq"
          }
        }
      }
    },
    "1023": {
      "id": 1023,
      "crate_id": 0,
      "name": "value",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 14,
                "name": "headers::HeaderValue"
              }
            }
          }
        }
      }
    },
    "1024": {
      "id": 1024,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 992,
              "name": "MaxItemCount"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1022,
            1023
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 771,
            "name": "Header"
          }
        }
      }
    },
    "1699": {
      "id": 1699,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1696,
              "name": "Version"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1697,
            1698
          ],
          "provided_trait_methods": [],
          "trait": null
        }
      }
    },
    "1509": {
      "id": 1509,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1480,
              "name": "ActivityId"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1508
          ],
          "provided_trait_methods": [
            "clone_from"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 53,
            "name": "Clone"
          }
        }
      }
    },
    "1078": {
      "id": 1078,
      "crate_id": 0,
      "name": "Error",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "assoc_type": {
          "bounds": [],
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 27,
              "name": "String"
            }
          }
        }
      }
    },
    "793": {
      "id": 793,
      "crate_id": 0,
      "name": "0",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct_field": {
          "resolved_path": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 27,
            "name": "String"
          }
        }
      }
    },
    "67": {
      "id": 67,
      "crate_id": 2,
      "name": "Error",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "assoc_type": {
          "bounds": [],
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 68,
              "name": "Infallible"
            }
          }
        }
      }
    },
    "1117": {
      "id": 1117,
      "crate_id": 0,
      "name": "clone",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 1083,
                "name": "Metadata"
              }
            }
          }
        }
      }
    },
    "1262": {
      "id": 1262,
      "crate_id": 0,
      "name": "Err",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "assoc_type": {
          "bounds": [],
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 122,
              "name": "Error"
            }
          }
        }
      }
    },
    "1619": {
      "id": 1619,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1588,
              "name": "ContentDisposition"
            }
          },
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "S"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [
                                {
                                  "type": {
                                    "resolved_path": {
                                      "args": {
                                        "angle_bracketed": {
                                          "args": [
                                            {
                                              "lifetime": "'static"
                                            },
                                            {
                                              "type": {
                                                "primitive": "str"
                                              }
                                            }
                                          ],
                                          "constraints": []
                                        }
                                      },
                                      "id": 475,
                                      "name": "std::borrow::Cow"
                                    }
                                  }
                                }
                              ],
                              "constraints": []
                            }
                          },
                          "id": 58,
                          "name": "Into"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "S"
                  }
                }
              }
            ]
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1618
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "generic": "S"
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 55,
            "name": "From"
          }
        }
      }
    },
    "1917": {
      "id": 1917,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 335,
          "is_glob": true,
          "name": "options",
          "source": "options"
        }
      }
    },
    "1555": {
      "id": 1555,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1552,
              "name": "ClientRequestId"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1553,
            1554
          ],
          "provided_trait_methods": [],
          "trait": null
        }
      }
    },
    "1728": {
      "id": 1728,
      "crate_id": 0,
      "name": "name",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 557,
                "name": "$crate::http::headers::HeaderName"
              }
            }
          }
        }
      }
    },
    "44": {
      "id": 44,
      "crate_id": 2,
      "name": "borrow",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[rustc_diagnostic_item = \"noop_method_borrow\"]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "borrowed_ref": {
                "is_mutable": false,
                "lifetime": null,
                "type": {
                  "generic": "T"
                }
              }
            }
          }
        }
      }
    },
    "595": {
      "id": 595,
      "crate_id": 0,
      "name": "LEASE_DURATION",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "1093": {
      "id": 1093,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1083,
              "name": "Metadata"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1084,
            1085,
            1087,
            1088,
            1089,
            1090
          ],
          "provided_trait_methods": [],
          "trait": null
        }
      }
    },
    "857": {
      "id": 857,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "$crate::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "$crate::fmt::Result"
              }
            }
          }
        }
      }
    },
    "899": {
      "id": 899,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 871,
              "name": "LeaseId"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 118,
            "name": "Copy"
          }
        }
      }
    },
    "1294": {
      "id": 1294,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "$crate::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "$crate::fmt::Result"
              }
            }
          }
        }
      }
    },
    "116": {
      "id": 116,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 31,
              "name": "LeaseStatus"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            115
          ],
          "provided_trait_methods": [
            "clone_from"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 53,
            "name": "Clone"
          }
        }
      }
    },
    "985": {
      "id": 985,
      "crate_id": 0,
      "name": "name",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 557,
                "name": "headers::HeaderName"
              }
            }
          }
        }
      }
    },
    "653": {
      "id": 653,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "$crate::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "$crate::fmt::Result"
              }
            }
          }
        }
      }
    },
    "601": {
      "id": 601,
      "crate_id": 0,
      "name": "META_PREFIX",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "181": {
      "id": 181,
      "crate_id": 0,
      "name": "Err",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "assoc_type": {
          "bounds": [],
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 122,
              "name": "Error"
            }
          }
        }
      }
    },
    "1174": {
      "id": 1174,
      "crate_id": 0,
      "name": "from",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "next_marker",
                {
                  "resolved_path": {
                    "args": {
                      "angle_bracketed": {
                        "args": [],
                        "constraints": []
                      }
                    },
                    "id": 27,
                    "name": "String"
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "1079": {
      "id": 1079,
      "crate_id": 0,
      "name": "try_from",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "max_results",
                {
                  "primitive": "u32"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "generic": "Self"
                        }
                      },
                      {
                        "type": {
                          "qualified_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "name": "Error",
                            "self_type": {
                              "generic": "Self"
                            },
                            "trait": {
                              "args": null,
                              "id": 62,
                              "name": ""
                            }
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 64,
                "name": "Result"
              }
            }
          }
        }
      }
    },
    "1865": {
      "id": 1865,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [
        "#[cfg(feature = \"xml\")]"
      ],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 1864,
          "is_glob": false,
          "name": "xml",
          "source": "typespec_client_core::xml"
        }
      }
    },
    "827": {
      "id": 827,
      "crate_id": 0,
      "name": "value",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 14,
                "name": "headers::HeaderValue"
              }
            }
          }
        }
      }
    },
    "51": {
      "id": 51,
      "crate_id": 2,
      "name": "clone_to_uninit",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": true
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "dst",
                {
                  "raw_pointer": {
                    "is_mutable": true,
                    "type": {
                      "primitive": "u8"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": null
          }
        }
      }
    },
    "1869": {
      "id": 1869,
      "crate_id": 0,
      "name": null,
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "use": {
          "id": 1868,
          "is_glob": false,
          "name": "date",
          "source": "typespec_client_core::date"
        }
      }
    },
    "305": {
      "id": 305,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 303,
              "name": "TelemetryOptions"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            304
          ],
          "provided_trait_methods": [],
          "trait": null
        }
      }
    },
    "1115": {
      "id": 1115,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "$crate::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "$crate::fmt::Result"
              }
            }
          }
        }
      }
    },
    "398": {
      "id": 398,
      "crate_id": 0,
      "name": "TokenCredential",
      "visibility": "public",
      "docs": "Represents a credential capable of providing an OAuth token.",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "trait": {
          "bounds": [
            {
              "trait_bound": {
                "generic_params": [],
                "modifier": "none",
                "trait": {
                  "args": {
                    "angle_bracketed": {
                      "args": [],
                      "constraints": []
                    }
                  },
                  "id": 33,
                  "name": "Send"
                }
              }
            },
            {
              "trait_bound": {
                "generic_params": [],
                "modifier": "none",
                "trait": {
                  "args": {
                    "angle_bracketed": {
                      "args": [],
                      "constraints": []
                    }
                  },
                  "id": 35,
                  "name": "Sync"
                }
              }
            },
            {
              "trait_bound": {
                "generic_params": [],
                "modifier": "none",
                "trait": {
                  "args": {
                    "angle_bracketed": {
                      "args": [],
                      "constraints": []
                    }
                  },
                  "id": 107,
                  "name": "Debug"
                }
              }
            }
          ],
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "implementations": [],
          "is_auto": false,
          "is_dyn_compatible": true,
          "is_unsafe": false,
          "items": [
            553,
            554
          ]
        }
      }
    },
    "567": {
      "id": 567,
      "crate_id": 0,
      "name": "BLOB_PUBLIC_ACCESS",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "906": {
      "id": 906,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 871,
              "name": "LeaseId"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            904
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 82,
            "name": "Display"
          }
        }
      }
    },
    "1258": {
      "id": 1258,
      "crate_id": 0,
      "name": "Error",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "assoc_type": {
          "bounds": [],
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 68,
              "name": "Infallible"
            }
          }
        }
      }
    },
    "332": {
      "id": 332,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 303,
              "name": "TelemetryOptions"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            331
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 333,
            "name": "Default"
          }
        }
      }
    },
    "1168": {
      "id": 1168,
      "crate_id": 0,
      "name": "serialize",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "__S"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [],
                              "constraints": []
                            }
                          },
                          "id": 135,
                          "name": "_serde::Serializer"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "__S"
                  }
                }
              }
            ]
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "__serializer",
                {
                  "generic": "__S"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "qualified_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "name": "Ok",
                            "self_type": {
                              "generic": "__S"
                            },
                            "trait": {
                              "args": null,
                              "id": 135,
                              "name": ""
                            }
                          }
                        }
                      },
                      {
                        "type": {
                          "qualified_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "name": "Error",
                            "self_type": {
                              "generic": "__S"
                            },
                            "trait": {
                              "args": null,
                              "id": 135,
                              "name": ""
                            }
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 64,
                "name": "_serde::__private::Result"
              }
            }
          }
        }
      }
    },
    "627": {
      "id": 627,
      "crate_id": 0,
      "name": "headers",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "module": {
          "is_crate": false,
          "is_stripped": false,
          "items": [
            556,
            558,
            559,
            560,
            561,
            562,
            563,
            564,
            565,
            566,
            567,
            568,
            569,
            570,
            571,
            572,
            573,
            574,
            575,
            576,
            577,
            578,
            579,
            580,
            581,
            582,
            583,
            584,
            585,
            586,
            587,
            588,
            589,
            590,
            591,
            592,
            593,
            594,
            595,
            596,
            597,
            598,
            599,
            600,
            601,
            602,
            603,
            604,
            605,
            606,
            607,
            608,
            609,
            610,
            611,
            612,
            613,
            614,
            615,
            616,
            617,
            618,
            619,
            620,
            621,
            622,
            623,
            624,
            626
          ]
        }
      }
    },
    "663": {
      "id": 663,
      "crate_id": 0,
      "name": "get_provisioning_state",
      "visibility": "public",
      "docs": "Extract the provisioning state based on the status code and response body\n\nRef: <https://github.com/Azure/azure-sdk-for-python/blob/main/sdk/core/azure-core/azure/core/polling/base_polling.py>",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "S"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [],
                              "constraints": []
                            }
                          },
                          "id": 137,
                          "name": "Serialize"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "S"
                  }
                }
              }
            ]
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "status_code",
                {
                  "resolved_path": {
                    "args": {
                      "angle_bracketed": {
                        "args": [],
                        "constraints": []
                      }
                    },
                    "id": 664,
                    "name": "crate::StatusCode"
                  }
                }
              ],
              [
                "body",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "S"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "resolved_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "id": 661,
                            "name": "crate::lro::LroStatus"
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 26,
                "name": "crate::Result"
              }
            }
          }
        }
      }
    },
    "546": {
      "id": 546,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 518,
              "name": "AccessToken"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            545
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "1063": {
      "id": 1063,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1031,
              "name": "MaxResults"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1062
          ],
          "provided_trait_methods": [
            "ne"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 112,
            "name": "PartialEq"
          }
        }
      }
    },
    "1076": {
      "id": 1076,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1031,
              "name": "MaxResults"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1075
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "type": {
                                  "primitive": "u32"
                                }
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 1077,
                        "name": "NonZero"
                      }
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 55,
            "name": "From"
          }
        }
      }
    },
    "460": {
      "id": 460,
      "crate_id": 0,
      "name": "clone",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 436,
                "name": "TelemetryPolicy"
              }
            }
          }
        }
      }
    },
    "1341": {
      "id": 1341,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1314,
              "name": "SourceLeaseId"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1340
          ],
          "provided_trait_methods": [
            "clone_from"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 53,
            "name": "Clone"
          }
        }
      }
    },
    "1911": {
      "id": 1911,
      "crate_id": 0,
      "name": "SessionToken",
      "visibility": "public",
      "docs": "A unique session token.",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "type_alias": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 27,
              "name": "String"
            }
          }
        }
      }
    },
    "1066": {
      "id": 1066,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1031,
              "name": "MaxResults"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1064
          ],
          "provided_trait_methods": [
            "lt",
            "le",
            "gt",
            "ge"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 1067,
            "name": "PartialOrd"
          }
        }
      }
    },
    "545": {
      "id": 545,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "$crate::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "$crate::fmt::Result"
              }
            }
          }
        }
      }
    },
    "1656": {
      "id": 1656,
      "crate_id": 0,
      "name": "name",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 557,
                "name": "$crate::http::headers::HeaderName"
              }
            }
          }
        }
      }
    },
    "397": {
      "id": 397,
      "crate_id": 0,
      "name": "new",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "A"
              },
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "B"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [],
                              "constraints": [
                                {
                                  "args": {
                                    "angle_bracketed": {
                                      "args": [],
                                      "constraints": []
                                    }
                                  },
                                  "binding": {
                                    "equality": {
                                      "type": {
                                        "generic": "B"
                                      }
                                    }
                                  },
                                  "name": "Item"
                                }
                              ]
                            }
                          },
                          "id": 399,
                          "name": "IntoIterator"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "A"
                  }
                }
              },
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [
                                {
                                  "type": {
                                    "resolved_path": {
                                      "args": {
                                        "angle_bracketed": {
                                          "args": [],
                                          "constraints": []
                                        }
                                      },
                                      "id": 27,
                                      "name": "String"
                                    }
                                  }
                                }
                              ],
                              "constraints": []
                            }
                          },
                          "id": 58,
                          "name": "Into"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "B"
                  }
                }
              }
            ]
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "credential",
                {
                  "resolved_path": {
                    "args": {
                      "angle_bracketed": {
                        "args": [
                          {
                            "type": {
                              "dyn_trait": {
                                "lifetime": null,
                                "traits": [
                                  {
                                    "generic_params": [],
                                    "trait": {
                                      "args": {
                                        "angle_bracketed": {
                                          "args": [],
                                          "constraints": []
                                        }
                                      },
                                      "id": 398,
                                      "name": "TokenCredential"
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ],
                        "constraints": []
                      }
                    },
                    "id": 356,
                    "name": "Arc"
                  }
                }
              ],
              [
                "scopes",
                {
                  "generic": "A"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "596": {
      "id": 596,
      "crate_id": 0,
      "name": "LEASE_ID",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "623": {
      "id": 623,
      "crate_id": 0,
      "name": "USER",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "911": {
      "id": 911,
      "crate_id": 0,
      "name": "from_str",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "primitive": "str"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "generic": "Self"
                        }
                      },
                      {
                        "type": {
                          "qualified_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "name": "Err",
                            "self_type": {
                              "generic": "Self"
                            },
                            "trait": {
                              "args": null,
                              "id": 125,
                              "name": ""
                            }
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 64,
                "name": "Result"
              }
            }
          }
        }
      }
    },
    "1409": {
      "id": 1409,
      "crate_id": 0,
      "name": "new",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "S"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [
                                {
                                  "type": {
                                    "resolved_path": {
                                      "args": {
                                        "angle_bracketed": {
                                          "args": [
                                            {
                                              "lifetime": "'static"
                                            },
                                            {
                                              "type": {
                                                "primitive": "str"
                                              }
                                            }
                                          ],
                                          "constraints": []
                                        }
                                      },
                                      "id": 475,
                                      "name": "std::borrow::Cow"
                                    }
                                  }
                                }
                              ],
                              "constraints": []
                            }
                          },
                          "id": 58,
                          "name": "Into"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "S"
                  }
                }
              }
            ]
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "generic": "S"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "1446": {
      "id": 1446,
      "crate_id": 0,
      "name": "from_static",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": true,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": "'static",
                    "type": {
                      "primitive": "str"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "957": {
      "id": 957,
      "crate_id": 0,
      "name": "Seconds",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "variant": {
          "discriminant": null,
          "kind": {
            "tuple": [
              956
            ]
          }
        }
      }
    },
    "952": {
      "id": 952,
      "crate_id": 0,
      "name": "value",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 14,
                "name": "headers::HeaderValue"
              }
            }
          }
        }
      }
    },
    "1444": {
      "id": 1444,
      "crate_id": 0,
      "name": "User",
      "visibility": "public",
      "docs": "The (friendly) name of the user making the request",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "impls": [
            1447,
            1448,
            1449,
            1450,
            1451,
            1452,
            1453,
            1454,
            1455,
            1456,
            1457,
            1458,
            1459,
            1460,
            1461,
            1462,
            1463,
            1464,
            1465,
            1466,
            1467,
            1468,
            1469,
            1471,
            1473,
            1475,
            1478
          ],
          "kind": {
            "tuple": [
              null
            ]
          }
        }
      }
    },
    "131": {
      "id": 131,
      "crate_id": 0,
      "name": "deserialize",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "D"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [
                                {
                                  "lifetime": "'de"
                                }
                              ],
                              "constraints": []
                            }
                          },
                          "id": 132,
                          "name": "serde::Deserializer"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "D"
                  }
                }
              }
            ]
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "deserializer",
                {
                  "generic": "D"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "generic": "Self"
                        }
                      },
                      {
                        "type": {
                          "qualified_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "name": "Error",
                            "self_type": {
                              "generic": "D"
                            },
                            "trait": {
                              "args": null,
                              "id": 132,
                              "name": ""
                            }
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 64,
                "name": "::core::result::Result"
              }
            }
          }
        }
      }
    },
    "1733": {
      "id": 1733,
      "crate_id": 0,
      "name": "new",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "S"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [
                                {
                                  "type": {
                                    "resolved_path": {
                                      "args": {
                                        "angle_bracketed": {
                                          "args": [
                                            {
                                              "lifetime": "'static"
                                            },
                                            {
                                              "type": {
                                                "primitive": "str"
                                              }
                                            }
                                          ],
                                          "constraints": []
                                        }
                                      },
                                      "id": 475,
                                      "name": "std::borrow::Cow"
                                    }
                                  }
                                }
                              ],
                              "constraints": []
                            }
                          },
                          "id": 58,
                          "name": "Into"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "S"
                  }
                }
              }
            ]
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "generic": "S"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "221": {
      "id": 221,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 196,
              "name": "LeaseDuration"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            220
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "1845": {
      "id": 1845,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "borrowed_ref": {
              "is_mutable": false,
              "lifetime": "'static",
              "type": {
                "primitive": "str"
              }
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1844
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 1805,
                        "name": "TestMode"
                      }
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 55,
            "name": "From"
          }
        }
      }
    },
    "1246": {
      "id": 1246,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1217,
              "name": "Range"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 109,
            "name": "StructuralPartialEq"
          }
        }
      }
    },
    "1408": {
      "id": 1408,
      "crate_id": 0,
      "name": "ClientVersion",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "impls": [
            1411,
            1412,
            1413,
            1414,
            1415,
            1416,
            1417,
            1418,
            1419,
            1420,
            1421,
            1422,
            1423,
            1424,
            1425,
            1426,
            1427,
            1428,
            1429,
            1430,
            1431,
            1432,
            1433,
            1435,
            1437,
            1439,
            1442
          ],
          "kind": {
            "tuple": [
              null
            ]
          }
        }
      }
    },
    "1581": {
      "id": 1581,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1552,
              "name": "ClientRequestId"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1580
          ],
          "provided_trait_methods": [
            "clone_from"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 53,
            "name": "Clone"
          }
        }
      }
    },
    "1547": {
      "id": 1547,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1516,
              "name": "App"
            }
          },
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "S"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [
                                {
                                  "type": {
                                    "resolved_path": {
                                      "args": {
                                        "angle_bracketed": {
                                          "args": [
                                            {
                                              "lifetime": "'static"
                                            },
                                            {
                                              "type": {
                                                "primitive": "str"
                                              }
                                            }
                                          ],
                                          "constraints": []
                                        }
                                      },
                                      "id": 475,
                                      "name": "std::borrow::Cow"
                                    }
                                  }
                                }
                              ],
                              "constraints": []
                            }
                          },
                          "id": 58,
                          "name": "Into"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "S"
                  }
                }
              }
            ]
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1546
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [
                  {
                    "type": {
                      "generic": "S"
                    }
                  }
                ],
                "constraints": []
              }
            },
            "id": 55,
            "name": "From"
          }
        }
      }
    },
    "1118": {
      "id": 1118,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1083,
              "name": "Metadata"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1117
          ],
          "provided_trait_methods": [
            "clone_from"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 53,
            "name": "Clone"
          }
        }
      }
    },
    "244": {
      "id": 244,
      "crate_id": 0,
      "name": "Acquire",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "variant": {
          "discriminant": null,
          "kind": "plain"
        }
      }
    },
    "1247": {
      "id": 1247,
      "crate_id": 0,
      "name": "eq",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "other",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 1217,
                        "name": "Range"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "primitive": "bool"
            }
          }
        }
      }
    },
    "1614": {
      "id": 1614,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[inline]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "$crate::fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "$crate::fmt::Result"
              }
            }
          }
        }
      }
    },
    "549": {
      "id": 549,
      "crate_id": 0,
      "name": "serialize",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "__S"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [],
                              "constraints": []
                            }
                          },
                          "id": 135,
                          "name": "_serde::Serializer"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "__S"
                  }
                }
              }
            ]
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "__serializer",
                {
                  "generic": "__S"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "qualified_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "name": "Ok",
                            "self_type": {
                              "generic": "__S"
                            },
                            "trait": {
                              "args": null,
                              "id": 135,
                              "name": ""
                            }
                          }
                        }
                      },
                      {
                        "type": {
                          "qualified_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [],
                                "constraints": []
                              }
                            },
                            "name": "Error",
                            "self_type": {
                              "generic": "__S"
                            },
                            "trait": {
                              "args": null,
                              "id": 135,
                              "name": ""
                            }
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 64,
                "name": "_serde::__private::Result"
              }
            }
          }
        }
      }
    },
    "563": {
      "id": 563,
      "crate_id": 0,
      "name": "BLOB_ACCESS_TIER",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "604": {
      "id": 604,
      "crate_id": 0,
      "name": "NAMESPACE_ENABLED",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "573": {
      "id": 573,
      "crate_id": 0,
      "name": "CONTINUATION",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "_",
            "is_literal": false,
            "value": null
          },
          "type": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 557,
              "name": "HeaderName"
            }
          }
        }
      }
    },
    "1163": {
      "id": 1163,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1131,
              "name": "NextMarker"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1162
          ],
          "provided_trait_methods": [
            "clone_from"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 53,
            "name": "Clone"
          }
        }
      }
    },
    "691": {
      "id": 691,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 661,
              "name": "LroStatus"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            690
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "1859": {
      "id": 1859,
      "crate_id": 0,
      "name": "error",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "module": {
          "is_crate": false,
          "is_stripped": false,
          "items": [
            1856,
            1858
          ]
        }
      }
    },
    "1249": {
      "id": 1249,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1217,
              "name": "Range"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [
            "assert_receiver_is_total_eq"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 114,
            "name": "Eq"
          }
        }
      }
    },
    "1510": {
      "id": 1510,
      "crate_id": 0,
      "name": "from",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "generic": "S"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "21": {
      "id": 21,
      "crate_id": 0,
      "name": "API_VERSION",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "constant": {
          "const": {
            "expr": "\"api-version\"",
            "is_literal": true,
            "value": null
          },
          "type": {
            "borrowed_ref": {
              "is_mutable": false,
              "lifetime": null,
              "type": {
                "primitive": "str"
              }
            }
          }
        }
      }
    },
    "464": {
      "id": 464,
      "crate_id": 0,
      "name": "send",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[allow(elided_named_lifetimes, clippy :: async_yields_async, clippy ::\ndiverging_sub_expression, clippy :: let_unit_value, clippy ::\nneedless_arbitrary_self_type, clippy :: no_effect_underscore_binding, clippy\n:: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)]"
      ],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [
              {
                "kind": {
                  "lifetime": {
                    "outlives": []
                  }
                },
                "name": "'life0"
              },
              {
                "kind": {
                  "lifetime": {
                    "outlives": []
                  }
                },
                "name": "'life1"
              },
              {
                "kind": {
                  "lifetime": {
                    "outlives": []
                  }
                },
                "name": "'life2"
              },
              {
                "kind": {
                  "lifetime": {
                    "outlives": []
                  }
                },
                "name": "'life3"
              },
              {
                "kind": {
                  "lifetime": {
                    "outlives": []
                  }
                },
                "name": "'async_trait"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "outlives": "'async_trait"
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "Self"
                  }
                }
              },
              {
                "lifetime_predicate": {
                  "lifetime": "'life0",
                  "outlives": [
                    "'async_trait"
                  ]
                }
              },
              {
                "lifetime_predicate": {
                  "lifetime": "'life1",
                  "outlives": [
                    "'async_trait"
                  ]
                }
              },
              {
                "lifetime_predicate": {
                  "lifetime": "'life2",
                  "outlives": [
                    "'async_trait"
                  ]
                }
              },
              {
                "lifetime_predicate": {
                  "lifetime": "'life3",
                  "outlives": [
                    "'async_trait"
                  ]
                }
              }
            ]
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": "'life0",
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "ctx",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": "'life1",
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 427,
                        "name": "Context"
                      }
                    }
                  }
                }
              ],
              [
                "request",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": "'life2",
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 428,
                        "name": "Request"
                      }
                    }
                  }
                }
              ],
              [
                "next",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": "'life3",
                    "type": {
                      "slice": {
                        "resolved_path": {
                          "args": {
                            "angle_bracketed": {
                              "args": [
                                {
                                  "type": {
                                    "dyn_trait": {
                                      "lifetime": null,
                                      "traits": [
                                        {
                                          "generic_params": [],
                                          "trait": {
                                            "args": {
                                              "angle_bracketed": {
                                                "args": [],
                                                "constraints": []
                                              }
                                            },
                                            "id": 357,
                                            "name": "Policy"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ],
                              "constraints": []
                            }
                          },
                          "id": 356,
                          "name": "Arc"
                        }
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "resolved_path": {
                            "args": {
                              "angle_bracketed": {
                                "args": [
                                  {
                                    "type": {
                                      "dyn_trait": {
                                        "lifetime": "'async_trait",
                                        "traits": [
                                          {
                                            "generic_params": [],
                                            "trait": {
                                              "args": {
                                                "angle_bracketed": {
                                                  "args": [],
                                                  "constraints": [
                                                    {
                                                      "args": {
                                                        "angle_bracketed": {
                                                          "args": [],
                                                          "constraints": []
                                                        }
                                                      },
                                                      "binding": {
                                                        "equality": {
                                                          "type": {
                                                            "resolved_path": {
                                                              "args": {
                                                                "angle_bracketed": {
                                                                  "args": [],
                                                                  "constraints": []
                                                                }
                                                              },
                                                              "id": 432,
                                                              "name": "PolicyResult"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "name": "Output"
                                                    }
                                                  ]
                                                }
                                              },
                                              "id": 431,
                                              "name": "::core::future::Future"
                                            }
                                          },
                                          {
                                            "generic_params": [],
                                            "trait": {
                                              "args": {
                                                "angle_bracketed": {
                                                  "args": [],
                                                  "constraints": []
                                                }
                                              },
                                              "id": 33,
                                              "name": "::core::marker::Send"
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ],
                                "constraints": []
                              }
                            },
                            "id": 430,
                            "name": "Box"
                          }
                        }
                      }
                    ],
                    "constraints": []
                  }
                },
                "id": 429,
                "name": "::core::pin::Pin"
              }
            }
          }
        }
      }
    },
    "740": {
      "id": 740,
      "crate_id": 0,
      "name": "fmt",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "f",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [
                              {
                                "lifetime": "'_"
                              }
                            ],
                            "constraints": []
                          }
                        },
                        "id": 104,
                        "name": "fmt::Formatter"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "resolved_path": {
                "args": {
                  "angle_bracketed": {
                    "args": [],
                    "constraints": []
                  }
                },
                "id": 105,
                "name": "fmt::Result"
              }
            }
          }
        }
      }
    },
    "1161": {
      "id": 1161,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1131,
              "name": "NextMarker"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1160
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 107,
            "name": "Debug"
          }
        }
      }
    },
    "1478": {
      "id": 1478,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1444,
              "name": "User"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1476,
            1477
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 771,
            "name": "Header"
          }
        }
      }
    },
    "387": {
      "id": 387,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 352,
              "name": "Pipeline"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            386
          ],
          "provided_trait_methods": [
            "clone_from"
          ],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 53,
            "name": "Clone"
          }
        }
      }
    },
    "1622": {
      "id": 1622,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1588,
              "name": "ContentDisposition"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1620,
            1621
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 771,
            "name": "Header"
          }
        }
      }
    },
    "1169": {
      "id": 1169,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 1131,
              "name": "NextMarker"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [
            1168
          ],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 137,
            "name": "Serialize"
          }
        }
      }
    },
    "1797": {
      "id": 1797,
      "crate_id": 0,
      "name": "append_to_url_query",
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "self",
                {
                  "borrowed_ref": {
                    "is_mutable": false,
                    "lifetime": null,
                    "type": {
                      "generic": "Self"
                    }
                  }
                }
              ],
              [
                "url",
                {
                  "borrowed_ref": {
                    "is_mutable": true,
                    "lifetime": null,
                    "type": {
                      "resolved_path": {
                        "args": {
                          "angle_bracketed": {
                            "args": [],
                            "constraints": []
                          }
                        },
                        "id": 3,
                        "name": "$crate::http::Url"
                      }
                    }
                  }
                }
              ]
            ],
            "is_c_variadic": false,
            "output": null
          }
        }
      }
    },
    "1767": {
      "id": 1767,
      "crate_id": 0,
      "name": "new",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "function": {
          "generics": {
            "params": [
              {
                "kind": {
                  "type": {
                    "bounds": [],
                    "default": null,
                    "is_synthetic": false
                  }
                },
                "name": "S"
              }
            ],
            "where_predicates": [
              {
                "bound_predicate": {
                  "bounds": [
                    {
                      "trait_bound": {
                        "generic_params": [],
                        "modifier": "none",
                        "trait": {
                          "args": {
                            "angle_bracketed": {
                              "args": [
                                {
                                  "type": {
                                    "resolved_path": {
                                      "args": {
                                        "angle_bracketed": {
                                          "args": [
                                            {
                                              "lifetime": "'static"
                                            },
                                            {
                                              "type": {
                                                "primitive": "str"
                                              }
                                            }
                                          ],
                                          "constraints": []
                                        }
                                      },
                                      "id": 475,
                                      "name": "std::borrow::Cow"
                                    }
                                  }
                                }
                              ],
                              "constraints": []
                            }
                          },
                          "id": 58,
                          "name": "Into"
                        }
                      }
                    }
                  ],
                  "generic_params": [],
                  "type": {
                    "generic": "S"
                  }
                }
              }
            ]
          },
          "has_body": true,
          "header": {
            "abi": "Rust",
            "is_async": false,
            "is_const": false,
            "is_unsafe": false
          },
          "sig": {
            "inputs": [
              [
                "s",
                {
                  "generic": "S"
                }
              ]
            ],
            "is_c_variadic": false,
            "output": {
              "generic": "Self"
            }
          }
        }
      }
    },
    "275": {
      "id": 275,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 249,
              "name": "LeaseAction"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 109,
            "name": "StructuralPartialEq"
          }
        }
      }
    },
    "746": {
      "id": 746,
      "crate_id": 0,
      "name": "LessOrEqual",
      "visibility": "default",
      "docs": "If the object's sequence number is less than or equal to the specified\nvalue, the request proceeds; otherwise it fails with the\nSequenceNumberConditionNotMet error (HTTP status code 412 – Precondition\nFailed).",
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "variant": {
          "discriminant": null,
          "kind": {
            "tuple": [
              745
            ]
          }
        }
      }
    },
    "822": {
      "id": 822,
      "crate_id": 0,
      "name": null,
      "visibility": "default",
      "docs": null,
      "links": {},
      "attrs": [
        "#[automatically_derived]"
      ],
      "deprecation": null,
      "inner": {
        "impl": {
          "blanket_impl": null,
          "for": {
            "resolved_path": {
              "args": {
                "angle_bracketed": {
                  "args": [],
                  "constraints": []
                }
              },
              "id": 795,
              "name": "IfSourceMatchCondition"
            }
          },
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "is_negative": false,
          "is_synthetic": false,
          "is_unsafe": false,
          "items": [],
          "provided_trait_methods": [],
          "trait": {
            "args": {
              "angle_bracketed": {
                "args": [],
                "constraints": []
              }
            },
            "id": 109,
            "name": "StructuralPartialEq"
          }
        }
      }
    },
    "1624": {
      "id": 1624,
      "crate_id": 0,
      "name": "Continuation",
      "visibility": "public",
      "docs": null,
      "links": {},
      "attrs": [],
      "deprecation": null,
      "inner": {
        "struct": {
          "generics": {
            "params": [],
            "where_predicates": []
          },
          "impls": [
            1627,
            1628,
            1629,
            1630,
            1631,
            1632,
            1633,
            1634,
            1635,
            1636,
            1637,
            1638,
            1639,
            1640,
            1641,
            1642,
            1643,
            1644,
            1645,
            1646,
            1647,
            1648,
            1649,
            1651,
            1653,
            1655,
            1658
          ],
          "kind": {
            "tuple": [
              null
            ]
          }
        }
      }
    }
  },
  "format_version": 37
}