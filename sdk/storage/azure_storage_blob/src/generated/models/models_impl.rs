// Copyright (c) Microsoft Corporation. All rights reserved.
//
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Rust Code Generator. DO NOT EDIT.

use super::{BlobTags, BlockLookupList, KeyInfo, QueryRequest, StorageServiceProperties};
use azure_core::{
    http::{RequestContent, XmlFormat},
    xml::to_xml,
    Result,
};

impl TryFrom<BlobTags> for RequestContent<BlobTags, XmlFormat> {
    type Error = azure_core::Error;
    fn try_from(value: BlobTags) -> Result<Self> {
        Ok(to_xml(&value)?.into())
    }
}

impl TryFrom<BlockLookupList> for RequestContent<BlockLookupList, XmlFormat> {
    type Error = azure_core::Error;
    fn try_from(value: BlockLookupList) -> Result<Self> {
        Ok(to_xml(&value)?.into())
    }
}

impl TryFrom<KeyInfo> for RequestContent<KeyInfo, XmlFormat> {
    type Error = azure_core::Error;
    fn try_from(value: KeyInfo) -> Result<Self> {
        Ok(to_xml(&value)?.into())
    }
}

impl TryFrom<QueryRequest> for RequestContent<QueryRequest, XmlFormat> {
    type Error = azure_core::Error;
    fn try_from(value: QueryRequest) -> Result<Self> {
        Ok(to_xml(&value)?.into())
    }
}

impl TryFrom<StorageServiceProperties> for RequestContent<StorageServiceProperties, XmlFormat> {
    type Error = azure_core::Error;
    fn try_from(value: StorageServiceProperties) -> Result<Self> {
        Ok(to_xml(&value)?.into())
    }
}
