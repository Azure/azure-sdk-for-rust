// Copyright (c) Microsoft Corporation. All rights reserved.
//
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Rust Code Generator. DO NOT EDIT.

use super::{
    BlobTags, BlockLookupList, KeyInfo, QueryRequest, SignedIdentifier, StorageServiceProperties,
};
use azure_core::{http::RequestContent, xml::to_xml, Result};

impl TryFrom<BlobTags> for RequestContent<BlobTags> {
    type Error = azure_core::Error;
    fn try_from(value: BlobTags) -> Result<Self> {
        RequestContent::try_from(to_xml(&value)?)
    }
}

impl TryFrom<BlockLookupList> for RequestContent<BlockLookupList> {
    type Error = azure_core::Error;
    fn try_from(value: BlockLookupList) -> Result<Self> {
        RequestContent::try_from(to_xml(&value)?)
    }
}

impl TryFrom<KeyInfo> for RequestContent<KeyInfo> {
    type Error = azure_core::Error;
    fn try_from(value: KeyInfo) -> Result<Self> {
        RequestContent::try_from(to_xml(&value)?)
    }
}

impl TryFrom<QueryRequest> for RequestContent<QueryRequest> {
    type Error = azure_core::Error;
    fn try_from(value: QueryRequest) -> Result<Self> {
        RequestContent::try_from(to_xml(&value)?)
    }
}

impl TryFrom<SignedIdentifier> for RequestContent<SignedIdentifier> {
    type Error = azure_core::Error;
    fn try_from(value: SignedIdentifier) -> Result<Self> {
        RequestContent::try_from(to_xml(&value)?)
    }
}

impl TryFrom<StorageServiceProperties> for RequestContent<StorageServiceProperties> {
    type Error = azure_core::Error;
    fn try_from(value: StorageServiceProperties) -> Result<Self> {
        RequestContent::try_from(to_xml(&value)?)
    }
}
