// Copyright (c) Microsoft Corporation. All rights reserved.
//
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Rust Code Generator. DO NOT EDIT.

use super::QueueMessage;
use azure_core::{
    fmt::SafeDebug,
    http::{ClientMethodOptions, RequestContent},
};
use std::collections::HashMap;

/// Options to be passed to `QueueClient::clear()`
#[derive(Clone, Default, SafeDebug)]
pub struct QueueClientClearOptions<'a> {
    /// An opaque, globally-unique, client-generated string identifier for the request.
    pub client_request_id: Option<String>,

    /// Allows customization of the method call.
    pub method_options: ClientMethodOptions<'a>,
}

/// Options to be passed to `QueueClient::create()`
#[derive(Clone, Default, SafeDebug)]
pub struct QueueClientCreateOptions<'a> {
    /// An opaque, globally-unique, client-generated string identifier for the request.
    pub client_request_id: Option<String>,

    /// The metadata headers.
    pub metadata: Option<HashMap<String, String>>,

    /// Allows customization of the method call.
    pub method_options: ClientMethodOptions<'a>,

    /// The timeout parameter is expressed in seconds. For more information, see [Setting Timeouts for Queue Service Operations.](https://learn.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations)
    pub timeout: Option<i32>,
}

/// Options to be passed to `QueueClient::delete()`
#[derive(Clone, Default, SafeDebug)]
pub struct QueueClientDeleteOptions<'a> {
    /// An opaque, globally-unique, client-generated string identifier for the request.
    pub client_request_id: Option<String>,

    /// The metadata headers.
    pub metadata: Option<HashMap<String, String>>,

    /// Allows customization of the method call.
    pub method_options: ClientMethodOptions<'a>,

    /// The timeout parameter is expressed in seconds. For more information, see [Setting Timeouts for Queue Service Operations.](https://learn.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations)
    pub timeout: Option<i32>,
}

/// Options to be passed to `QueueClient::delete_message()`
#[derive(Clone, Default, SafeDebug)]
pub struct QueueClientDeleteMessageOptions<'a> {
    /// An opaque, globally-unique, client-generated string identifier for the request.
    pub client_request_id: Option<String>,

    /// Allows customization of the method call.
    pub method_options: ClientMethodOptions<'a>,
}

/// Options to be passed to `QueueClient::dequeue()`
#[derive(Clone, Default, SafeDebug)]
pub struct QueueClientDequeueOptions<'a> {
    /// An opaque, globally-unique, client-generated string identifier for the request.
    pub client_request_id: Option<String>,

    /// Allows customization of the method call.
    pub method_options: ClientMethodOptions<'a>,

    /// Optional. A nonzero integer value that specifies the number of messages to
    /// retrieve from the queue, up to a maximum of 32. If fewer are visible, the
    /// visible messages are returned. By default, a single message is retrieved from
    /// the queue with this operation.
    pub number_of_messages: Option<i32>,

    /// The timeout parameter is expressed in seconds. For more information, see [Setting Timeouts for Queue Service Operations.](https://learn.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations)
    pub timeout: Option<i32>,

    /// Specifies the new visibility timeout value, in seconds, relative to server time. The default value is 30 seconds. A specified
    /// value must be larger than or equal to 1 second, and cannot be larger than 7 days, or larger than 2 hours on REST protocol
    /// versions prior to version 2011-08-18. The visibility timeout of a message can be set to a value later than the expiry
    /// time.
    pub visibility_timeout: Option<i32>,
}

/// Options to be passed to `QueueClient::enqueue()`
#[derive(Clone, Default, SafeDebug)]
pub struct QueueClientEnqueueOptions<'a> {
    /// An opaque, globally-unique, client-generated string identifier for the request.
    pub client_request_id: Option<String>,

    /// Optional. Specifies the time-to-live interval for the message, in seconds.
    /// Prior to version 2017-07-29, the maximum time-to-live allowed is 7 days. For
    /// version 2017-07-29 or later, the maximum time-to-live can be any positive
    /// number, as well as -1 indicating that the message does not expire. If this
    /// parameter is omitted, the default time-to-live is 7 days.
    pub message_time_to_live: Option<i32>,

    /// Allows customization of the method call.
    pub method_options: ClientMethodOptions<'a>,

    /// Specifies the new visibility timeout value, in seconds, relative to server time. The default value is 30 seconds. A specified
    /// value must be larger than or equal to 1 second, and cannot be larger than 7 days, or larger than 2 hours on REST protocol
    /// versions prior to version 2011-08-18. The visibility timeout of a message can be set to a value later than the expiry
    /// time.
    pub visibility_timeout: Option<i32>,
}

/// Options to be passed to `QueueClient::get_access_policy()`
#[derive(Clone, Default, SafeDebug)]
pub struct QueueClientGetAccessPolicyOptions<'a> {
    /// An opaque, globally-unique, client-generated string identifier for the request.
    pub client_request_id: Option<String>,

    /// Allows customization of the method call.
    pub method_options: ClientMethodOptions<'a>,

    /// The timeout parameter is expressed in seconds. For more information, see [Setting Timeouts for Queue Service Operations.](https://learn.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations)
    pub timeout: Option<i32>,
}

/// Options to be passed to `QueueClient::get_metadata()`
#[derive(Clone, Default, SafeDebug)]
pub struct QueueClientGetMetadataOptions<'a> {
    /// An opaque, globally-unique, client-generated string identifier for the request.
    pub client_request_id: Option<String>,

    /// Allows customization of the method call.
    pub method_options: ClientMethodOptions<'a>,

    /// The timeout parameter is expressed in seconds. For more information, see [Setting Timeouts for Queue Service Operations.](https://learn.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations)
    pub timeout: Option<i32>,
}

/// Options to be passed to `QueueClient::peek()`
#[derive(Clone, Default, SafeDebug)]
pub struct QueueClientPeekOptions<'a> {
    /// An opaque, globally-unique, client-generated string identifier for the request.
    pub client_request_id: Option<String>,

    /// Allows customization of the method call.
    pub method_options: ClientMethodOptions<'a>,

    /// Optional. A nonzero integer value that specifies the number of messages to
    /// retrieve from the queue, up to a maximum of 32. If fewer are visible, the
    /// visible messages are returned. By default, a single message is retrieved from
    /// the queue with this operation.
    pub number_of_messages: Option<i32>,
}

/// Options to be passed to `QueueClient::set_access_policy()`
#[derive(Clone, Default, SafeDebug)]
pub struct QueueClientSetAccessPolicyOptions<'a> {
    /// An opaque, globally-unique, client-generated string identifier for the request.
    pub client_request_id: Option<String>,

    /// Allows customization of the method call.
    pub method_options: ClientMethodOptions<'a>,

    /// The timeout parameter is expressed in seconds. For more information, see [Setting Timeouts for Queue Service Operations.](https://learn.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations)
    pub timeout: Option<i32>,
}

/// Options to be passed to `QueueClient::set_metadata()`
#[derive(Clone, Default, SafeDebug)]
pub struct QueueClientSetMetadataOptions<'a> {
    /// An opaque, globally-unique, client-generated string identifier for the request.
    pub client_request_id: Option<String>,

    /// The metadata headers.
    pub metadata: Option<HashMap<String, String>>,

    /// Allows customization of the method call.
    pub method_options: ClientMethodOptions<'a>,

    /// The timeout parameter is expressed in seconds. For more information, see [Setting Timeouts for Queue Service Operations.](https://learn.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations)
    pub timeout: Option<i32>,
}

/// Options to be passed to `QueueClient::update()`
#[derive(Clone, Default, SafeDebug)]
pub struct QueueClientUpdateOptions<'a> {
    /// An opaque, globally-unique, client-generated string identifier for the request.
    pub client_request_id: Option<String>,

    /// Allows customization of the method call.
    pub method_options: ClientMethodOptions<'a>,

    /// A Message object which can be stored in a Queue
    pub queue_message: Option<RequestContent<QueueMessage>>,
}

/// Options to be passed to `QueueServiceClient::get_properties()`
#[derive(Clone, Default, SafeDebug)]
pub struct QueueServiceClientGetPropertiesOptions<'a> {
    /// An opaque, globally-unique, client-generated string identifier for the request.
    pub client_request_id: Option<String>,

    /// Allows customization of the method call.
    pub method_options: ClientMethodOptions<'a>,

    /// The timeout parameter is expressed in seconds. For more information, see [Setting Timeouts for Queue Service Operations.](https://learn.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations)
    pub timeout: Option<i32>,
}

/// Options to be passed to `QueueServiceClient::get_statistics()`
#[derive(Clone, Default, SafeDebug)]
pub struct QueueServiceClientGetStatisticsOptions<'a> {
    /// An opaque, globally-unique, client-generated string identifier for the request.
    pub client_request_id: Option<String>,

    /// Allows customization of the method call.
    pub method_options: ClientMethodOptions<'a>,

    /// The timeout parameter is expressed in seconds. For more information, see [Setting Timeouts for Queue Service Operations.](https://learn.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations)
    pub timeout: Option<i32>,
}

/// Options to be passed to `QueueServiceClient::list_queues_segment()`
#[derive(Clone, Default, SafeDebug)]
pub struct QueueServiceClientListQueuesSegmentOptions<'a> {
    /// An opaque, globally-unique, client-generated string identifier for the request.
    pub client_request_id: Option<String>,

    /// Include this parameter to specify that the queue's metadata be returned as part of the response body.
    pub include: Option<Vec<String>>,

    /// A string value that identifies the portion of the list of queues to be returned with the next listing operation. The operation
    /// returns the NextMarker value within the response body if the listing operation did not return all queues remaining to
    /// be listed with the current page. The NextMarker value can be used as the value for the marker parameter in a subsequent
    /// call to request the next page of list items. The marker value is opaque to the client.
    pub marker: Option<String>,

    /// Specifies the maximum number of queues to return. If the request does not specify maxresults, or specifies a value greater
    /// than 5000, the server will return up to 5000 items.
    pub maxresults: Option<i32>,

    /// Allows customization of the method call.
    pub method_options: ClientMethodOptions<'a>,

    /// Filters the results to return only queues whose name begins with the specified prefix.
    pub prefix: Option<String>,

    /// The timeout parameter is expressed in seconds. For more information, see [Setting Timeouts for Queue Service Operations.](https://learn.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations)
    pub timeout: Option<i32>,
}

impl QueueServiceClientListQueuesSegmentOptions<'_> {
    pub fn into_owned(self) -> QueueServiceClientListQueuesSegmentOptions<'static> {
        QueueServiceClientListQueuesSegmentOptions {
            client_request_id: self.client_request_id,
            include: self.include,
            marker: self.marker,
            maxresults: self.maxresults,
            method_options: ClientMethodOptions {
                context: self.method_options.context.into_owned(),
            },
            prefix: self.prefix,
            timeout: self.timeout,
        }
    }
}

/// Options to be passed to `QueueServiceClient::set_properties()`
#[derive(Clone, Default, SafeDebug)]
pub struct QueueServiceClientSetPropertiesOptions<'a> {
    /// An opaque, globally-unique, client-generated string identifier for the request.
    pub client_request_id: Option<String>,

    /// Allows customization of the method call.
    pub method_options: ClientMethodOptions<'a>,

    /// The timeout parameter is expressed in seconds. For more information, see [Setting Timeouts for Queue Service Operations.](https://learn.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations)
    pub timeout: Option<i32>,
}
