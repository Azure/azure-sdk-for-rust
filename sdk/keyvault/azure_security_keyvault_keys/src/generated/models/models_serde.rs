// Copyright (c) Microsoft Corporation. All rights reserved.
//
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Rust Code Generator. DO NOT EDIT.

use super::{
    GetRandomBytesRequest, KeyCreateParameters, KeyImportParameters, KeyOperationsParameters,
    KeyReleaseParameters, KeyRestoreParameters, KeyRotationPolicy, KeySignParameters,
    KeyUpdateParameters, KeyVerifyParameters,
};
use azure_core::http::RequestContent;
use azure_core::{json::to_json, Result};

impl TryFrom<GetRandomBytesRequest> for RequestContent<GetRandomBytesRequest> {
    type Error = azure_core::Error;
    fn try_from(value: GetRandomBytesRequest) -> Result<Self> {
        RequestContent::try_from(to_json(&value)?)
    }
}

impl TryFrom<KeyCreateParameters> for RequestContent<KeyCreateParameters> {
    type Error = azure_core::Error;
    fn try_from(value: KeyCreateParameters) -> Result<Self> {
        RequestContent::try_from(to_json(&value)?)
    }
}

impl TryFrom<KeyImportParameters> for RequestContent<KeyImportParameters> {
    type Error = azure_core::Error;
    fn try_from(value: KeyImportParameters) -> Result<Self> {
        RequestContent::try_from(to_json(&value)?)
    }
}

impl TryFrom<KeyOperationsParameters> for RequestContent<KeyOperationsParameters> {
    type Error = azure_core::Error;
    fn try_from(value: KeyOperationsParameters) -> Result<Self> {
        RequestContent::try_from(to_json(&value)?)
    }
}

impl TryFrom<KeyReleaseParameters> for RequestContent<KeyReleaseParameters> {
    type Error = azure_core::Error;
    fn try_from(value: KeyReleaseParameters) -> Result<Self> {
        RequestContent::try_from(to_json(&value)?)
    }
}

impl TryFrom<KeyRestoreParameters> for RequestContent<KeyRestoreParameters> {
    type Error = azure_core::Error;
    fn try_from(value: KeyRestoreParameters) -> Result<Self> {
        RequestContent::try_from(to_json(&value)?)
    }
}

impl TryFrom<KeyRotationPolicy> for RequestContent<KeyRotationPolicy> {
    type Error = azure_core::Error;
    fn try_from(value: KeyRotationPolicy) -> Result<Self> {
        RequestContent::try_from(to_json(&value)?)
    }
}

impl TryFrom<KeySignParameters> for RequestContent<KeySignParameters> {
    type Error = azure_core::Error;
    fn try_from(value: KeySignParameters) -> Result<Self> {
        RequestContent::try_from(to_json(&value)?)
    }
}

impl TryFrom<KeyUpdateParameters> for RequestContent<KeyUpdateParameters> {
    type Error = azure_core::Error;
    fn try_from(value: KeyUpdateParameters) -> Result<Self> {
        RequestContent::try_from(to_json(&value)?)
    }
}

impl TryFrom<KeyVerifyParameters> for RequestContent<KeyVerifyParameters> {
    type Error = azure_core::Error;
    fn try_from(value: KeyVerifyParameters) -> Result<Self> {
        RequestContent::try_from(to_json(&value)?)
    }
}
