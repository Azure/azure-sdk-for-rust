# NOTE: Please refer to https://aka.ms/azsdk/engsys/ci-yaml before editing this file.

trigger:
  branches:
    include:
    - main
    - hotfix/*
    - release/*
  paths:
    include:
    - sdk/cosmos/

extends:
  template: /eng/pipelines/templates/stages/archetype-sdk-client.yml
  parameters:
    ServiceDirectory: cosmos
    Artifacts:
    - name: azure_data_cosmos
      safeName: AzureDataCosmos
    AdditionalStages:
      - stage: Emulator
        displayName: "Run tests against Cosmos Emulator"
        variables:
        - template: /eng/pipelines/templates/variables/globals.yml@self
        - template: /eng/pipelines/templates/variables/image.yml@self
        jobs:
        - job: LaunchCosmosEmulator
          displayName: Launch Cosmos Emulator via Docker

          pool:
            name: $(WINDOWSPOOL)
            image: $(WINDOWSVMIMAGE)
            os: windows

          steps:
          - template: /eng/common/pipelines/templates/steps/cosmos-emulator.yml@self
            parameters:
              StartParameters: '/noexplorer /noui /enablepreview /disableratelimiting /enableaadauthentication /partitioncount=50 /consistency=Strong /EnableSqlComputeEndpoint'
          - powershell: |
              $Key = 'C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw=='
              $password = ConvertTo-SecureString -String $Key -Force -AsPlainText
              $cert = Get-ChildItem cert:\LocalMachine\My | Where-Object { $_.FriendlyName -eq "DocumentDbEmulatorCertificate" }
              Export-PfxCertificate -Cert $cert -FilePath ".\CosmosDbEmulatorCert.pfx" -Password $password | Out-Null
              $cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2
              $cert.Import(".\CosmosDbEmulatorCert.pfx", $Key, "DefaultKeySet")
              $cert | Export-Certificate -FilePath "$env:temp\CosmosDbEmulatorCert.cer" -Type CERT
            displayName: 'Export Cosmos DB Emulator Certificate'
          - template: /eng/common/pipelines/templates/steps/verify-agent-os.yml@self
            parameters:
              AgentImage: windows

          - template: /eng/pipelines/templates/steps/use-rust.yml@self
            parameters:
              Toolchain: msrv

          - pwsh: |
              # The "--test '*'" syntax causes cargo to only run tests in 'tests/' [https://stackoverflow.com/a/67786810]
              # The '--test-threads=1' forces Rust to run tests sequentially. The emulator slows down a lot when we run the tests in parallel.
              cargo test "+$env:TOOLCHAIN" --package azure_data_cosmos --test '*' --all-features -- --test-threads=1
            displayName: "Run Cosmos Tests against Emulator"
            env:
              TOOLCHAIN: ${{ variables.Toolchain }}
              AZURE_TEST_MODE: live
              AZURE_COSMOS_CONNECTION_STRING: emulator
              RUST_BACKTRACE: full
              RUST_LOG: trace
