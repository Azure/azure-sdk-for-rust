// Copyright (c) Microsoft Corporation. All rights reserved.
//
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Rust Code Generator. DO NOT EDIT.

use super::ReleaseDelay;
use azure_core::{fmt::SafeDebug, http::ClientMethodOptions};

/// Options to be passed to [`EventGridClient::acknowledge_cloud_events()`](crate::generated::clients::EventGridClient::acknowledge_cloud_events())
#[derive(Clone, Default, SafeDebug)]
pub struct EventGridClientAcknowledgeCloudEventsOptions<'a> {
    /// Allows customization of the method call.
    pub method_options: ClientMethodOptions<'a>,
}

/// Options to be passed to [`EventGridClient::publish_cloud_event()`](crate::generated::clients::EventGridClient::publish_cloud_event())
#[derive(Clone, Default, SafeDebug)]
pub struct EventGridClientPublishCloudEventOptions<'a> {
    /// Allows customization of the method call.
    pub method_options: ClientMethodOptions<'a>,
}

/// Options to be passed to [`EventGridClient::publish_cloud_events()`](crate::generated::clients::EventGridClient::publish_cloud_events())
#[derive(Clone, Default, SafeDebug)]
pub struct EventGridClientPublishCloudEventsOptions<'a> {
    /// Allows customization of the method call.
    pub method_options: ClientMethodOptions<'a>,
}

/// Options to be passed to [`EventGridClient::receive_cloud_events()`](crate::generated::clients::EventGridClient::receive_cloud_events())
#[derive(Clone, Default, SafeDebug)]
pub struct EventGridClientReceiveCloudEventsOptions<'a> {
    /// Max Events count to be received. Minimum value is 1, while maximum value is 100 events. If not specified, the default
    /// value is 1.
    pub max_events: Option<i32>,

    /// Max wait time value for receive operation in Seconds. It is the time in seconds that the server approximately waits for
    /// the availability of an event and responds to the request. If an event is available, the broker responds immediately to
    /// the client. Minimum value is 10 seconds, while maximum value is 120 seconds. If not specified, the default value is 60
    /// seconds.
    pub max_wait_time: Option<i32>,

    /// Allows customization of the method call.
    pub method_options: ClientMethodOptions<'a>,
}

/// Options to be passed to [`EventGridClient::reject_cloud_events()`](crate::generated::clients::EventGridClient::reject_cloud_events())
#[derive(Clone, Default, SafeDebug)]
pub struct EventGridClientRejectCloudEventsOptions<'a> {
    /// Allows customization of the method call.
    pub method_options: ClientMethodOptions<'a>,
}

/// Options to be passed to [`EventGridClient::release_cloud_events()`](crate::generated::clients::EventGridClient::release_cloud_events())
#[derive(Clone, Default, SafeDebug)]
pub struct EventGridClientReleaseCloudEventsOptions<'a> {
    /// Allows customization of the method call.
    pub method_options: ClientMethodOptions<'a>,

    /// Release cloud events with the specified delay in seconds.
    pub release_delay_in_seconds: Option<ReleaseDelay>,
}

/// Options to be passed to [`EventGridClient::renew_cloud_event_locks()`](crate::generated::clients::EventGridClient::renew_cloud_event_locks())
#[derive(Clone, Default, SafeDebug)]
pub struct EventGridClientRenewCloudEventLocksOptions<'a> {
    /// Allows customization of the method call.
    pub method_options: ClientMethodOptions<'a>,
}
